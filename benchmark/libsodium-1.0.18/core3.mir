@export memory
memory %memory:0 : {min 2} {
  <3952 byte(s)...> at i32 65536
  <300 byte(s)...> at i32 69488
}

table %table:0 : {min 19, max 19} funcref {
  <18 function(s)...> at i32 1
}

global %global:0 : var i32 = i32 65536

@import wasi_snapshot_preview1::proc_exit
function %function:0 : [i32] -> []

@import wasi_snapshot_preview1::poll_oneoff
function %function:1 : [i32, i32, i32, i32] -> [i32]

@import wasi_snapshot_preview1::clock_time_get
function %function:2 : [i32, i64, i32] -> [i32]

@import wasi_snapshot_preview1::random_get
function %function:3 : [i32, i32] -> [i32]

@import wasi_snapshot_preview1::fd_seek
function %function:4 : [i32, i64, i32, i32] -> [i32]

@import wasi_snapshot_preview1::fd_write
function %function:5 : [i32, i32, i32, i32] -> [i32]

@import wasi_snapshot_preview1::fd_close
function %function:6 : [i32] -> [i32]

@import wasi_snapshot_preview1::fd_fdstat_get
function %function:7 : [i32, i32] -> [i32]

function %function:8 : [] -> [] {
{}
#pred = {}
%entry:
  ret

}

@export _start
function %function:9 : [] -> [] {
{%0:i32}
#pred = {}
%entry:
  call %function:8()
  %1 = call %function:10()
  local.set %0 %1
  call %function:69()
  %2 = local.get %0
  %3 = int.eqz %2
  br.cond %3 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %4 = local.get %0
  call %function:0(%4)
  unreachable

#pred = {%entry}
%BB:1:
  ret

}

function %function:10 : [] -> [i32] {
{%0:i32, %1:i32, %2:i64, %3:i64, %4:i32, %5:i32, %6:i32}
#pred = {}
%entry:
  %7 = global.get %global:0
  %8 = const i32 32
  %9 = int.sub %7 %8
  local.set %0 %9
  global.set %global:0%9
  %10 = const i32 99
  local.set %1 %10
  %11 = call %function:42()
  br.cond %11 %BB:9 %BB:0

#pred = {%entry}
%BB:0:
  %12 = const i32 69528
  %13 = call %function:32(%12)
  %14 = local.get %0
  %15 = const i32 16
  %16 = int.add %14 %15
  %17 = const i32 0
  %18 = call %function:64(%16, %17)
  br.cond %18 %BB:7 %BB:1

#pred = {%BB:0}
%BB:1:
  %19 = local.get %0
  %20 = const i32 24
  %21 = int.add %19 %20
  memory.guard %memory:0 %21 64
  %22 = load.64 i64 %memory:0 %21
  local.set %2 %22
  %23 = local.get %0
  %24 = const i32 16
  %25 = int.add %23 %24
  memory.guard %memory:0 %25 64
  %26 = load.64 i64 %memory:0 %25
  local.set %3 %26
  %27 = call %function:11()
  %28 = call %function:11()
  %29 = call %function:11()
  %30 = call %function:11()
  %31 = call %function:11()
  %32 = call %function:11()
  %33 = call %function:11()
  %34 = call %function:11()
  %35 = call %function:11()
  %36 = call %function:11()
  %37 = call %function:11()
  %38 = call %function:11()
  %39 = call %function:11()
  %40 = call %function:11()
  %41 = call %function:11()
  %42 = call %function:11()
  %43 = call %function:11()
  %44 = call %function:11()
  %45 = call %function:11()
  %46 = call %function:11()
  %47 = call %function:11()
  %48 = call %function:11()
  %49 = call %function:11()
  %50 = call %function:11()
  %51 = call %function:11()
  %52 = call %function:11()
  %53 = call %function:11()
  %54 = call %function:11()
  %55 = call %function:11()
  %56 = call %function:11()
  %57 = call %function:11()
  %58 = call %function:11()
  %59 = call %function:11()
  %60 = call %function:11()
  %61 = call %function:11()
  %62 = call %function:11()
  %63 = call %function:11()
  %64 = call %function:11()
  %65 = call %function:11()
  %66 = call %function:11()
  %67 = call %function:11()
  %68 = call %function:11()
  %69 = call %function:11()
  %70 = call %function:11()
  %71 = call %function:11()
  %72 = call %function:11()
  %73 = call %function:11()
  %74 = call %function:11()
  %75 = call %function:11()
  %76 = call %function:11()
  %77 = call %function:11()
  %78 = call %function:11()
  %79 = call %function:11()
  %80 = call %function:11()
  %81 = call %function:11()
  %82 = call %function:11()
  %83 = call %function:11()
  %84 = call %function:11()
  %85 = call %function:11()
  %86 = call %function:11()
  %87 = call %function:11()
  %88 = call %function:11()
  %89 = call %function:11()
  %90 = call %function:11()
  %91 = call %function:11()
  %92 = call %function:11()
  %93 = call %function:11()
  %94 = call %function:11()
  %95 = call %function:11()
  %96 = call %function:11()
  %97 = call %function:11()
  %98 = call %function:11()
  %99 = call %function:11()
  %100 = call %function:11()
  %101 = call %function:11()
  %102 = call %function:11()
  %103 = call %function:11()
  %104 = call %function:11()
  %105 = call %function:11()
  %106 = call %function:11()
  %107 = call %function:11()
  %108 = call %function:11()
  %109 = call %function:11()
  %110 = call %function:11()
  %111 = call %function:11()
  %112 = call %function:11()
  %113 = call %function:11()
  %114 = call %function:11()
  %115 = call %function:11()
  %116 = call %function:11()
  %117 = call %function:11()
  %118 = call %function:11()
  %119 = call %function:11()
  %120 = call %function:11()
  %121 = call %function:11()
  %122 = call %function:11()
  %123 = call %function:11()
  %124 = call %function:11()
  %125 = call %function:11()
  %126 = call %function:11()
  %127 = local.get %0
  %128 = const i32 16
  %129 = int.add %127 %128
  %130 = const i32 0
  %131 = call %function:64(%129, %130)
  br.cond %131 %BB:7 %BB:2

#pred = {%BB:1}
%BB:2:
  %132 = local.get %0
  %133 = local.get %0
  %134 = const i32 24
  %135 = int.add %133 %134
  memory.guard %memory:0 %135 64
  %136 = load.64 i64 %memory:0 %135
  %137 = local.get %2
  %138 = int.sub %136 %137
  %139 = local.get %0
  %140 = const i32 16
  %141 = int.add %139 %140
  memory.guard %memory:0 %141 64
  %142 = load.64 i64 %memory:0 %141
  %143 = local.get %3
  %144 = int.sub %142 %143
  %145 = const i64 1000000
  %146 = int.mul %144 %145
  %147 = int.add %138 %146
  %148 = const i64 1000000
  %149 = int.mul %147 %148
  %150 = const i64 100
  %151 = int.div.u %149 %150
  memory.guard %memory:0 %132 64
  store.64 %memory:0 %132 %151
  %152 = const i32 65536
  %153 = local.get %0
  %154 = call %function:74(%152, %153)
  %155 = const i32 0
  %156 = const i32 77984
  %157 = int.add %155 %156
  memory.guard %memory:0 %157 32
  %158 = load.32 i32 %memory:0 %157
  %159 = int.eqz %158
  br.cond %159 %BB:8 %BB:3

#pred = {%BB:2}
%BB:3:
  %160 = const i32 69792
  local.set %1 %160
  %161 = const i32 0
  local.set %4 %161
  %162 = const i32 0
  local.set %5 %162
  br %BB:4

#pred = {%BB:4, %BB:3}
%BB:4:
  %163 = local.get %1
  %164 = const i32 4
  %165 = int.add %163 %164
  memory.guard %memory:0 %165 32
  %166 = load.32 i32 %memory:0 %165
  local.set %6 %166
  %167 = local.get %1
  memory.guard %memory:0 %167 32
  %168 = load.32 i32 %memory:0 %167
  call %function:60(%168)
  %169 = local.get %1
  %170 = const i32 0
  memory.guard %memory:0 %169 32
  store.32 %memory:0 %169 %170
  %171 = const i32 -1
  %172 = local.get %4
  %173 = local.get %6
  %174 = const i32 -1
  %175 = int.gt.s %173 %174
  %176 = select %175 %171 %172
  local.set %4 %176
  %177 = local.get %1
  %178 = const i32 8
  %179 = int.add %177 %178
  local.set %1 %179
  %180 = local.get %5
  %181 = const i32 1
  %182 = int.add %180 %181
  local.set %5 %182
  %183 = const i32 0
  %184 = const i32 77984
  %185 = int.add %183 %184
  memory.guard %memory:0 %185 32
  %186 = load.32 i32 %memory:0 %185
  %187 = int.lt.u %182 %186
  br.cond %187 %BB:4 %BB:5

#pred = {%BB:4}
%BB:5:
  %188 = const i32 0
  local.set %1 %188
  %189 = const i32 0
  %190 = const i32 0
  %191 = const i32 77984
  %192 = int.add %189 %191
  memory.guard %memory:0 %192 32
  store.32 %memory:0 %192 %190
  %193 = local.get %4
  %194 = int.eqz %193
  br.cond %194 %BB:9 %BB:6

#pred = {%BB:5}
%BB:6:
  %195 = const i32 65542
  %196 = const i32 28
  %197 = const i32 1
  %198 = const i32 0
  %199 = const i32 66516
  %200 = int.add %198 %199
  memory.guard %memory:0 %200 32
  %201 = load.32 i32 %memory:0 %200
  %202 = call %function:73(%195, %196, %197, %201)
  %203 = const i32 99
  local.set %1 %203
  br %BB:9

#pred = {%BB:1, %BB:0}
%BB:7:
  call %function:65()
  unreachable

#pred = {%BB:2}
%BB:8:
  %205 = const i32 0
  local.set %1 %205
  %206 = const i32 0
  %207 = const i32 0
  %208 = const i32 77984
  %209 = int.add %206 %208
  memory.guard %memory:0 %209 32
  store.32 %memory:0 %209 %207
  br %BB:9

#pred = {%BB:8, %BB:6, %BB:5, %entry}
%BB:9:
  %210 = local.get %0
  %211 = const i32 32
  %212 = int.add %210 %211
  global.set %global:0%212
  %213 = local.get %1
  ret %213

}

function %function:11 : [] -> [i32] {
{%0:i32, %1:i32, %2:i32, %3:i32, %4:i32, %5:i32, %6:i32, %7:i32, %8:i32, %9:i32}
#pred = {}
%entry:
  %10 = const i32 0
  %11 = const i32 77984
  %12 = int.add %10 %11
  memory.guard %memory:0 %12 32
  %13 = load.32 i32 %memory:0 %12
  local.set %0 %13
  %14 = int.eqz %13
  br.cond %14 %BB:6 %BB:0

#pred = {%entry}
%BB:0:
  %15 = const i32 69792
  local.set %1 %15
  %16 = local.get %0
  local.set %2 %16
  br %BB:1

#pred = {%BB:3, %BB:0}
%BB:1:
  %17 = local.get %1
  %18 = const i32 4
  %19 = int.add %17 %18
  memory.guard %memory:0 %19 32
  %20 = load.32 i32 %memory:0 %19
  local.set %3 %20
  %21 = const i32 -2147479552
  %22 = int.lt.u %20 %21
  br.cond %22 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %23 = local.get %1
  %24 = const i32 4
  %25 = int.add %23 %24
  %26 = local.get %3
  %27 = const i32 2147483647
  %28 = int.and %26 %27
  memory.guard %memory:0 %25 32
  store.32 %memory:0 %25 %28
  %29 = local.get %1
  memory.guard %memory:0 %29 32
  %30 = load.32 i32 %memory:0 %29
  local.set %2 %30
  br %BB:7

#pred = {%BB:1}
%BB:3:
  %31 = local.get %1
  %32 = const i32 8
  %33 = int.add %31 %32
  local.set %1 %33
  %34 = local.get %2
  %35 = const i32 -1
  %36 = int.add %34 %35
  local.set %2 %36
  br.cond %36 %BB:1 %BB:4

#pred = {%BB:3}
%BB:4:
  %37 = const i32 0
  local.set %2 %37
  %38 = local.get %0
  %39 = const i32 1023
  %40 = int.gt.u %38 %39
  br.cond %40 %BB:7 %BB:5

#pred = {%BB:4}
%BB:5:
  br %BB:6

#pred = {%BB:5, %entry}
%BB:6:
  %41 = local.get %0
  %42 = const i32 3
  %43 = int.shl %41 %42
  local.set %1 %43
  %44 = const i32 69796
  %45 = int.add %43 %44
  %46 = const i32 4096
  memory.guard %memory:0 %45 32
  store.32 %memory:0 %45 %46
  %47 = local.get %1
  %48 = const i32 69792
  %49 = int.add %47 %48
  %50 = const i32 4096
  %51 = call %function:58(%50)
  local.set %2 %51
  memory.guard %memory:0 %49 32
  store.32 %memory:0 %49 %51
  %52 = const i32 0
  %53 = local.get %0
  %54 = const i32 1
  %55 = int.add %53 %54
  local.set %0 %55
  %56 = const i32 77984
  %57 = int.add %52 %56
  memory.guard %memory:0 %57 32
  store.32 %memory:0 %57 %55
  br %BB:7

#pred = {%BB:6, %BB:4, %BB:2}
%BB:7:
  %58 = local.get %2
  %59 = const i32 24
  %60 = int.add %58 %59
  %61 = const i32 0
  %62 = const i32 65608
  %63 = int.add %61 %62
  memory.guard %memory:0 %63 64
  %64 = load.64 i64 %memory:0 %63
  memory.guard %memory:0 %60 64
  store.64 %memory:0 %60 %64
  %65 = local.get %2
  %66 = const i32 16
  %67 = int.add %65 %66
  %68 = const i32 0
  %69 = const i32 65600
  %70 = int.add %68 %69
  memory.guard %memory:0 %70 64
  %71 = load.64 i64 %memory:0 %70
  memory.guard %memory:0 %67 64
  store.64 %memory:0 %67 %71
  %72 = local.get %2
  %73 = const i32 8
  %74 = int.add %72 %73
  %75 = const i32 0
  %76 = const i32 65592
  %77 = int.add %75 %76
  memory.guard %memory:0 %77 64
  %78 = load.64 i64 %memory:0 %77
  memory.guard %memory:0 %74 64
  store.64 %memory:0 %74 %78
  %79 = local.get %2
  %80 = const i32 0
  %81 = const i32 65584
  %82 = int.add %80 %81
  memory.guard %memory:0 %82 64
  %83 = load.64 i64 %memory:0 %82
  memory.guard %memory:0 %79 64
  store.64 %memory:0 %79 %83
  %84 = const i32 69792
  local.set %1 %84
  %85 = local.get %0
  local.set %3 %85
  br %BB:8

#pred = {%BB:10, %BB:7}
%BB:8:
  %86 = local.get %1
  %87 = const i32 4
  %88 = int.add %86 %87
  memory.guard %memory:0 %88 32
  %89 = load.32 i32 %memory:0 %88
  local.set %4 %89
  %90 = const i32 -2147479552
  %91 = int.lt.u %89 %90
  br.cond %91 %BB:10 %BB:9

#pred = {%BB:8}
%BB:9:
  %92 = local.get %1
  %93 = const i32 4
  %94 = int.add %92 %93
  %95 = local.get %4
  %96 = const i32 2147483647
  %97 = int.and %95 %96
  memory.guard %memory:0 %94 32
  store.32 %memory:0 %94 %97
  %98 = local.get %1
  memory.guard %memory:0 %98 32
  %99 = load.32 i32 %memory:0 %98
  local.set %5 %99
  br %BB:12

#pred = {%BB:8}
%BB:10:
  %100 = local.get %1
  %101 = const i32 8
  %102 = int.add %100 %101
  local.set %1 %102
  %103 = local.get %3
  %104 = const i32 -1
  %105 = int.add %103 %104
  local.set %3 %105
  br.cond %105 %BB:8 %BB:11

#pred = {%BB:10}
%BB:11:
  %106 = local.get %0
  %107 = const i32 3
  %108 = int.shl %106 %107
  local.set %1 %108
  %109 = const i32 69796
  %110 = int.add %108 %109
  %111 = const i32 4096
  memory.guard %memory:0 %110 32
  store.32 %memory:0 %110 %111
  %112 = local.get %1
  %113 = const i32 69792
  %114 = int.add %112 %113
  %115 = const i32 4096
  %116 = call %function:58(%115)
  local.set %5 %116
  memory.guard %memory:0 %114 32
  store.32 %memory:0 %114 %116
  %117 = const i32 0
  %118 = local.get %0
  %119 = const i32 1
  %120 = int.add %118 %119
  local.set %0 %120
  %121 = const i32 77984
  %122 = int.add %117 %121
  memory.guard %memory:0 %122 32
  store.32 %memory:0 %122 %120
  br %BB:12

#pred = {%BB:11, %BB:9}
%BB:12:
  %123 = local.get %5
  %124 = const i64 3966398496874961282
  memory.guard %memory:0 %123 64
  store.64 %memory:0 %123 %124
  %125 = const i32 69792
  local.set %1 %125
  %126 = local.get %0
  local.set %3 %126
  br %BB:13

#pred = {%BB:15, %BB:12}
%BB:13:
  %127 = local.get %1
  %128 = const i32 4
  %129 = int.add %127 %128
  memory.guard %memory:0 %129 32
  %130 = load.32 i32 %memory:0 %129
  local.set %4 %130
  %131 = const i32 -2147479552
  %132 = int.lt.u %130 %131
  br.cond %132 %BB:15 %BB:14

#pred = {%BB:13}
%BB:14:
  %133 = local.get %1
  %134 = const i32 4
  %135 = int.add %133 %134
  %136 = local.get %4
  %137 = const i32 2147483647
  %138 = int.and %136 %137
  memory.guard %memory:0 %135 32
  store.32 %memory:0 %135 %138
  %139 = local.get %1
  memory.guard %memory:0 %139 32
  %140 = load.32 i32 %memory:0 %139
  local.set %3 %140
  br %BB:18

#pred = {%BB:13}
%BB:15:
  %141 = local.get %1
  %142 = const i32 8
  %143 = int.add %141 %142
  local.set %1 %143
  %144 = local.get %3
  %145 = const i32 -1
  %146 = int.add %144 %145
  local.set %3 %146
  br.cond %146 %BB:13 %BB:16

#pred = {%BB:15}
%BB:16:
  %147 = const i32 0
  local.set %3 %147
  %148 = local.get %0
  %149 = const i32 1023
  %150 = int.gt.u %148 %149
  br.cond %150 %BB:18 %BB:17

#pred = {%BB:16}
%BB:17:
  %151 = local.get %0
  %152 = const i32 3
  %153 = int.shl %151 %152
  local.set %1 %153
  %154 = const i32 69796
  %155 = int.add %153 %154
  %156 = const i32 4096
  memory.guard %memory:0 %155 32
  store.32 %memory:0 %155 %156
  %157 = local.get %1
  %158 = const i32 69792
  %159 = int.add %157 %158
  %160 = const i32 4096
  %161 = call %function:58(%160)
  local.set %3 %161
  memory.guard %memory:0 %159 32
  store.32 %memory:0 %159 %161
  %162 = const i32 0
  %163 = local.get %0
  %164 = const i32 1
  %165 = int.add %163 %164
  local.set %0 %165
  %166 = const i32 77984
  %167 = int.add %162 %166
  memory.guard %memory:0 %167 32
  store.32 %memory:0 %167 %165
  br %BB:18

#pred = {%BB:17, %BB:16, %BB:14}
%BB:18:
  %168 = local.get %3
  %169 = const i32 8
  %170 = int.add %168 %169
  %171 = const i32 0
  %172 = const i32 65624
  %173 = int.add %171 %172
  memory.guard %memory:0 %173 64
  %174 = load.64 i64 %memory:0 %173
  memory.guard %memory:0 %170 64
  store.64 %memory:0 %170 %174
  %175 = local.get %3
  %176 = const i32 0
  %177 = const i32 65616
  %178 = int.add %176 %177
  memory.guard %memory:0 %178 64
  %179 = load.64 i64 %memory:0 %178
  memory.guard %memory:0 %175 64
  store.64 %memory:0 %175 %179
  %180 = const i32 69792
  local.set %1 %180
  %181 = local.get %0
  local.set %4 %181
  br %BB:19

#pred = {%BB:21, %BB:18}
%BB:19:
  %182 = local.get %1
  %183 = const i32 4
  %184 = int.add %182 %183
  memory.guard %memory:0 %184 32
  %185 = load.32 i32 %memory:0 %184
  local.set %6 %185
  %186 = const i32 -2147479552
  %187 = int.lt.u %185 %186
  br.cond %187 %BB:21 %BB:20

#pred = {%BB:19}
%BB:20:
  %188 = local.get %1
  %189 = const i32 4
  %190 = int.add %188 %189
  %191 = local.get %6
  %192 = const i32 2147483647
  %193 = int.and %191 %192
  memory.guard %memory:0 %190 32
  store.32 %memory:0 %190 %193
  %194 = local.get %1
  memory.guard %memory:0 %194 32
  %195 = load.32 i32 %memory:0 %194
  local.set %1 %195
  br %BB:24

#pred = {%BB:19}
%BB:21:
  %196 = local.get %1
  %197 = const i32 8
  %198 = int.add %196 %197
  local.set %1 %198
  %199 = local.get %4
  %200 = const i32 -1
  %201 = int.add %199 %200
  local.set %4 %201
  br.cond %201 %BB:19 %BB:22

#pred = {%BB:21}
%BB:22:
  %202 = const i32 0
  local.set %1 %202
  %203 = local.get %0
  %204 = const i32 1023
  %205 = int.gt.u %203 %204
  br.cond %205 %BB:24 %BB:23

#pred = {%BB:22}
%BB:23:
  %206 = local.get %0
  %207 = const i32 3
  %208 = int.shl %206 %207
  local.set %1 %208
  %209 = const i32 69796
  %210 = int.add %208 %209
  %211 = const i32 4096
  memory.guard %memory:0 %210 32
  store.32 %memory:0 %210 %211
  %212 = local.get %1
  %213 = const i32 69792
  %214 = int.add %212 %213
  %215 = const i32 4096
  %216 = call %function:58(%215)
  local.set %1 %216
  memory.guard %memory:0 %214 32
  store.32 %memory:0 %214 %216
  %217 = const i32 0
  %218 = local.get %0
  %219 = const i32 1
  %220 = int.add %218 %219
  local.set %0 %220
  %221 = const i32 77984
  %222 = int.add %217 %221
  memory.guard %memory:0 %222 32
  store.32 %memory:0 %222 %220
  br %BB:24

#pred = {%BB:23, %BB:22, %BB:20}
%BB:24:
  %223 = const i32 69792
  local.set %4 %223
  %224 = local.get %0
  local.set %6 %224
  br %BB:25

#pred = {%BB:26, %BB:24}
%BB:25:
  %225 = local.get %4
  %226 = const i32 4
  %227 = int.add %225 %226
  memory.guard %memory:0 %227 32
  %228 = load.32 i32 %memory:0 %227
  local.set %7 %228
  %229 = const i32 -2143289345
  %230 = int.gt.u %228 %229
  br.cond %230 %BB:29 %BB:26

#pred = {%BB:25}
%BB:26:
  %231 = local.get %4
  %232 = const i32 8
  %233 = int.add %231 %232
  local.set %4 %233
  %234 = local.get %6
  %235 = const i32 -1
  %236 = int.add %234 %235
  local.set %6 %236
  br.cond %236 %BB:25 %BB:27

#pred = {%BB:26}
%BB:27:
  %237 = const i32 0
  local.set %8 %237
  %238 = local.get %0
  %239 = const i32 1023
  %240 = int.gt.u %238 %239
  br.cond %240 %BB:31 %BB:28

#pred = {%BB:27}
%BB:28:
  %241 = local.get %0
  %242 = const i32 3
  %243 = int.shl %241 %242
  local.set %4 %243
  %244 = const i32 69796
  %245 = int.add %243 %244
  %246 = const i32 4194304
  memory.guard %memory:0 %245 32
  store.32 %memory:0 %245 %246
  %247 = local.get %4
  %248 = const i32 69792
  %249 = int.add %247 %248
  %250 = const i32 4194304
  %251 = call %function:58(%250)
  local.set %8 %251
  memory.guard %memory:0 %249 32
  store.32 %memory:0 %249 %251
  %252 = const i32 0
  %253 = local.get %0
  %254 = const i32 1
  %255 = int.add %253 %254
  local.set %0 %255
  %256 = const i32 77984
  %257 = int.add %252 %256
  memory.guard %memory:0 %257 32
  store.32 %memory:0 %257 %255
  br %BB:31

#pred = {%BB:25}
%BB:29:
  %258 = local.get %4
  %259 = const i32 4
  %260 = int.add %258 %259
  %261 = local.get %7
  %262 = const i32 2147483647
  %263 = int.and %261 %262
  memory.guard %memory:0 %260 32
  store.32 %memory:0 %260 %263
  %264 = local.get %4
  memory.guard %memory:0 %264 32
  %265 = load.32 i32 %memory:0 %264
  local.set %8 %265
  %266 = local.get %0
  br.cond %266 %BB:31 %BB:30

#pred = {%BB:29}
%BB:30:
  %267 = const i32 0
  local.set %0 %267
  br %BB:37

#pred = {%BB:29, %BB:28, %BB:27}
%BB:31:
  %268 = const i32 69792
  local.set %4 %268
  %269 = local.get %0
  local.set %6 %269
  br %BB:32

#pred = {%BB:34, %BB:31}
%BB:32:
  %270 = local.get %4
  %271 = const i32 4
  %272 = int.add %270 %271
  memory.guard %memory:0 %272 32
  %273 = load.32 i32 %memory:0 %272
  local.set %7 %273
  %274 = const i32 -2147479552
  %275 = int.lt.u %273 %274
  br.cond %275 %BB:34 %BB:33

#pred = {%BB:32}
%BB:33:
  %276 = local.get %4
  %277 = const i32 4
  %278 = int.add %276 %277
  %279 = local.get %7
  %280 = const i32 2147483647
  %281 = int.and %279 %280
  memory.guard %memory:0 %278 32
  store.32 %memory:0 %278 %281
  %282 = local.get %4
  memory.guard %memory:0 %282 32
  %283 = load.32 i32 %memory:0 %282
  local.set %9 %283
  br %BB:38

#pred = {%BB:32}
%BB:34:
  %284 = local.get %4
  %285 = const i32 8
  %286 = int.add %284 %285
  local.set %4 %286
  %287 = local.get %6
  %288 = const i32 -1
  %289 = int.add %287 %288
  local.set %6 %289
  br.cond %289 %BB:32 %BB:35

#pred = {%BB:34}
%BB:35:
  %290 = const i32 0
  local.set %9 %290
  %291 = local.get %0
  %292 = const i32 1023
  %293 = int.gt.u %291 %292
  br.cond %293 %BB:38 %BB:36

#pred = {%BB:35}
%BB:36:
  br %BB:37

#pred = {%BB:36, %BB:30}
%BB:37:
  %294 = local.get %0
  %295 = const i32 3
  %296 = int.shl %294 %295
  local.set %4 %296
  %297 = const i32 69796
  %298 = int.add %296 %297
  %299 = const i32 4096
  memory.guard %memory:0 %298 32
  store.32 %memory:0 %298 %299
  %300 = local.get %4
  %301 = const i32 69792
  %302 = int.add %300 %301
  %303 = const i32 4096
  %304 = call %function:58(%303)
  local.set %9 %304
  memory.guard %memory:0 %302 32
  store.32 %memory:0 %302 %304
  %305 = const i32 0
  %306 = local.get %0
  %307 = const i32 1
  %308 = int.add %306 %307
  %309 = const i32 77984
  %310 = int.add %305 %309
  memory.guard %memory:0 %310 32
  store.32 %memory:0 %310 %308
  br %BB:38

#pred = {%BB:37, %BB:35, %BB:33}
%BB:38:
  %311 = local.get %1
  %312 = local.get %5
  memory.guard %memory:0 %312 8
  %313 = load.8 i32 %memory:0 %312
  memory.guard %memory:0 %311 8
  store.8 %memory:0 %311 %313
  %314 = local.get %1
  %315 = const i32 1
  %316 = int.add %314 %315
  %317 = local.get %5
  %318 = const i32 1
  %319 = int.add %317 %318
  memory.guard %memory:0 %319 8
  %320 = load.8 i32 %memory:0 %319
  memory.guard %memory:0 %316 8
  store.8 %memory:0 %316 %320
  %321 = local.get %1
  %322 = const i32 2
  %323 = int.add %321 %322
  %324 = local.get %5
  %325 = const i32 2
  %326 = int.add %324 %325
  memory.guard %memory:0 %326 8
  %327 = load.8 i32 %memory:0 %326
  memory.guard %memory:0 %323 8
  store.8 %memory:0 %323 %327
  %328 = local.get %1
  %329 = const i32 3
  %330 = int.add %328 %329
  %331 = local.get %5
  %332 = const i32 3
  %333 = int.add %331 %332
  memory.guard %memory:0 %333 8
  %334 = load.8 i32 %memory:0 %333
  memory.guard %memory:0 %330 8
  store.8 %memory:0 %330 %334
  %335 = local.get %1
  %336 = const i32 4
  %337 = int.add %335 %336
  %338 = local.get %5
  %339 = const i32 4
  %340 = int.add %338 %339
  memory.guard %memory:0 %340 8
  %341 = load.8 i32 %memory:0 %340
  memory.guard %memory:0 %337 8
  store.8 %memory:0 %337 %341
  %342 = local.get %1
  %343 = const i32 5
  %344 = int.add %342 %343
  %345 = local.get %5
  %346 = const i32 5
  %347 = int.add %345 %346
  memory.guard %memory:0 %347 8
  %348 = load.8 i32 %memory:0 %347
  memory.guard %memory:0 %344 8
  store.8 %memory:0 %344 %348
  %349 = local.get %1
  %350 = const i32 6
  %351 = int.add %349 %350
  %352 = local.get %5
  %353 = const i32 6
  %354 = int.add %352 %353
  memory.guard %memory:0 %354 8
  %355 = load.8 i32 %memory:0 %354
  memory.guard %memory:0 %351 8
  store.8 %memory:0 %351 %355
  %356 = local.get %5
  %357 = const i32 7
  %358 = int.add %356 %357
  memory.guard %memory:0 %358 8
  %359 = load.8 i32 %memory:0 %358
  local.set %4 %359
  %360 = local.get %1
  %361 = const i32 8
  %362 = int.add %360 %361
  local.set %7 %362
  %363 = const i64 0
  memory.guard %memory:0 %362 64
  store.64 %memory:0 %362 %363
  %364 = local.get %1
  %365 = const i32 7
  %366 = int.add %364 %365
  %367 = local.get %4
  memory.guard %memory:0 %366 8
  store.8 %memory:0 %366 %367
  %368 = local.get %1
  %369 = const i32 9
  %370 = int.add %368 %369
  local.set %0 %370
  %371 = local.get %8
  local.set %6 %371
  br %BB:39

#pred = {%BB:90, %BB:38}
%BB:39:
  %372 = local.get %6
  %373 = local.get %1
  %374 = local.get %2
  %375 = local.get %3
  %376 = call %function:12(%372, %373, %374, %375)
  %377 = local.get %7
  %378 = local.get %7
  memory.guard %memory:0 %378 8
  %379 = load.8 i32 %memory:0 %378
  %380 = const i32 1
  %381 = int.add %379 %380
  local.set %4 %381
  memory.guard %memory:0 %377 8
  store.8 %memory:0 %377 %381
  %382 = local.get %4
  %383 = const i32 255
  %384 = int.and %382 %383
  %385 = local.get %4
  %386 = int.eq %384 %385
  br.cond %386 %BB:90 %BB:40

#pred = {%BB:39}
%BB:40:
  %387 = local.get %0
  %388 = local.get %0
  memory.guard %memory:0 %388 8
  %389 = load.8 i32 %memory:0 %388
  %390 = const i32 1
  %391 = int.add %389 %390
  local.set %4 %391
  memory.guard %memory:0 %387 8
  store.8 %memory:0 %387 %391
  %392 = local.get %4
  %393 = const i32 255
  %394 = int.and %392 %393
  %395 = local.get %4
  %396 = int.eq %394 %395
  br.cond %396 %BB:90 %BB:41

#pred = {%BB:40}
%BB:41:
  %397 = local.get %9
  %398 = local.get %8
  %399 = const i64 4194304
  %400 = call %function:23(%397, %398, %399)
  %401 = local.get %1
  %402 = const i32 8
  %403 = int.add %401 %402
  local.set %7 %403
  %404 = local.get %1
  %405 = const i32 9
  %406 = int.add %404 %405
  local.set %0 %406
  %407 = local.get %8
  local.set %6 %407
  br %BB:42

#pred = {%BB:89, %BB:41}
%BB:42:
  %408 = local.get %6
  %409 = local.get %1
  %410 = local.get %2
  %411 = local.get %3
  %412 = call %function:18(%408, %409, %410, %411)
  %413 = local.get %7
  %414 = local.get %7
  memory.guard %memory:0 %414 8
  %415 = load.8 i32 %memory:0 %414
  %416 = const i32 1
  %417 = int.add %415 %416
  local.set %4 %417
  memory.guard %memory:0 %413 8
  store.8 %memory:0 %413 %417
  %418 = local.get %4
  %419 = const i32 255
  %420 = int.and %418 %419
  %421 = local.get %4
  %422 = int.eq %420 %421
  br.cond %422 %BB:89 %BB:43

#pred = {%BB:42}
%BB:43:
  %423 = local.get %0
  %424 = local.get %0
  memory.guard %memory:0 %424 8
  %425 = load.8 i32 %memory:0 %424
  %426 = const i32 1
  %427 = int.add %425 %426
  local.set %4 %427
  memory.guard %memory:0 %423 8
  store.8 %memory:0 %423 %427
  %428 = local.get %4
  %429 = const i32 255
  %430 = int.and %428 %429
  %431 = local.get %4
  %432 = int.eq %430 %431
  br.cond %432 %BB:89 %BB:44

#pred = {%BB:43}
%BB:44:
  %433 = local.get %9
  %434 = local.get %8
  %435 = const i64 4194304
  %436 = call %function:23(%433, %434, %435)
  %437 = local.get %1
  %438 = const i32 8
  %439 = int.add %437 %438
  local.set %7 %439
  %440 = local.get %1
  %441 = const i32 9
  %442 = int.add %440 %441
  local.set %0 %442
  %443 = local.get %8
  local.set %6 %443
  br %BB:45

#pred = {%BB:88, %BB:44}
%BB:45:
  %444 = local.get %6
  %445 = local.get %1
  %446 = local.get %2
  %447 = local.get %3
  %448 = call %function:19(%444, %445, %446, %447)
  %449 = local.get %7
  %450 = local.get %7
  memory.guard %memory:0 %450 8
  %451 = load.8 i32 %memory:0 %450
  %452 = const i32 1
  %453 = int.add %451 %452
  local.set %4 %453
  memory.guard %memory:0 %449 8
  store.8 %memory:0 %449 %453
  %454 = local.get %4
  %455 = const i32 255
  %456 = int.and %454 %455
  %457 = local.get %4
  %458 = int.eq %456 %457
  br.cond %458 %BB:88 %BB:46

#pred = {%BB:45}
%BB:46:
  %459 = local.get %0
  %460 = local.get %0
  memory.guard %memory:0 %460 8
  %461 = load.8 i32 %memory:0 %460
  %462 = const i32 1
  %463 = int.add %461 %462
  local.set %4 %463
  memory.guard %memory:0 %459 8
  store.8 %memory:0 %459 %463
  %464 = local.get %4
  %465 = const i32 255
  %466 = int.and %464 %465
  %467 = local.get %4
  %468 = int.eq %466 %467
  br.cond %468 %BB:88 %BB:47

#pred = {%BB:46}
%BB:47:
  %469 = local.get %9
  %470 = local.get %8
  %471 = const i64 4194304
  %472 = call %function:23(%469, %470, %471)
  %473 = const i32 0
  %474 = const i32 77984
  %475 = int.add %473 %474
  memory.guard %memory:0 %475 32
  %476 = load.32 i32 %memory:0 %475
  local.set %6 %476
  %477 = int.eqz %476
  br.cond %477 %BB:87 %BB:48

#pred = {%BB:47}
%BB:48:
  %478 = const i32 69792
  local.set %4 %478
  %479 = local.get %6
  local.set %7 %479
  br %BB:49

#pred = {%BB:85, %BB:48}
%BB:49:
  %480 = local.get %4
  memory.guard %memory:0 %480 32
  %481 = load.32 i32 %memory:0 %480
  %482 = local.get %9
  %483 = int.ne %481 %482
  br.cond %483 %BB:85 %BB:50

#pred = {%BB:49}
%BB:50:
  %484 = local.get %4
  %485 = const i32 4
  %486 = int.add %484 %485
  local.set %4 %486
  memory.guard %memory:0 %486 32
  %487 = load.32 i32 %memory:0 %486
  local.set %7 %487
  %488 = const i32 -1
  %489 = int.le.s %487 %488
  br.cond %489 %BB:87 %BB:51

#pred = {%BB:50}
%BB:51:
  %490 = local.get %4
  %491 = local.get %7
  %492 = const i32 -2147483648
  %493 = int.or %491 %492
  memory.guard %memory:0 %490 32
  store.32 %memory:0 %490 %493
  %494 = const i32 69792
  local.set %4 %494
  %495 = local.get %6
  local.set %7 %495
  br %BB:52

#pred = {%BB:83, %BB:51}
%BB:52:
  %496 = local.get %4
  memory.guard %memory:0 %496 32
  %497 = load.32 i32 %memory:0 %496
  %498 = local.get %8
  %499 = int.ne %497 %498
  br.cond %499 %BB:83 %BB:53

#pred = {%BB:52}
%BB:53:
  %500 = local.get %4
  %501 = const i32 4
  %502 = int.add %500 %501
  local.set %4 %502
  memory.guard %memory:0 %502 32
  %503 = load.32 i32 %memory:0 %502
  local.set %7 %503
  %504 = const i32 -1
  %505 = int.le.s %503 %504
  br.cond %505 %BB:87 %BB:54

#pred = {%BB:53}
%BB:54:
  %506 = local.get %4
  %507 = local.get %7
  %508 = const i32 -2147483648
  %509 = int.or %507 %508
  memory.guard %memory:0 %506 32
  store.32 %memory:0 %506 %509
  %510 = const i32 69792
  local.set %4 %510
  %511 = local.get %6
  local.set %7 %511
  br %BB:55

#pred = {%BB:81, %BB:54}
%BB:55:
  %512 = local.get %4
  memory.guard %memory:0 %512 32
  %513 = load.32 i32 %memory:0 %512
  %514 = local.get %1
  %515 = int.ne %513 %514
  br.cond %515 %BB:81 %BB:56

#pred = {%BB:55}
%BB:56:
  %516 = local.get %4
  %517 = const i32 4
  %518 = int.add %516 %517
  local.set %1 %518
  memory.guard %memory:0 %518 32
  %519 = load.32 i32 %memory:0 %518
  local.set %4 %519
  %520 = const i32 -1
  %521 = int.le.s %519 %520
  br.cond %521 %BB:87 %BB:57

#pred = {%BB:56}
%BB:57:
  %522 = local.get %1
  %523 = local.get %4
  %524 = const i32 -2147483648
  %525 = int.or %523 %524
  memory.guard %memory:0 %522 32
  store.32 %memory:0 %522 %525
  %526 = const i32 69792
  local.set %1 %526
  %527 = local.get %6
  local.set %4 %527
  br %BB:58

#pred = {%BB:79, %BB:57}
%BB:58:
  %528 = local.get %1
  memory.guard %memory:0 %528 32
  %529 = load.32 i32 %memory:0 %528
  %530 = local.get %3
  %531 = int.ne %529 %530
  br.cond %531 %BB:79 %BB:59

#pred = {%BB:58}
%BB:59:
  %532 = local.get %1
  %533 = const i32 4
  %534 = int.add %532 %533
  local.set %1 %534
  memory.guard %memory:0 %534 32
  %535 = load.32 i32 %memory:0 %534
  local.set %3 %535
  %536 = const i32 -1
  %537 = int.le.s %535 %536
  br.cond %537 %BB:87 %BB:60

#pred = {%BB:59}
%BB:60:
  %538 = local.get %1
  %539 = local.get %3
  %540 = const i32 -2147483648
  %541 = int.or %539 %540
  memory.guard %memory:0 %538 32
  store.32 %memory:0 %538 %541
  %542 = const i32 69792
  local.set %1 %542
  %543 = local.get %6
  local.set %3 %543
  br %BB:61

#pred = {%BB:77, %BB:60}
%BB:61:
  %544 = local.get %1
  memory.guard %memory:0 %544 32
  %545 = load.32 i32 %memory:0 %544
  %546 = local.get %5
  %547 = int.ne %545 %546
  br.cond %547 %BB:77 %BB:62

#pred = {%BB:61}
%BB:62:
  %548 = local.get %1
  %549 = const i32 4
  %550 = int.add %548 %549
  local.set %1 %550
  memory.guard %memory:0 %550 32
  %551 = load.32 i32 %memory:0 %550
  local.set %3 %551
  %552 = const i32 -1
  %553 = int.le.s %551 %552
  br.cond %553 %BB:87 %BB:63

#pred = {%BB:62}
%BB:63:
  %554 = local.get %1
  %555 = local.get %3
  %556 = const i32 -2147483648
  %557 = int.or %555 %556
  memory.guard %memory:0 %554 32
  store.32 %memory:0 %554 %557
  %558 = const i32 69792
  local.set %1 %558
  br %BB:64

#pred = {%BB:71, %BB:63}
%BB:64:
  %559 = local.get %1
  memory.guard %memory:0 %559 32
  %560 = load.32 i32 %memory:0 %559
  %561 = local.get %2
  %562 = int.ne %560 %561
  br.cond %562 %BB:71 %BB:65

#pred = {%BB:64}
%BB:65:
  %563 = local.get %1
  %564 = const i32 4
  %565 = int.add %563 %564
  local.set %1 %565
  memory.guard %memory:0 %565 32
  %566 = load.32 i32 %memory:0 %565
  local.set %2 %566
  %567 = const i32 -1
  %568 = int.le.s %566 %567
  br.cond %568 %BB:87 %BB:66

#pred = {%BB:65}
%BB:66:
  %569 = local.get %1
  %570 = local.get %2
  %571 = const i32 -2147483648
  %572 = int.or %570 %571
  memory.guard %memory:0 %569 32
  store.32 %memory:0 %569 %572
  %573 = call %function:14()
  %574 = const i32 64
  %575 = int.ne %573 %574
  br.cond %575 %BB:73 %BB:67

#pred = {%BB:66}
%BB:67:
  %576 = call %function:15()
  %577 = const i32 16
  %578 = int.ne %576 %577
  br.cond %578 %BB:74 %BB:68

#pred = {%BB:67}
%BB:68:
  %579 = call %function:16()
  %580 = const i32 32
  %581 = int.ne %579 %580
  br.cond %581 %BB:75 %BB:69

#pred = {%BB:68}
%BB:69:
  %582 = call %function:17()
  %583 = const i32 16
  %584 = int.ne %582 %583
  br.cond %584 %BB:76 %BB:70

#pred = {%BB:69}
%BB:70:
  %585 = const i32 0
  ret %585

#pred = {%BB:64}
%BB:71:
  %587 = local.get %1
  %588 = const i32 8
  %589 = int.add %587 %588
  local.set %1 %589
  %590 = local.get %6
  %591 = const i32 -1
  %592 = int.add %590 %591
  local.set %6 %592
  br.cond %592 %BB:64 %BB:72

#pred = {%BB:71}
%BB:72:
  br %BB:87

#pred = {%BB:66}
%BB:73:
  %593 = const i32 65632
  %594 = const i32 65701
  %595 = const i32 109
  %596 = const i32 65709
  call %function:70(%593, %594, %595, %596)
  unreachable

#pred = {%BB:67}
%BB:74:
  %598 = const i32 65715
  %599 = const i32 65701
  %600 = const i32 110
  %601 = const i32 65709
  call %function:70(%598, %599, %600, %601)
  unreachable

#pred = {%BB:68}
%BB:75:
  %603 = const i32 65782
  %604 = const i32 65701
  %605 = const i32 111
  %606 = const i32 65709
  call %function:70(%603, %604, %605, %606)
  unreachable

#pred = {%BB:69}
%BB:76:
  %608 = const i32 65845
  %609 = const i32 65701
  %610 = const i32 112
  %611 = const i32 65709
  call %function:70(%608, %609, %610, %611)
  unreachable

#pred = {%BB:61}
%BB:77:
  %613 = local.get %1
  %614 = const i32 8
  %615 = int.add %613 %614
  local.set %1 %615
  %616 = local.get %3
  %617 = const i32 -1
  %618 = int.add %616 %617
  local.set %3 %618
  br.cond %618 %BB:61 %BB:78

#pred = {%BB:77}
%BB:78:
  br %BB:87

#pred = {%BB:58}
%BB:79:
  %619 = local.get %1
  %620 = const i32 8
  %621 = int.add %619 %620
  local.set %1 %621
  %622 = local.get %4
  %623 = const i32 -1
  %624 = int.add %622 %623
  local.set %4 %624
  br.cond %624 %BB:58 %BB:80

#pred = {%BB:79}
%BB:80:
  br %BB:87

#pred = {%BB:55}
%BB:81:
  %625 = local.get %4
  %626 = const i32 8
  %627 = int.add %625 %626
  local.set %4 %627
  %628 = local.get %7
  %629 = const i32 -1
  %630 = int.add %628 %629
  local.set %7 %630
  br.cond %630 %BB:55 %BB:82

#pred = {%BB:81}
%BB:82:
  br %BB:87

#pred = {%BB:52}
%BB:83:
  %631 = local.get %4
  %632 = const i32 8
  %633 = int.add %631 %632
  local.set %4 %633
  %634 = local.get %7
  %635 = const i32 -1
  %636 = int.add %634 %635
  local.set %7 %636
  br.cond %636 %BB:52 %BB:84

#pred = {%BB:83}
%BB:84:
  br %BB:87

#pred = {%BB:49}
%BB:85:
  %637 = local.get %4
  %638 = const i32 8
  %639 = int.add %637 %638
  local.set %4 %639
  %640 = local.get %7
  %641 = const i32 -1
  %642 = int.add %640 %641
  local.set %7 %642
  br.cond %642 %BB:49 %BB:86

#pred = {%BB:85}
%BB:86:
  br %BB:87

#pred = {%BB:53, %BB:82, %BB:80, %BB:59, %BB:84, %BB:86, %BB:62, %BB:47, %BB:56, %BB:72, %BB:78, %BB:65, %BB:50}
%BB:87:
  call %function:65()
  unreachable

#pred = {%BB:46, %BB:45}
%BB:88:
  %644 = local.get %6
  %645 = const i32 64
  %646 = int.add %644 %645
  local.set %6 %646
  br %BB:45

#pred = {%BB:43, %BB:42}
%BB:89:
  %647 = local.get %6
  %648 = const i32 64
  %649 = int.add %647 %648
  local.set %6 %649
  br %BB:42

#pred = {%BB:40, %BB:39}
%BB:90:
  %650 = local.get %6
  %651 = const i32 64
  %652 = int.add %650 %651
  local.set %6 %652
  br %BB:39

}

function %function:12 : [i32, i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i32}
#pred = {}
%entry:
  %4 = local.get (arg)%0
  %5 = local.get (arg)%1
  %6 = local.get (arg)%2
  %7 = local.get (arg)%3
  %8 = const i32 20
  call %function:13(%4, %5, %6, %7, %8)
  %9 = const i32 0
  ret %9

}

function %function:13 : [i32, i32, i32, i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i32, (arg)%4:i32, %5:i32, %6:i32, %7:i32, %8:i32, %9:i32, %10:i32, %11:i32, %12:i32, %13:i32, %14:i32, %15:i32, %16:i32, %17:i32, %18:i32, %19:i32, %20:i32, %21:i32, %22:i32, %23:i32, %24:i32, %25:i32, %26:i32, %27:i32, %28:i32, %29:i32, %30:i32, %31:i32, %32:i32, %33:i32, %34:i32, %35:i32, %36:i32, %37:i32, %38:i32, %39:i32}
#pred = {}
%entry:
  %40 = local.get (arg)%3
  br.cond %40 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %41 = const i32 857760878
  local.set %5 %41
  %42 = const i32 2036477234
  local.set %6 %42
  %43 = const i32 1634760805
  local.set %7 %43
  %44 = const i32 1797285236
  local.set %8 %44
  br %BB:2

#pred = {%entry}
%BB:1:
  %45 = local.get (arg)%3
  %46 = const i32 12
  %47 = int.add %45 %46
  memory.guard %memory:0 %47 32
  %48 = load.32 i32 %memory:0 %47
  local.set %8 %48
  %49 = local.get (arg)%3
  %50 = const i32 8
  %51 = int.add %49 %50
  memory.guard %memory:0 %51 32
  %52 = load.32 i32 %memory:0 %51
  local.set %6 %52
  %53 = local.get (arg)%3
  %54 = const i32 4
  %55 = int.add %53 %54
  memory.guard %memory:0 %55 32
  %56 = load.32 i32 %memory:0 %55
  local.set %5 %56
  %57 = local.get (arg)%3
  memory.guard %memory:0 %57 32
  %58 = load.32 i32 %memory:0 %57
  local.set %7 %58
  br %BB:2

#pred = {%BB:1, %BB:0}
%BB:2:
  %59 = local.get (arg)%2
  %60 = const i32 20
  %61 = int.add %59 %60
  memory.guard %memory:0 %61 32
  %62 = load.32 i32 %memory:0 %61
  local.set %9 %62
  local.set (arg)%3 %62
  %63 = local.get (arg)%2
  %64 = const i32 24
  %65 = int.add %63 %64
  memory.guard %memory:0 %65 32
  %66 = load.32 i32 %memory:0 %65
  local.set %10 %66
  local.set %11 %66
  %67 = local.get (arg)%2
  %68 = const i32 28
  %69 = int.add %67 %68
  memory.guard %memory:0 %69 32
  %70 = load.32 i32 %memory:0 %69
  local.set %12 %70
  local.set %13 %70
  %71 = local.get %8
  local.set %14 %71
  %72 = local.get (arg)%2
  %73 = const i32 16
  %74 = int.add %72 %73
  memory.guard %memory:0 %74 32
  %75 = load.32 i32 %memory:0 %74
  local.set %15 %75
  local.set %16 %75
  %76 = local.get %6
  local.set %17 %76
  %77 = local.get (arg)%1
  %78 = const i32 12
  %79 = int.add %77 %78
  memory.guard %memory:0 %79 32
  %80 = load.32 i32 %memory:0 %79
  local.set %18 %80
  local.set %19 %80
  %81 = local.get (arg)%1
  %82 = const i32 8
  %83 = int.add %81 %82
  memory.guard %memory:0 %83 32
  %84 = load.32 i32 %memory:0 %83
  local.set %20 %84
  local.set %21 %84
  %85 = local.get (arg)%1
  %86 = const i32 4
  %87 = int.add %85 %86
  memory.guard %memory:0 %87 32
  %88 = load.32 i32 %memory:0 %87
  local.set %22 %88
  local.set %23 %88
  %89 = local.get (arg)%1
  memory.guard %memory:0 %89 32
  %90 = load.32 i32 %memory:0 %89
  local.set %24 %90
  local.set (arg)%1 %90
  %91 = local.get %5
  local.set %25 %91
  %92 = local.get (arg)%2
  %93 = const i32 12
  %94 = int.add %92 %93
  memory.guard %memory:0 %94 32
  %95 = load.32 i32 %memory:0 %94
  local.set %26 %95
  local.set %27 %95
  %96 = local.get (arg)%2
  %97 = const i32 8
  %98 = int.add %96 %97
  memory.guard %memory:0 %98 32
  %99 = load.32 i32 %memory:0 %98
  local.set %28 %99
  local.set %29 %99
  %100 = local.get (arg)%2
  %101 = const i32 4
  %102 = int.add %100 %101
  memory.guard %memory:0 %102 32
  %103 = load.32 i32 %memory:0 %102
  local.set %30 %103
  local.set %31 %103
  %104 = local.get (arg)%2
  memory.guard %memory:0 %104 32
  %105 = load.32 i32 %memory:0 %104
  local.set %32 %105
  local.set (arg)%2 %105
  %106 = local.get %7
  local.set %33 %106
  %107 = local.get (arg)%4
  %108 = const i32 1
  %109 = int.lt.s %107 %108
  br.cond %109 %BB:6 %BB:3

#pred = {%BB:2}
%BB:3:
  %110 = const i32 0
  local.set %34 %110
  %111 = local.get %7
  local.set %33 %111
  %112 = local.get %32
  local.set (arg)%2 %112
  %113 = local.get %30
  local.set %31 %113
  %114 = local.get %28
  local.set %29 %114
  %115 = local.get %26
  local.set %27 %115
  %116 = local.get %5
  local.set %25 %116
  %117 = local.get %24
  local.set (arg)%1 %117
  %118 = local.get %22
  local.set %23 %118
  %119 = local.get %20
  local.set %21 %119
  %120 = local.get %18
  local.set %19 %120
  %121 = local.get %6
  local.set %17 %121
  %122 = local.get %15
  local.set %16 %122
  %123 = local.get %8
  local.set %14 %123
  %124 = local.get %12
  local.set %13 %124
  %125 = local.get %10
  local.set %11 %125
  %126 = local.get %9
  local.set (arg)%3 %126
  br %BB:4

#pred = {%BB:4, %BB:3}
%BB:4:
  %127 = local.get %29
  %128 = local.get %16
  %129 = local.get %14
  %130 = int.add %128 %129
  %131 = const i32 7
  %132 = int.rotl %130 %131
  %133 = int.xor %127 %132
  local.set %29 %133
  %134 = local.get %14
  %135 = int.add %133 %134
  %136 = const i32 9
  %137 = int.rotl %135 %136
  %138 = local.get %23
  %139 = int.xor %137 %138
  local.set %35 %139
  %140 = local.get %29
  %141 = int.add %139 %140
  %142 = const i32 13
  %143 = int.rotl %141 %142
  %144 = local.get %16
  %145 = int.xor %143 %144
  local.set %36 %145
  %146 = local.get %35
  %147 = int.add %145 %146
  %148 = const i32 18
  %149 = int.rotl %147 %148
  %150 = local.get %14
  %151 = int.xor %149 %150
  local.set %14 %151
  %152 = local.get (arg)%1
  %153 = local.get %17
  %154 = int.add %152 %153
  %155 = const i32 7
  %156 = int.rotl %154 %155
  %157 = local.get %13
  %158 = int.xor %156 %157
  local.set %16 %158
  %159 = int.add %151 %158
  %160 = const i32 7
  %161 = int.rotl %159 %160
  %162 = local.get %33
  %163 = local.get (arg)%3
  %164 = int.add %162 %163
  %165 = const i32 7
  %166 = int.rotl %164 %165
  %167 = local.get %27
  %168 = int.xor %166 %167
  local.set %27 %168
  %169 = local.get %33
  %170 = int.add %168 %169
  %171 = const i32 9
  %172 = int.rotl %170 %171
  %173 = local.get %21
  %174 = int.xor %172 %173
  local.set %37 %174
  %175 = local.get %27
  %176 = int.add %174 %175
  %177 = const i32 13
  %178 = int.rotl %176 %177
  %179 = local.get (arg)%3
  %180 = int.xor %178 %179
  local.set %38 %180
  %181 = int.xor %161 %180
  local.set (arg)%3 %181
  %182 = local.get %14
  %183 = int.add %181 %182
  %184 = const i32 9
  %185 = int.rotl %183 %184
  %186 = local.get (arg)%2
  %187 = local.get %25
  %188 = int.add %186 %187
  %189 = const i32 7
  %190 = int.rotl %188 %189
  %191 = local.get %19
  %192 = int.xor %190 %191
  local.set %23 %192
  %193 = local.get %25
  %194 = int.add %192 %193
  %195 = const i32 9
  %196 = int.rotl %194 %195
  %197 = local.get %11
  %198 = int.xor %196 %197
  local.set %39 %198
  %199 = int.xor %185 %198
  local.set %11 %199
  %200 = local.get (arg)%3
  %201 = int.add %199 %200
  %202 = const i32 13
  %203 = int.rotl %201 %202
  %204 = local.get %16
  %205 = int.xor %203 %204
  local.set %13 %205
  %206 = local.get %11
  %207 = int.add %205 %206
  %208 = const i32 18
  %209 = int.rotl %207 %208
  %210 = local.get %14
  %211 = int.xor %209 %210
  local.set %14 %211
  %212 = local.get %16
  %213 = local.get %16
  %214 = local.get %17
  %215 = int.add %213 %214
  %216 = const i32 9
  %217 = int.rotl %215 %216
  %218 = local.get %31
  %219 = int.xor %217 %218
  local.set %31 %219
  %220 = int.add %212 %219
  %221 = const i32 13
  %222 = int.rotl %220 %221
  %223 = local.get (arg)%1
  %224 = int.xor %222 %223
  local.set (arg)%1 %224
  %225 = local.get %31
  %226 = int.add %224 %225
  %227 = const i32 18
  %228 = int.rotl %226 %227
  %229 = local.get %17
  %230 = int.xor %228 %229
  local.set %17 %230
  %231 = local.get %23
  %232 = int.add %230 %231
  %233 = const i32 7
  %234 = int.rotl %232 %233
  %235 = local.get %36
  %236 = int.xor %234 %235
  local.set %16 %236
  %237 = local.get %17
  %238 = int.add %236 %237
  %239 = const i32 9
  %240 = int.rotl %238 %239
  %241 = local.get %37
  %242 = int.xor %240 %241
  local.set %21 %242
  %243 = local.get %16
  %244 = int.add %242 %243
  %245 = const i32 13
  %246 = int.rotl %244 %245
  %247 = local.get %23
  %248 = int.xor %246 %247
  local.set %19 %248
  %249 = local.get %21
  %250 = int.add %248 %249
  %251 = const i32 18
  %252 = int.rotl %250 %251
  %253 = local.get %17
  %254 = int.xor %252 %253
  local.set %17 %254
  %255 = local.get %39
  %256 = local.get %39
  %257 = local.get %23
  %258 = int.add %256 %257
  %259 = const i32 13
  %260 = int.rotl %258 %259
  %261 = local.get (arg)%2
  %262 = int.xor %260 %261
  local.set (arg)%2 %262
  %263 = int.add %255 %262
  %264 = const i32 18
  %265 = int.rotl %263 %264
  %266 = local.get %25
  %267 = int.xor %265 %266
  local.set %25 %267
  %268 = local.get %27
  %269 = int.add %267 %268
  %270 = const i32 7
  %271 = int.rotl %269 %270
  %272 = local.get (arg)%1
  %273 = int.xor %271 %272
  local.set (arg)%1 %273
  %274 = local.get %25
  %275 = int.add %273 %274
  %276 = const i32 9
  %277 = int.rotl %275 %276
  %278 = local.get %35
  %279 = int.xor %277 %278
  local.set %23 %279
  %280 = local.get (arg)%1
  %281 = int.add %279 %280
  %282 = const i32 13
  %283 = int.rotl %281 %282
  %284 = local.get %27
  %285 = int.xor %283 %284
  local.set %27 %285
  %286 = local.get %23
  %287 = int.add %285 %286
  %288 = const i32 18
  %289 = int.rotl %287 %288
  %290 = local.get %25
  %291 = int.xor %289 %290
  local.set %25 %291
  %292 = local.get %38
  %293 = local.get %37
  %294 = int.add %292 %293
  %295 = const i32 18
  %296 = int.rotl %294 %295
  %297 = local.get %33
  %298 = int.xor %296 %297
  local.set %33 %298
  %299 = local.get %29
  %300 = int.add %298 %299
  %301 = const i32 7
  %302 = int.rotl %300 %301
  %303 = local.get (arg)%2
  %304 = int.xor %302 %303
  local.set (arg)%2 %304
  %305 = local.get %33
  %306 = int.add %304 %305
  %307 = const i32 9
  %308 = int.rotl %306 %307
  %309 = local.get %31
  %310 = int.xor %308 %309
  local.set %31 %310
  %311 = local.get (arg)%2
  %312 = int.add %310 %311
  %313 = const i32 13
  %314 = int.rotl %312 %313
  %315 = local.get %29
  %316 = int.xor %314 %315
  local.set %29 %316
  %317 = local.get %31
  %318 = int.add %316 %317
  %319 = const i32 18
  %320 = int.rotl %318 %319
  %321 = local.get %33
  %322 = int.xor %320 %321
  local.set %33 %322
  %323 = local.get %34
  %324 = const i32 2
  %325 = int.add %323 %324
  local.set %34 %325
  %326 = local.get (arg)%4
  %327 = int.lt.s %325 %326
  br.cond %327 %BB:4 %BB:5

#pred = {%BB:4}
%BB:5:
  br %BB:6

#pred = {%BB:5, %BB:2}
%BB:6:
  %328 = local.get (arg)%0
  %329 = const i32 60
  %330 = int.add %328 %329
  %331 = local.get %14
  %332 = local.get %8
  %333 = int.add %331 %332
  memory.guard %memory:0 %330 32
  store.32 %memory:0 %330 %333
  %334 = local.get (arg)%0
  %335 = const i32 56
  %336 = int.add %334 %335
  %337 = local.get %13
  %338 = local.get %12
  %339 = int.add %337 %338
  memory.guard %memory:0 %336 32
  store.32 %memory:0 %336 %339
  %340 = local.get (arg)%0
  %341 = const i32 52
  %342 = int.add %340 %341
  %343 = local.get %11
  %344 = local.get %10
  %345 = int.add %343 %344
  memory.guard %memory:0 %342 32
  store.32 %memory:0 %342 %345
  %346 = local.get (arg)%0
  %347 = const i32 48
  %348 = int.add %346 %347
  %349 = local.get (arg)%3
  %350 = local.get %9
  %351 = int.add %349 %350
  memory.guard %memory:0 %348 32
  store.32 %memory:0 %348 %351
  %352 = local.get (arg)%0
  %353 = const i32 44
  %354 = int.add %352 %353
  %355 = local.get %16
  %356 = local.get %15
  %357 = int.add %355 %356
  memory.guard %memory:0 %354 32
  store.32 %memory:0 %354 %357
  %358 = local.get (arg)%0
  %359 = const i32 40
  %360 = int.add %358 %359
  %361 = local.get %17
  %362 = local.get %6
  %363 = int.add %361 %362
  memory.guard %memory:0 %360 32
  store.32 %memory:0 %360 %363
  %364 = local.get (arg)%0
  %365 = const i32 36
  %366 = int.add %364 %365
  %367 = local.get %19
  %368 = local.get %18
  %369 = int.add %367 %368
  memory.guard %memory:0 %366 32
  store.32 %memory:0 %366 %369
  %370 = local.get (arg)%0
  %371 = const i32 32
  %372 = int.add %370 %371
  %373 = local.get %21
  %374 = local.get %20
  %375 = int.add %373 %374
  memory.guard %memory:0 %372 32
  store.32 %memory:0 %372 %375
  %376 = local.get (arg)%0
  %377 = const i32 28
  %378 = int.add %376 %377
  %379 = local.get %23
  %380 = local.get %22
  %381 = int.add %379 %380
  memory.guard %memory:0 %378 32
  store.32 %memory:0 %378 %381
  %382 = local.get (arg)%0
  %383 = const i32 24
  %384 = int.add %382 %383
  %385 = local.get (arg)%1
  %386 = local.get %24
  %387 = int.add %385 %386
  memory.guard %memory:0 %384 32
  store.32 %memory:0 %384 %387
  %388 = local.get (arg)%0
  %389 = const i32 20
  %390 = int.add %388 %389
  %391 = local.get %25
  %392 = local.get %5
  %393 = int.add %391 %392
  memory.guard %memory:0 %390 32
  store.32 %memory:0 %390 %393
  %394 = local.get (arg)%0
  %395 = const i32 16
  %396 = int.add %394 %395
  %397 = local.get %27
  %398 = local.get %26
  %399 = int.add %397 %398
  memory.guard %memory:0 %396 32
  store.32 %memory:0 %396 %399
  %400 = local.get (arg)%0
  %401 = const i32 12
  %402 = int.add %400 %401
  %403 = local.get %29
  %404 = local.get %28
  %405 = int.add %403 %404
  memory.guard %memory:0 %402 32
  store.32 %memory:0 %402 %405
  %406 = local.get (arg)%0
  %407 = const i32 8
  %408 = int.add %406 %407
  %409 = local.get %31
  %410 = local.get %30
  %411 = int.add %409 %410
  memory.guard %memory:0 %408 32
  store.32 %memory:0 %408 %411
  %412 = local.get (arg)%0
  %413 = const i32 4
  %414 = int.add %412 %413
  %415 = local.get (arg)%2
  %416 = local.get %32
  %417 = int.add %415 %416
  memory.guard %memory:0 %414 32
  store.32 %memory:0 %414 %417
  %418 = local.get (arg)%0
  %419 = local.get %33
  %420 = local.get %7
  %421 = int.add %419 %420
  memory.guard %memory:0 %418 32
  store.32 %memory:0 %418 %421
  ret

}

function %function:14 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 64
  ret %0

}

function %function:15 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 16
  ret %0

}

function %function:16 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 32
  ret %0

}

function %function:17 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 16
  ret %0

}

function %function:18 : [i32, i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i32}
#pred = {}
%entry:
  %4 = local.get (arg)%0
  %5 = local.get (arg)%1
  %6 = local.get (arg)%2
  %7 = local.get (arg)%3
  %8 = const i32 12
  call %function:13(%4, %5, %6, %7, %8)
  %9 = const i32 0
  ret %9

}

function %function:19 : [i32, i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i32}
#pred = {}
%entry:
  %4 = local.get (arg)%0
  %5 = local.get (arg)%1
  %6 = local.get (arg)%2
  %7 = local.get (arg)%3
  %8 = const i32 8
  call %function:13(%4, %5, %6, %7, %8)
  %9 = const i32 0
  ret %9

}

function %function:20 : [i32, i32, i64] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i64, %3:i32, %4:i64, %5:i64, %6:i64, %7:i32, %8:i32, %9:i32}
#pred = {}
%entry:
  %10 = global.get %global:0
  %11 = const i32 288
  %12 = int.sub %10 %11
  local.set %3 %12
  global.set %global:0%12
  %13 = local.get (arg)%2
  %14 = int.eqz %13
  br.cond %14 %BB:15 %BB:0

#pred = {%entry}
%BB:0:
  %15 = local.get (arg)%0
  %16 = local.get (arg)%0
  %17 = const i32 32
  %18 = int.add %16 %17
  memory.guard %memory:0 %18 64
  %19 = load.64 i64 %memory:0 %18
  local.set %4 %19
  %20 = local.get (arg)%2
  %21 = const i64 3
  %22 = int.shl %20 %21
  %23 = int.add %19 %22
  %24 = const i32 32
  %25 = int.add %15 %24
  memory.guard %memory:0 %25 64
  store.64 %memory:0 %25 %23
  %26 = const i64 64
  %27 = local.get %4
  %28 = const i64 3
  %29 = int.shr.u %27 %28
  local.set %5 %29
  %30 = const i64 63
  %31 = int.and %29 %30
  local.set %4 %31
  %32 = int.sub %26 %31
  local.set %6 %32
  %33 = local.get (arg)%2
  %34 = int.gt.u %32 %33
  br.cond %34 %BB:12 %BB:1

#pred = {%BB:0}
%BB:1:
  %35 = local.get %4
  %36 = const i64 -64
  %37 = int.or %35 %36
  local.set %4 %37
  %38 = local.get (arg)%0
  %39 = local.get %5
  %40 = cast i32 %39
  %41 = const i32 63
  %42 = int.and %40 %41
  %43 = int.add %38 %42
  %44 = const i32 40
  %45 = int.add %43 %44
  local.set %7 %45
  %46 = local.get (arg)%1
  local.set %8 %46
  br %BB:2

#pred = {%BB:2, %BB:1}
%BB:2:
  %47 = local.get %7
  %48 = local.get %8
  memory.guard %memory:0 %48 8
  %49 = load.8 i32 %memory:0 %48
  memory.guard %memory:0 %47 8
  store.8 %memory:0 %47 %49
  %50 = local.get %7
  %51 = const i32 1
  %52 = int.add %50 %51
  local.set %7 %52
  %53 = local.get %8
  %54 = const i32 1
  %55 = int.add %53 %54
  local.set %8 %55
  %56 = local.get %4
  %57 = const i64 1
  %58 = int.add %56 %57
  local.set %5 %58
  %59 = local.get %4
  %60 = int.ge.u %58 %59
  local.set %9 %60
  %61 = local.get %5
  local.set %4 %61
  %62 = local.get %9
  br.cond %62 %BB:2 %BB:3

#pred = {%BB:2}
%BB:3:
  %63 = local.get (arg)%0
  %64 = local.get (arg)%0
  %65 = const i32 40
  %66 = int.add %64 %65
  %67 = local.get %3
  %68 = local.get %3
  %69 = const i32 256
  %70 = int.add %68 %69
  local.set %7 %70
  call %function:21(%63, %66, %67, %70)
  %71 = local.get (arg)%1
  %72 = local.get %6
  %73 = cast i32 %72
  %74 = int.add %71 %73
  local.set (arg)%1 %74
  %75 = local.get (arg)%2
  %76 = local.get %6
  %77 = int.sub %75 %76
  local.set %4 %77
  %78 = const i64 64
  %79 = int.lt.u %77 %78
  br.cond %79 %BB:7 %BB:4

#pred = {%BB:3}
%BB:4:
  br %BB:5

#pred = {%BB:5, %BB:4}
%BB:5:
  %80 = local.get (arg)%0
  %81 = local.get (arg)%1
  %82 = local.get %3
  %83 = local.get %7
  call %function:21(%80, %81, %82, %83)
  %84 = local.get (arg)%1
  %85 = const i32 64
  %86 = int.add %84 %85
  local.set (arg)%1 %86
  %87 = local.get %4
  %88 = const i64 -64
  %89 = int.add %87 %88
  local.set %4 %89
  %90 = const i64 63
  %91 = int.gt.u %89 %90
  br.cond %91 %BB:5 %BB:6

#pred = {%BB:5}
%BB:6:
  br %BB:7

#pred = {%BB:6, %BB:3}
%BB:7:
  %92 = local.get %4
  %93 = int.eqz %92
  br.cond %93 %BB:11 %BB:8

#pred = {%BB:7}
%BB:8:
  %94 = local.get (arg)%0
  %95 = const i32 40
  %96 = int.add %94 %95
  local.set %7 %96
  br %BB:9

#pred = {%BB:9, %BB:8}
%BB:9:
  %97 = local.get %7
  %98 = local.get (arg)%1
  memory.guard %memory:0 %98 8
  %99 = load.8 i32 %memory:0 %98
  memory.guard %memory:0 %97 8
  store.8 %memory:0 %97 %99
  %100 = local.get (arg)%1
  %101 = const i32 1
  %102 = int.add %100 %101
  local.set (arg)%1 %102
  %103 = local.get %7
  %104 = const i32 1
  %105 = int.add %103 %104
  local.set %7 %105
  %106 = local.get %4
  %107 = const i64 -1
  %108 = int.add %106 %107
  local.set %4 %108
  %109 = const i64 0
  %110 = int.ne %108 %109
  br.cond %110 %BB:9 %BB:10

#pred = {%BB:9}
%BB:10:
  br %BB:11

#pred = {%BB:10, %BB:7}
%BB:11:
  %111 = local.get %3
  %112 = const i32 288
  call %function:46(%111, %112)
  br %BB:15

#pred = {%BB:0}
%BB:12:
  %113 = local.get (arg)%0
  %114 = local.get %5
  %115 = cast i32 %114
  %116 = const i32 63
  %117 = int.and %115 %116
  %118 = int.add %113 %117
  %119 = const i32 40
  %120 = int.add %118 %119
  local.set %7 %120
  br %BB:13

#pred = {%BB:13, %BB:12}
%BB:13:
  %121 = local.get %7
  %122 = local.get (arg)%1
  memory.guard %memory:0 %122 8
  %123 = load.8 i32 %memory:0 %122
  memory.guard %memory:0 %121 8
  store.8 %memory:0 %121 %123
  %124 = local.get %7
  %125 = const i32 1
  %126 = int.add %124 %125
  local.set %7 %126
  %127 = local.get (arg)%1
  %128 = const i32 1
  %129 = int.add %127 %128
  local.set (arg)%1 %129
  %130 = local.get (arg)%2
  %131 = const i64 -1
  %132 = int.add %130 %131
  local.set (arg)%2 %132
  %133 = int.eqz %132
  %134 = int.eqz %133
  br.cond %134 %BB:13 %BB:14

#pred = {%BB:13}
%BB:14:
  br %BB:15

#pred = {%BB:14, %BB:11, %entry}
%BB:15:
  %135 = local.get %3
  %136 = const i32 288
  %137 = int.add %135 %136
  global.set %global:0%137
  %138 = const i32 0
  ret %138

}

function %function:21 : [i32, i32, i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i32, %4:i32, %5:i32, %6:i32, %7:i32, %8:i32, %9:i32, %10:i32, %11:i32, %12:i32, %13:i32, %14:i32, %15:i32, %16:i32, %17:i32, %18:i32, %19:i32, %20:i32, %21:i32, %22:i32, %23:i32, %24:i32, %25:i32, %26:i32, %27:i32, %28:i32, %29:i32, %30:i32, %31:i32, %32:i32}
#pred = {}
%entry:
  %33 = local.get (arg)%2
  %34 = local.get (arg)%1
  memory.guard %memory:0 %34 32
  %35 = load.32 i32 %memory:0 %34
  local.set %4 %35
  %36 = const i32 24
  %37 = int.shl %35 %36
  %38 = local.get %4
  %39 = const i32 8
  %40 = int.shl %38 %39
  %41 = const i32 16711680
  %42 = int.and %40 %41
  %43 = int.or %37 %42
  %44 = local.get %4
  %45 = const i32 8
  %46 = int.shr.u %44 %45
  %47 = const i32 65280
  %48 = int.and %46 %47
  %49 = local.get %4
  %50 = const i32 24
  %51 = int.shr.u %49 %50
  %52 = int.or %48 %51
  %53 = int.or %43 %52
  memory.guard %memory:0 %33 32
  store.32 %memory:0 %33 %53
  %54 = local.get (arg)%2
  %55 = const i32 4
  %56 = int.add %54 %55
  %57 = local.get (arg)%1
  %58 = const i32 4
  %59 = int.add %57 %58
  memory.guard %memory:0 %59 32
  %60 = load.32 i32 %memory:0 %59
  local.set %4 %60
  %61 = const i32 24
  %62 = int.shl %60 %61
  %63 = local.get %4
  %64 = const i32 8
  %65 = int.shl %63 %64
  %66 = const i32 16711680
  %67 = int.and %65 %66
  %68 = int.or %62 %67
  %69 = local.get %4
  %70 = const i32 8
  %71 = int.shr.u %69 %70
  %72 = const i32 65280
  %73 = int.and %71 %72
  %74 = local.get %4
  %75 = const i32 24
  %76 = int.shr.u %74 %75
  %77 = int.or %73 %76
  %78 = int.or %68 %77
  memory.guard %memory:0 %56 32
  store.32 %memory:0 %56 %78
  %79 = local.get (arg)%2
  %80 = const i32 8
  %81 = int.add %79 %80
  %82 = local.get (arg)%1
  %83 = const i32 8
  %84 = int.add %82 %83
  memory.guard %memory:0 %84 32
  %85 = load.32 i32 %memory:0 %84
  local.set %4 %85
  %86 = const i32 24
  %87 = int.shl %85 %86
  %88 = local.get %4
  %89 = const i32 8
  %90 = int.shl %88 %89
  %91 = const i32 16711680
  %92 = int.and %90 %91
  %93 = int.or %87 %92
  %94 = local.get %4
  %95 = const i32 8
  %96 = int.shr.u %94 %95
  %97 = const i32 65280
  %98 = int.and %96 %97
  %99 = local.get %4
  %100 = const i32 24
  %101 = int.shr.u %99 %100
  %102 = int.or %98 %101
  %103 = int.or %93 %102
  memory.guard %memory:0 %81 32
  store.32 %memory:0 %81 %103
  %104 = local.get (arg)%2
  %105 = const i32 12
  %106 = int.add %104 %105
  %107 = local.get (arg)%1
  %108 = const i32 12
  %109 = int.add %107 %108
  memory.guard %memory:0 %109 32
  %110 = load.32 i32 %memory:0 %109
  local.set %4 %110
  %111 = const i32 24
  %112 = int.shl %110 %111
  %113 = local.get %4
  %114 = const i32 8
  %115 = int.shl %113 %114
  %116 = const i32 16711680
  %117 = int.and %115 %116
  %118 = int.or %112 %117
  %119 = local.get %4
  %120 = const i32 8
  %121 = int.shr.u %119 %120
  %122 = const i32 65280
  %123 = int.and %121 %122
  %124 = local.get %4
  %125 = const i32 24
  %126 = int.shr.u %124 %125
  %127 = int.or %123 %126
  %128 = int.or %118 %127
  memory.guard %memory:0 %106 32
  store.32 %memory:0 %106 %128
  %129 = local.get (arg)%2
  %130 = const i32 16
  %131 = int.add %129 %130
  %132 = local.get (arg)%1
  %133 = const i32 16
  %134 = int.add %132 %133
  memory.guard %memory:0 %134 32
  %135 = load.32 i32 %memory:0 %134
  local.set %4 %135
  %136 = const i32 24
  %137 = int.shl %135 %136
  %138 = local.get %4
  %139 = const i32 8
  %140 = int.shl %138 %139
  %141 = const i32 16711680
  %142 = int.and %140 %141
  %143 = int.or %137 %142
  %144 = local.get %4
  %145 = const i32 8
  %146 = int.shr.u %144 %145
  %147 = const i32 65280
  %148 = int.and %146 %147
  %149 = local.get %4
  %150 = const i32 24
  %151 = int.shr.u %149 %150
  %152 = int.or %148 %151
  %153 = int.or %143 %152
  memory.guard %memory:0 %131 32
  store.32 %memory:0 %131 %153
  %154 = local.get (arg)%2
  %155 = const i32 20
  %156 = int.add %154 %155
  %157 = local.get (arg)%1
  %158 = const i32 20
  %159 = int.add %157 %158
  memory.guard %memory:0 %159 32
  %160 = load.32 i32 %memory:0 %159
  local.set %4 %160
  %161 = const i32 24
  %162 = int.shl %160 %161
  %163 = local.get %4
  %164 = const i32 8
  %165 = int.shl %163 %164
  %166 = const i32 16711680
  %167 = int.and %165 %166
  %168 = int.or %162 %167
  %169 = local.get %4
  %170 = const i32 8
  %171 = int.shr.u %169 %170
  %172 = const i32 65280
  %173 = int.and %171 %172
  %174 = local.get %4
  %175 = const i32 24
  %176 = int.shr.u %174 %175
  %177 = int.or %173 %176
  %178 = int.or %168 %177
  memory.guard %memory:0 %156 32
  store.32 %memory:0 %156 %178
  %179 = local.get (arg)%2
  %180 = const i32 24
  %181 = int.add %179 %180
  %182 = local.get (arg)%1
  %183 = const i32 24
  %184 = int.add %182 %183
  memory.guard %memory:0 %184 32
  %185 = load.32 i32 %memory:0 %184
  local.set %4 %185
  %186 = const i32 24
  %187 = int.shl %185 %186
  %188 = local.get %4
  %189 = const i32 8
  %190 = int.shl %188 %189
  %191 = const i32 16711680
  %192 = int.and %190 %191
  %193 = int.or %187 %192
  %194 = local.get %4
  %195 = const i32 8
  %196 = int.shr.u %194 %195
  %197 = const i32 65280
  %198 = int.and %196 %197
  %199 = local.get %4
  %200 = const i32 24
  %201 = int.shr.u %199 %200
  %202 = int.or %198 %201
  %203 = int.or %193 %202
  memory.guard %memory:0 %181 32
  store.32 %memory:0 %181 %203
  %204 = local.get (arg)%2
  %205 = const i32 28
  %206 = int.add %204 %205
  %207 = local.get (arg)%1
  %208 = const i32 28
  %209 = int.add %207 %208
  memory.guard %memory:0 %209 32
  %210 = load.32 i32 %memory:0 %209
  local.set %4 %210
  %211 = const i32 24
  %212 = int.shl %210 %211
  %213 = local.get %4
  %214 = const i32 8
  %215 = int.shl %213 %214
  %216 = const i32 16711680
  %217 = int.and %215 %216
  %218 = int.or %212 %217
  %219 = local.get %4
  %220 = const i32 8
  %221 = int.shr.u %219 %220
  %222 = const i32 65280
  %223 = int.and %221 %222
  %224 = local.get %4
  %225 = const i32 24
  %226 = int.shr.u %224 %225
  %227 = int.or %223 %226
  %228 = int.or %218 %227
  memory.guard %memory:0 %206 32
  store.32 %memory:0 %206 %228
  %229 = local.get (arg)%2
  %230 = const i32 32
  %231 = int.add %229 %230
  %232 = local.get (arg)%1
  %233 = const i32 32
  %234 = int.add %232 %233
  memory.guard %memory:0 %234 32
  %235 = load.32 i32 %memory:0 %234
  local.set %4 %235
  %236 = const i32 24
  %237 = int.shl %235 %236
  %238 = local.get %4
  %239 = const i32 8
  %240 = int.shl %238 %239
  %241 = const i32 16711680
  %242 = int.and %240 %241
  %243 = int.or %237 %242
  %244 = local.get %4
  %245 = const i32 8
  %246 = int.shr.u %244 %245
  %247 = const i32 65280
  %248 = int.and %246 %247
  %249 = local.get %4
  %250 = const i32 24
  %251 = int.shr.u %249 %250
  %252 = int.or %248 %251
  %253 = int.or %243 %252
  memory.guard %memory:0 %231 32
  store.32 %memory:0 %231 %253
  %254 = local.get (arg)%2
  %255 = const i32 36
  %256 = int.add %254 %255
  %257 = local.get (arg)%1
  %258 = const i32 36
  %259 = int.add %257 %258
  memory.guard %memory:0 %259 32
  %260 = load.32 i32 %memory:0 %259
  local.set %4 %260
  %261 = const i32 24
  %262 = int.shl %260 %261
  %263 = local.get %4
  %264 = const i32 8
  %265 = int.shl %263 %264
  %266 = const i32 16711680
  %267 = int.and %265 %266
  %268 = int.or %262 %267
  %269 = local.get %4
  %270 = const i32 8
  %271 = int.shr.u %269 %270
  %272 = const i32 65280
  %273 = int.and %271 %272
  %274 = local.get %4
  %275 = const i32 24
  %276 = int.shr.u %274 %275
  %277 = int.or %273 %276
  %278 = int.or %268 %277
  memory.guard %memory:0 %256 32
  store.32 %memory:0 %256 %278
  %279 = local.get (arg)%2
  %280 = const i32 40
  %281 = int.add %279 %280
  %282 = local.get (arg)%1
  %283 = const i32 40
  %284 = int.add %282 %283
  memory.guard %memory:0 %284 32
  %285 = load.32 i32 %memory:0 %284
  local.set %4 %285
  %286 = const i32 24
  %287 = int.shl %285 %286
  %288 = local.get %4
  %289 = const i32 8
  %290 = int.shl %288 %289
  %291 = const i32 16711680
  %292 = int.and %290 %291
  %293 = int.or %287 %292
  %294 = local.get %4
  %295 = const i32 8
  %296 = int.shr.u %294 %295
  %297 = const i32 65280
  %298 = int.and %296 %297
  %299 = local.get %4
  %300 = const i32 24
  %301 = int.shr.u %299 %300
  %302 = int.or %298 %301
  %303 = int.or %293 %302
  memory.guard %memory:0 %281 32
  store.32 %memory:0 %281 %303
  %304 = local.get (arg)%2
  %305 = const i32 44
  %306 = int.add %304 %305
  %307 = local.get (arg)%1
  %308 = const i32 44
  %309 = int.add %307 %308
  memory.guard %memory:0 %309 32
  %310 = load.32 i32 %memory:0 %309
  local.set %4 %310
  %311 = const i32 24
  %312 = int.shl %310 %311
  %313 = local.get %4
  %314 = const i32 8
  %315 = int.shl %313 %314
  %316 = const i32 16711680
  %317 = int.and %315 %316
  %318 = int.or %312 %317
  %319 = local.get %4
  %320 = const i32 8
  %321 = int.shr.u %319 %320
  %322 = const i32 65280
  %323 = int.and %321 %322
  %324 = local.get %4
  %325 = const i32 24
  %326 = int.shr.u %324 %325
  %327 = int.or %323 %326
  %328 = int.or %318 %327
  memory.guard %memory:0 %306 32
  store.32 %memory:0 %306 %328
  %329 = local.get (arg)%2
  %330 = const i32 48
  %331 = int.add %329 %330
  %332 = local.get (arg)%1
  %333 = const i32 48
  %334 = int.add %332 %333
  memory.guard %memory:0 %334 32
  %335 = load.32 i32 %memory:0 %334
  local.set %4 %335
  %336 = const i32 24
  %337 = int.shl %335 %336
  %338 = local.get %4
  %339 = const i32 8
  %340 = int.shl %338 %339
  %341 = const i32 16711680
  %342 = int.and %340 %341
  %343 = int.or %337 %342
  %344 = local.get %4
  %345 = const i32 8
  %346 = int.shr.u %344 %345
  %347 = const i32 65280
  %348 = int.and %346 %347
  %349 = local.get %4
  %350 = const i32 24
  %351 = int.shr.u %349 %350
  %352 = int.or %348 %351
  %353 = int.or %343 %352
  memory.guard %memory:0 %331 32
  store.32 %memory:0 %331 %353
  %354 = local.get (arg)%2
  %355 = const i32 52
  %356 = int.add %354 %355
  %357 = local.get (arg)%1
  %358 = const i32 52
  %359 = int.add %357 %358
  memory.guard %memory:0 %359 32
  %360 = load.32 i32 %memory:0 %359
  local.set %4 %360
  %361 = const i32 24
  %362 = int.shl %360 %361
  %363 = local.get %4
  %364 = const i32 8
  %365 = int.shl %363 %364
  %366 = const i32 16711680
  %367 = int.and %365 %366
  %368 = int.or %362 %367
  %369 = local.get %4
  %370 = const i32 8
  %371 = int.shr.u %369 %370
  %372 = const i32 65280
  %373 = int.and %371 %372
  %374 = local.get %4
  %375 = const i32 24
  %376 = int.shr.u %374 %375
  %377 = int.or %373 %376
  %378 = int.or %368 %377
  memory.guard %memory:0 %356 32
  store.32 %memory:0 %356 %378
  %379 = local.get (arg)%2
  %380 = const i32 56
  %381 = int.add %379 %380
  %382 = local.get (arg)%1
  %383 = const i32 56
  %384 = int.add %382 %383
  memory.guard %memory:0 %384 32
  %385 = load.32 i32 %memory:0 %384
  local.set %4 %385
  %386 = const i32 24
  %387 = int.shl %385 %386
  %388 = local.get %4
  %389 = const i32 8
  %390 = int.shl %388 %389
  %391 = const i32 16711680
  %392 = int.and %390 %391
  %393 = int.or %387 %392
  %394 = local.get %4
  %395 = const i32 8
  %396 = int.shr.u %394 %395
  %397 = const i32 65280
  %398 = int.and %396 %397
  %399 = local.get %4
  %400 = const i32 24
  %401 = int.shr.u %399 %400
  %402 = int.or %398 %401
  %403 = int.or %393 %402
  memory.guard %memory:0 %381 32
  store.32 %memory:0 %381 %403
  %404 = local.get (arg)%2
  %405 = const i32 60
  %406 = int.add %404 %405
  %407 = local.get (arg)%1
  %408 = const i32 60
  %409 = int.add %407 %408
  memory.guard %memory:0 %409 32
  %410 = load.32 i32 %memory:0 %409
  local.set (arg)%1 %410
  %411 = const i32 24
  %412 = int.shl %410 %411
  %413 = local.get (arg)%1
  %414 = const i32 8
  %415 = int.shl %413 %414
  %416 = const i32 16711680
  %417 = int.and %415 %416
  %418 = int.or %412 %417
  %419 = local.get (arg)%1
  %420 = const i32 8
  %421 = int.shr.u %419 %420
  %422 = const i32 65280
  %423 = int.and %421 %422
  %424 = local.get (arg)%1
  %425 = const i32 24
  %426 = int.shr.u %424 %425
  %427 = int.or %423 %426
  %428 = int.or %418 %427
  memory.guard %memory:0 %406 32
  store.32 %memory:0 %406 %428
  %429 = local.get (arg)%3
  %430 = const i32 24
  %431 = int.add %429 %430
  local.set %5 %431
  %432 = local.get (arg)%0
  %433 = const i32 24
  %434 = int.add %432 %433
  memory.guard %memory:0 %434 64
  %435 = load.64 i64 %memory:0 %434
  memory.guard %memory:0 %431 64
  store.64 %memory:0 %431 %435
  %436 = local.get (arg)%3
  %437 = const i32 16
  %438 = int.add %436 %437
  local.set %6 %438
  %439 = local.get (arg)%0
  %440 = const i32 16
  %441 = int.add %439 %440
  memory.guard %memory:0 %441 64
  %442 = load.64 i64 %memory:0 %441
  memory.guard %memory:0 %438 64
  store.64 %memory:0 %438 %442
  %443 = local.get (arg)%3
  %444 = const i32 8
  %445 = int.add %443 %444
  local.set %7 %445
  %446 = local.get (arg)%0
  %447 = const i32 8
  %448 = int.add %446 %447
  memory.guard %memory:0 %448 64
  %449 = load.64 i64 %memory:0 %448
  memory.guard %memory:0 %445 64
  store.64 %memory:0 %445 %449
  %450 = local.get (arg)%3
  %451 = local.get (arg)%0
  memory.guard %memory:0 %451 64
  %452 = load.64 i64 %memory:0 %451
  memory.guard %memory:0 %450 64
  store.64 %memory:0 %450 %452
  %453 = local.get (arg)%2
  memory.guard %memory:0 %453 32
  %454 = load.32 i32 %memory:0 %453
  local.set (arg)%1 %454
  %455 = const i32 0
  local.set %4 %455
  br %BB:0

#pred = {%BB:1, %entry}
%BB:0:
  %456 = local.get (arg)%3
  %457 = const i32 12
  %458 = int.add %456 %457
  local.set %8 %458
  %459 = local.get %6
  memory.guard %memory:0 %459 32
  %460 = load.32 i32 %memory:0 %459
  local.set %9 %460
  %461 = const i32 26
  %462 = int.rotl %460 %461
  %463 = local.get %9
  %464 = const i32 21
  %465 = int.rotl %463 %464
  %466 = int.xor %462 %465
  %467 = local.get %9
  %468 = const i32 7
  %469 = int.rotl %467 %468
  %470 = int.xor %466 %469
  %471 = local.get (arg)%1
  %472 = int.add %470 %471
  %473 = local.get %4
  %474 = const i32 65952
  %475 = int.add %473 %474
  memory.guard %memory:0 %475 32
  %476 = load.32 i32 %memory:0 %475
  %477 = int.add %472 %476
  %478 = local.get %5
  memory.guard %memory:0 %478 32
  %479 = load.32 i32 %memory:0 %478
  local.set (arg)%1 %479
  %480 = local.get (arg)%3
  %481 = const i32 20
  %482 = int.add %480 %481
  local.set %10 %482
  memory.guard %memory:0 %482 32
  %483 = load.32 i32 %memory:0 %482
  local.set %11 %483
  %484 = int.xor %479 %483
  %485 = local.get %9
  %486 = int.and %484 %485
  %487 = local.get (arg)%1
  %488 = int.xor %486 %487
  %489 = int.add %477 %488
  %490 = local.get (arg)%3
  %491 = const i32 28
  %492 = int.add %490 %491
  local.set %12 %492
  memory.guard %memory:0 %492 32
  %493 = load.32 i32 %memory:0 %492
  %494 = int.add %489 %493
  local.set %13 %494
  %495 = local.get %8
  memory.guard %memory:0 %495 32
  %496 = load.32 i32 %memory:0 %495
  %497 = int.add %494 %496
  local.set %14 %497
  memory.guard %memory:0 %458 32
  store.32 %memory:0 %458 %497
  %498 = local.get %12
  %499 = local.get (arg)%3
  memory.guard %memory:0 %499 32
  %500 = load.32 i32 %memory:0 %499
  local.set %15 %500
  %501 = const i32 30
  %502 = int.rotl %500 %501
  %503 = local.get %15
  %504 = const i32 19
  %505 = int.rotl %503 %504
  %506 = int.xor %502 %505
  %507 = local.get %15
  %508 = const i32 10
  %509 = int.rotl %507 %508
  %510 = int.xor %506 %509
  %511 = local.get %13
  %512 = int.add %510 %511
  %513 = local.get %7
  memory.guard %memory:0 %513 32
  %514 = load.32 i32 %memory:0 %513
  local.set %16 %514
  %515 = local.get (arg)%3
  %516 = const i32 4
  %517 = int.add %515 %516
  local.set %17 %517
  memory.guard %memory:0 %517 32
  %518 = load.32 i32 %memory:0 %517
  local.set %18 %518
  %519 = int.or %514 %518
  %520 = local.get %15
  %521 = int.and %519 %520
  %522 = local.get %16
  %523 = local.get %18
  %524 = int.and %522 %523
  %525 = int.or %521 %524
  %526 = int.add %512 %525
  local.set %13 %526
  memory.guard %memory:0 %498 32
  store.32 %memory:0 %498 %526
  %527 = local.get %7
  %528 = local.get %16
  %529 = local.get (arg)%1
  %530 = local.get %11
  %531 = local.get %14
  %532 = local.get %11
  %533 = local.get %9
  %534 = int.xor %532 %533
  %535 = int.and %531 %534
  %536 = int.xor %530 %535
  %537 = int.add %529 %536
  %538 = local.get (arg)%2
  %539 = local.get %4
  %540 = int.add %538 %539
  local.set (arg)%1 %540
  %541 = const i32 4
  %542 = int.add %540 %541
  local.set %19 %542
  memory.guard %memory:0 %542 32
  %543 = load.32 i32 %memory:0 %542
  %544 = int.add %537 %543
  %545 = local.get %14
  %546 = const i32 26
  %547 = int.rotl %545 %546
  %548 = local.get %14
  %549 = const i32 21
  %550 = int.rotl %548 %549
  %551 = int.xor %547 %550
  %552 = local.get %14
  %553 = const i32 7
  %554 = int.rotl %552 %553
  %555 = int.xor %551 %554
  %556 = int.add %544 %555
  %557 = local.get %4
  %558 = const i32 65956
  %559 = int.add %557 %558
  memory.guard %memory:0 %559 32
  %560 = load.32 i32 %memory:0 %559
  %561 = int.add %556 %560
  local.set %20 %561
  %562 = int.add %528 %561
  local.set %21 %562
  memory.guard %memory:0 %527 32
  store.32 %memory:0 %527 %562
  %563 = local.get %5
  %564 = local.get %20
  %565 = local.get %13
  %566 = local.get %18
  %567 = local.get %15
  %568 = int.or %566 %567
  %569 = int.and %565 %568
  %570 = local.get %18
  %571 = local.get %15
  %572 = int.and %570 %571
  %573 = int.or %569 %572
  %574 = int.add %564 %573
  %575 = local.get %13
  %576 = const i32 30
  %577 = int.rotl %575 %576
  %578 = local.get %13
  %579 = const i32 19
  %580 = int.rotl %578 %579
  %581 = int.xor %577 %580
  %582 = local.get %13
  %583 = const i32 10
  %584 = int.rotl %582 %583
  %585 = int.xor %581 %584
  %586 = int.add %574 %585
  local.set %16 %586
  memory.guard %memory:0 %563 32
  store.32 %memory:0 %563 %586
  %587 = local.get %10
  %588 = local.get %16
  %589 = const i32 30
  %590 = int.rotl %588 %589
  %591 = local.get %16
  %592 = const i32 19
  %593 = int.rotl %591 %592
  %594 = int.xor %590 %593
  %595 = local.get %16
  %596 = const i32 10
  %597 = int.rotl %595 %596
  %598 = int.xor %594 %597
  %599 = local.get %16
  %600 = local.get %13
  %601 = local.get %15
  %602 = int.or %600 %601
  %603 = int.and %599 %602
  %604 = local.get %13
  %605 = local.get %15
  %606 = int.and %604 %605
  %607 = int.or %603 %606
  %608 = int.add %598 %607
  %609 = local.get %11
  %610 = local.get (arg)%1
  %611 = const i32 8
  %612 = int.add %610 %611
  local.set %22 %612
  memory.guard %memory:0 %612 32
  %613 = load.32 i32 %memory:0 %612
  %614 = int.add %609 %613
  %615 = local.get %4
  %616 = const i32 65960
  %617 = int.add %615 %616
  memory.guard %memory:0 %617 32
  %618 = load.32 i32 %memory:0 %617
  %619 = int.add %614 %618
  %620 = local.get %9
  %621 = local.get %21
  %622 = local.get %14
  %623 = local.get %9
  %624 = int.xor %622 %623
  %625 = int.and %621 %624
  %626 = int.xor %620 %625
  %627 = int.add %619 %626
  %628 = local.get %21
  %629 = const i32 26
  %630 = int.rotl %628 %629
  %631 = local.get %21
  %632 = const i32 21
  %633 = int.rotl %631 %632
  %634 = int.xor %630 %633
  %635 = local.get %21
  %636 = const i32 7
  %637 = int.rotl %635 %636
  %638 = int.xor %634 %637
  %639 = int.add %627 %638
  local.set %20 %639
  %640 = int.add %608 %639
  local.set %11 %640
  memory.guard %memory:0 %587 32
  store.32 %memory:0 %587 %640
  %641 = local.get %17
  %642 = local.get %20
  %643 = local.get %18
  %644 = int.add %642 %643
  local.set %18 %644
  memory.guard %memory:0 %641 32
  store.32 %memory:0 %641 %644
  %645 = local.get %6
  %646 = local.get %11
  %647 = const i32 30
  %648 = int.rotl %646 %647
  %649 = local.get %11
  %650 = const i32 19
  %651 = int.rotl %649 %650
  %652 = int.xor %648 %651
  %653 = local.get %11
  %654 = const i32 10
  %655 = int.rotl %653 %654
  %656 = int.xor %652 %655
  %657 = local.get %11
  %658 = local.get %16
  %659 = local.get %13
  %660 = int.or %658 %659
  %661 = int.and %657 %660
  %662 = local.get %16
  %663 = local.get %13
  %664 = int.and %662 %663
  %665 = int.or %661 %664
  %666 = int.add %656 %665
  %667 = local.get %9
  %668 = local.get (arg)%1
  %669 = const i32 12
  %670 = int.add %668 %669
  local.set %23 %670
  memory.guard %memory:0 %670 32
  %671 = load.32 i32 %memory:0 %670
  %672 = int.add %667 %671
  %673 = local.get %4
  %674 = const i32 65964
  %675 = int.add %673 %674
  memory.guard %memory:0 %675 32
  %676 = load.32 i32 %memory:0 %675
  %677 = int.add %672 %676
  %678 = local.get %18
  %679 = local.get %21
  %680 = local.get %14
  %681 = int.xor %679 %680
  %682 = int.and %678 %681
  %683 = local.get %14
  %684 = int.xor %682 %683
  %685 = int.add %677 %684
  %686 = local.get %18
  %687 = const i32 26
  %688 = int.rotl %686 %687
  %689 = local.get %18
  %690 = const i32 21
  %691 = int.rotl %689 %690
  %692 = int.xor %688 %691
  %693 = local.get %18
  %694 = const i32 7
  %695 = int.rotl %693 %694
  %696 = int.xor %692 %695
  %697 = int.add %685 %696
  local.set %20 %697
  %698 = int.add %666 %697
  local.set %9 %698
  memory.guard %memory:0 %645 32
  store.32 %memory:0 %645 %698
  %699 = local.get (arg)%3
  %700 = local.get %20
  %701 = local.get %15
  %702 = int.add %700 %701
  local.set %15 %702
  memory.guard %memory:0 %699 32
  store.32 %memory:0 %699 %702
  %703 = local.get %8
  %704 = local.get %9
  %705 = const i32 30
  %706 = int.rotl %704 %705
  %707 = local.get %9
  %708 = const i32 19
  %709 = int.rotl %707 %708
  %710 = int.xor %706 %709
  %711 = local.get %9
  %712 = const i32 10
  %713 = int.rotl %711 %712
  %714 = int.xor %710 %713
  %715 = local.get %9
  %716 = local.get %11
  %717 = local.get %16
  %718 = int.or %716 %717
  %719 = int.and %715 %718
  %720 = local.get %11
  %721 = local.get %16
  %722 = int.and %720 %721
  %723 = int.or %719 %722
  %724 = int.add %714 %723
  %725 = local.get (arg)%1
  %726 = const i32 16
  %727 = int.add %725 %726
  local.set %24 %727
  memory.guard %memory:0 %727 32
  %728 = load.32 i32 %memory:0 %727
  %729 = local.get %14
  %730 = int.add %728 %729
  %731 = local.get %4
  %732 = const i32 65968
  %733 = int.add %731 %732
  memory.guard %memory:0 %733 32
  %734 = load.32 i32 %memory:0 %733
  %735 = int.add %730 %734
  %736 = local.get %15
  %737 = local.get %18
  %738 = local.get %21
  %739 = int.xor %737 %738
  %740 = int.and %736 %739
  %741 = local.get %21
  %742 = int.xor %740 %741
  %743 = int.add %735 %742
  %744 = local.get %15
  %745 = const i32 26
  %746 = int.rotl %744 %745
  %747 = local.get %15
  %748 = const i32 21
  %749 = int.rotl %747 %748
  %750 = int.xor %746 %749
  %751 = local.get %15
  %752 = const i32 7
  %753 = int.rotl %751 %752
  %754 = int.xor %750 %753
  %755 = int.add %743 %754
  local.set %20 %755
  %756 = int.add %724 %755
  local.set %14 %756
  memory.guard %memory:0 %703 32
  store.32 %memory:0 %703 %756
  %757 = local.get %12
  %758 = local.get %20
  %759 = local.get %13
  %760 = int.add %758 %759
  local.set %20 %760
  memory.guard %memory:0 %757 32
  store.32 %memory:0 %757 %760
  %761 = local.get %7
  %762 = local.get %14
  %763 = const i32 30
  %764 = int.rotl %762 %763
  %765 = local.get %14
  %766 = const i32 19
  %767 = int.rotl %765 %766
  %768 = int.xor %764 %767
  %769 = local.get %14
  %770 = const i32 10
  %771 = int.rotl %769 %770
  %772 = int.xor %768 %771
  %773 = local.get %14
  %774 = local.get %9
  %775 = local.get %11
  %776 = int.or %774 %775
  %777 = int.and %773 %776
  %778 = local.get %9
  %779 = local.get %11
  %780 = int.and %778 %779
  %781 = int.or %777 %780
  %782 = int.add %772 %781
  %783 = local.get (arg)%1
  %784 = const i32 20
  %785 = int.add %783 %784
  local.set %25 %785
  memory.guard %memory:0 %785 32
  %786 = load.32 i32 %memory:0 %785
  %787 = local.get %21
  %788 = int.add %786 %787
  %789 = local.get %4
  %790 = const i32 65972
  %791 = int.add %789 %790
  memory.guard %memory:0 %791 32
  %792 = load.32 i32 %memory:0 %791
  %793 = int.add %788 %792
  %794 = local.get %20
  %795 = local.get %15
  %796 = local.get %18
  %797 = int.xor %795 %796
  %798 = int.and %794 %797
  %799 = local.get %18
  %800 = int.xor %798 %799
  %801 = int.add %793 %800
  %802 = local.get %20
  %803 = const i32 26
  %804 = int.rotl %802 %803
  %805 = local.get %20
  %806 = const i32 21
  %807 = int.rotl %805 %806
  %808 = int.xor %804 %807
  %809 = local.get %20
  %810 = const i32 7
  %811 = int.rotl %809 %810
  %812 = int.xor %808 %811
  %813 = int.add %801 %812
  local.set %21 %813
  %814 = int.add %782 %813
  local.set %13 %814
  memory.guard %memory:0 %761 32
  store.32 %memory:0 %761 %814
  %815 = local.get %5
  %816 = local.get %21
  %817 = local.get %16
  %818 = int.add %816 %817
  local.set %21 %818
  memory.guard %memory:0 %815 32
  store.32 %memory:0 %815 %818
  %819 = local.get %17
  %820 = local.get %13
  %821 = const i32 30
  %822 = int.rotl %820 %821
  %823 = local.get %13
  %824 = const i32 19
  %825 = int.rotl %823 %824
  %826 = int.xor %822 %825
  %827 = local.get %13
  %828 = const i32 10
  %829 = int.rotl %827 %828
  %830 = int.xor %826 %829
  %831 = local.get %13
  %832 = local.get %14
  %833 = local.get %9
  %834 = int.or %832 %833
  %835 = int.and %831 %834
  %836 = local.get %14
  %837 = local.get %9
  %838 = int.and %836 %837
  %839 = int.or %835 %838
  %840 = int.add %830 %839
  %841 = local.get (arg)%1
  %842 = const i32 24
  %843 = int.add %841 %842
  local.set %26 %843
  memory.guard %memory:0 %843 32
  %844 = load.32 i32 %memory:0 %843
  %845 = local.get %18
  %846 = int.add %844 %845
  %847 = local.get %4
  %848 = const i32 65976
  %849 = int.add %847 %848
  memory.guard %memory:0 %849 32
  %850 = load.32 i32 %memory:0 %849
  %851 = int.add %846 %850
  %852 = local.get %21
  %853 = local.get %20
  %854 = local.get %15
  %855 = int.xor %853 %854
  %856 = int.and %852 %855
  %857 = local.get %15
  %858 = int.xor %856 %857
  %859 = int.add %851 %858
  %860 = local.get %21
  %861 = const i32 26
  %862 = int.rotl %860 %861
  %863 = local.get %21
  %864 = const i32 21
  %865 = int.rotl %863 %864
  %866 = int.xor %862 %865
  %867 = local.get %21
  %868 = const i32 7
  %869 = int.rotl %867 %868
  %870 = int.xor %866 %869
  %871 = int.add %859 %870
  local.set %18 %871
  %872 = int.add %840 %871
  local.set %16 %872
  memory.guard %memory:0 %819 32
  store.32 %memory:0 %819 %872
  %873 = local.get %10
  %874 = local.get %18
  %875 = local.get %11
  %876 = int.add %874 %875
  local.set %18 %876
  memory.guard %memory:0 %873 32
  store.32 %memory:0 %873 %876
  %877 = local.get (arg)%3
  %878 = local.get %16
  %879 = const i32 30
  %880 = int.rotl %878 %879
  %881 = local.get %16
  %882 = const i32 19
  %883 = int.rotl %881 %882
  %884 = int.xor %880 %883
  %885 = local.get %16
  %886 = const i32 10
  %887 = int.rotl %885 %886
  %888 = int.xor %884 %887
  %889 = local.get %16
  %890 = local.get %13
  %891 = local.get %14
  %892 = int.or %890 %891
  %893 = int.and %889 %892
  %894 = local.get %13
  %895 = local.get %14
  %896 = int.and %894 %895
  %897 = int.or %893 %896
  %898 = int.add %888 %897
  %899 = local.get (arg)%1
  %900 = const i32 28
  %901 = int.add %899 %900
  local.set %27 %901
  memory.guard %memory:0 %901 32
  %902 = load.32 i32 %memory:0 %901
  %903 = local.get %15
  %904 = int.add %902 %903
  %905 = local.get %4
  %906 = const i32 65980
  %907 = int.add %905 %906
  memory.guard %memory:0 %907 32
  %908 = load.32 i32 %memory:0 %907
  %909 = int.add %904 %908
  %910 = local.get %18
  %911 = local.get %21
  %912 = local.get %20
  %913 = int.xor %911 %912
  %914 = int.and %910 %913
  %915 = local.get %20
  %916 = int.xor %914 %915
  %917 = int.add %909 %916
  %918 = local.get %18
  %919 = const i32 26
  %920 = int.rotl %918 %919
  %921 = local.get %18
  %922 = const i32 21
  %923 = int.rotl %921 %922
  %924 = int.xor %920 %923
  %925 = local.get %18
  %926 = const i32 7
  %927 = int.rotl %925 %926
  %928 = int.xor %924 %927
  %929 = int.add %917 %928
  local.set %15 %929
  %930 = int.add %898 %929
  local.set %11 %930
  memory.guard %memory:0 %877 32
  store.32 %memory:0 %877 %930
  %931 = local.get %6
  %932 = local.get %15
  %933 = local.get %9
  %934 = int.add %932 %933
  local.set %15 %934
  memory.guard %memory:0 %931 32
  store.32 %memory:0 %931 %934
  %935 = local.get %12
  %936 = local.get %11
  %937 = const i32 30
  %938 = int.rotl %936 %937
  %939 = local.get %11
  %940 = const i32 19
  %941 = int.rotl %939 %940
  %942 = int.xor %938 %941
  %943 = local.get %11
  %944 = const i32 10
  %945 = int.rotl %943 %944
  %946 = int.xor %942 %945
  %947 = local.get %11
  %948 = local.get %16
  %949 = local.get %13
  %950 = int.or %948 %949
  %951 = int.and %947 %950
  %952 = local.get %16
  %953 = local.get %13
  %954 = int.and %952 %953
  %955 = int.or %951 %954
  %956 = int.add %946 %955
  %957 = local.get (arg)%1
  %958 = const i32 32
  %959 = int.add %957 %958
  local.set %28 %959
  memory.guard %memory:0 %959 32
  %960 = load.32 i32 %memory:0 %959
  %961 = local.get %20
  %962 = int.add %960 %961
  %963 = local.get %4
  %964 = const i32 65984
  %965 = int.add %963 %964
  memory.guard %memory:0 %965 32
  %966 = load.32 i32 %memory:0 %965
  %967 = int.add %962 %966
  %968 = local.get %15
  %969 = local.get %18
  %970 = local.get %21
  %971 = int.xor %969 %970
  %972 = int.and %968 %971
  %973 = local.get %21
  %974 = int.xor %972 %973
  %975 = int.add %967 %974
  %976 = local.get %15
  %977 = const i32 26
  %978 = int.rotl %976 %977
  %979 = local.get %15
  %980 = const i32 21
  %981 = int.rotl %979 %980
  %982 = int.xor %978 %981
  %983 = local.get %15
  %984 = const i32 7
  %985 = int.rotl %983 %984
  %986 = int.xor %982 %985
  %987 = int.add %975 %986
  local.set %20 %987
  %988 = int.add %956 %987
  local.set %9 %988
  memory.guard %memory:0 %935 32
  store.32 %memory:0 %935 %988
  %989 = local.get %8
  %990 = local.get %20
  %991 = local.get %14
  %992 = int.add %990 %991
  local.set %20 %992
  memory.guard %memory:0 %989 32
  store.32 %memory:0 %989 %992
  %993 = local.get %5
  %994 = local.get %9
  %995 = const i32 30
  %996 = int.rotl %994 %995
  %997 = local.get %9
  %998 = const i32 19
  %999 = int.rotl %997 %998
  %1000 = int.xor %996 %999
  %1001 = local.get %9
  %1002 = const i32 10
  %1003 = int.rotl %1001 %1002
  %1004 = int.xor %1000 %1003
  %1005 = local.get %9
  %1006 = local.get %11
  %1007 = local.get %16
  %1008 = int.or %1006 %1007
  %1009 = int.and %1005 %1008
  %1010 = local.get %11
  %1011 = local.get %16
  %1012 = int.and %1010 %1011
  %1013 = int.or %1009 %1012
  %1014 = int.add %1004 %1013
  %1015 = local.get %4
  %1016 = const i32 65988
  %1017 = int.add %1015 %1016
  memory.guard %memory:0 %1017 32
  %1018 = load.32 i32 %memory:0 %1017
  %1019 = local.get (arg)%1
  %1020 = const i32 36
  %1021 = int.add %1019 %1020
  local.set %29 %1021
  memory.guard %memory:0 %1021 32
  %1022 = load.32 i32 %memory:0 %1021
  %1023 = int.add %1018 %1022
  %1024 = local.get %21
  %1025 = int.add %1023 %1024
  %1026 = local.get %20
  %1027 = local.get %15
  %1028 = local.get %18
  %1029 = int.xor %1027 %1028
  %1030 = int.and %1026 %1029
  %1031 = local.get %18
  %1032 = int.xor %1030 %1031
  %1033 = int.add %1025 %1032
  %1034 = local.get %20
  %1035 = const i32 26
  %1036 = int.rotl %1034 %1035
  %1037 = local.get %20
  %1038 = const i32 21
  %1039 = int.rotl %1037 %1038
  %1040 = int.xor %1036 %1039
  %1041 = local.get %20
  %1042 = const i32 7
  %1043 = int.rotl %1041 %1042
  %1044 = int.xor %1040 %1043
  %1045 = int.add %1033 %1044
  local.set %21 %1045
  %1046 = int.add %1014 %1045
  local.set %14 %1046
  memory.guard %memory:0 %993 32
  store.32 %memory:0 %993 %1046
  %1047 = local.get %7
  %1048 = local.get %21
  %1049 = local.get %13
  %1050 = int.add %1048 %1049
  local.set %21 %1050
  memory.guard %memory:0 %1047 32
  store.32 %memory:0 %1047 %1050
  %1051 = local.get %10
  %1052 = local.get %14
  %1053 = const i32 30
  %1054 = int.rotl %1052 %1053
  %1055 = local.get %14
  %1056 = const i32 19
  %1057 = int.rotl %1055 %1056
  %1058 = int.xor %1054 %1057
  %1059 = local.get %14
  %1060 = const i32 10
  %1061 = int.rotl %1059 %1060
  %1062 = int.xor %1058 %1061
  %1063 = local.get %14
  %1064 = local.get %9
  %1065 = local.get %11
  %1066 = int.or %1064 %1065
  %1067 = int.and %1063 %1066
  %1068 = local.get %9
  %1069 = local.get %11
  %1070 = int.and %1068 %1069
  %1071 = int.or %1067 %1070
  %1072 = int.add %1062 %1071
  %1073 = local.get %4
  %1074 = const i32 65992
  %1075 = int.add %1073 %1074
  memory.guard %memory:0 %1075 32
  %1076 = load.32 i32 %memory:0 %1075
  %1077 = local.get (arg)%1
  %1078 = const i32 40
  %1079 = int.add %1077 %1078
  local.set %30 %1079
  memory.guard %memory:0 %1079 32
  %1080 = load.32 i32 %memory:0 %1079
  %1081 = int.add %1076 %1080
  %1082 = local.get %18
  %1083 = int.add %1081 %1082
  %1084 = local.get %21
  %1085 = local.get %20
  %1086 = local.get %15
  %1087 = int.xor %1085 %1086
  %1088 = int.and %1084 %1087
  %1089 = local.get %15
  %1090 = int.xor %1088 %1089
  %1091 = int.add %1083 %1090
  %1092 = local.get %21
  %1093 = const i32 26
  %1094 = int.rotl %1092 %1093
  %1095 = local.get %21
  %1096 = const i32 21
  %1097 = int.rotl %1095 %1096
  %1098 = int.xor %1094 %1097
  %1099 = local.get %21
  %1100 = const i32 7
  %1101 = int.rotl %1099 %1100
  %1102 = int.xor %1098 %1101
  %1103 = int.add %1091 %1102
  local.set %18 %1103
  %1104 = int.add %1072 %1103
  local.set %13 %1104
  memory.guard %memory:0 %1051 32
  store.32 %memory:0 %1051 %1104
  %1105 = local.get %17
  %1106 = local.get %18
  %1107 = local.get %16
  %1108 = int.add %1106 %1107
  local.set %18 %1108
  memory.guard %memory:0 %1105 32
  store.32 %memory:0 %1105 %1108
  %1109 = local.get %6
  %1110 = local.get %13
  %1111 = const i32 30
  %1112 = int.rotl %1110 %1111
  %1113 = local.get %13
  %1114 = const i32 19
  %1115 = int.rotl %1113 %1114
  %1116 = int.xor %1112 %1115
  %1117 = local.get %13
  %1118 = const i32 10
  %1119 = int.rotl %1117 %1118
  %1120 = int.xor %1116 %1119
  %1121 = local.get %13
  %1122 = local.get %14
  %1123 = local.get %9
  %1124 = int.or %1122 %1123
  %1125 = int.and %1121 %1124
  %1126 = local.get %14
  %1127 = local.get %9
  %1128 = int.and %1126 %1127
  %1129 = int.or %1125 %1128
  %1130 = int.add %1120 %1129
  %1131 = local.get %4
  %1132 = const i32 65996
  %1133 = int.add %1131 %1132
  memory.guard %memory:0 %1133 32
  %1134 = load.32 i32 %memory:0 %1133
  %1135 = local.get (arg)%1
  %1136 = const i32 44
  %1137 = int.add %1135 %1136
  local.set %31 %1137
  memory.guard %memory:0 %1137 32
  %1138 = load.32 i32 %memory:0 %1137
  %1139 = int.add %1134 %1138
  %1140 = local.get %15
  %1141 = int.add %1139 %1140
  %1142 = local.get %18
  %1143 = local.get %21
  %1144 = local.get %20
  %1145 = int.xor %1143 %1144
  %1146 = int.and %1142 %1145
  %1147 = local.get %20
  %1148 = int.xor %1146 %1147
  %1149 = int.add %1141 %1148
  %1150 = local.get %18
  %1151 = const i32 26
  %1152 = int.rotl %1150 %1151
  %1153 = local.get %18
  %1154 = const i32 21
  %1155 = int.rotl %1153 %1154
  %1156 = int.xor %1152 %1155
  %1157 = local.get %18
  %1158 = const i32 7
  %1159 = int.rotl %1157 %1158
  %1160 = int.xor %1156 %1159
  %1161 = int.add %1149 %1160
  local.set %15 %1161
  %1162 = int.add %1130 %1161
  local.set %16 %1162
  memory.guard %memory:0 %1109 32
  store.32 %memory:0 %1109 %1162
  %1163 = local.get (arg)%3
  %1164 = local.get %15
  %1165 = local.get %11
  %1166 = int.add %1164 %1165
  local.set %11 %1166
  memory.guard %memory:0 %1163 32
  store.32 %memory:0 %1163 %1166
  %1167 = local.get %8
  %1168 = local.get %16
  %1169 = const i32 30
  %1170 = int.rotl %1168 %1169
  %1171 = local.get %16
  %1172 = const i32 19
  %1173 = int.rotl %1171 %1172
  %1174 = int.xor %1170 %1173
  %1175 = local.get %16
  %1176 = const i32 10
  %1177 = int.rotl %1175 %1176
  %1178 = int.xor %1174 %1177
  %1179 = local.get %16
  %1180 = local.get %13
  %1181 = local.get %14
  %1182 = int.or %1180 %1181
  %1183 = int.and %1179 %1182
  %1184 = local.get %13
  %1185 = local.get %14
  %1186 = int.and %1184 %1185
  %1187 = int.or %1183 %1186
  %1188 = int.add %1178 %1187
  %1189 = local.get %4
  %1190 = const i32 66000
  %1191 = int.add %1189 %1190
  memory.guard %memory:0 %1191 32
  %1192 = load.32 i32 %memory:0 %1191
  %1193 = local.get (arg)%1
  %1194 = const i32 48
  %1195 = int.add %1193 %1194
  local.set %32 %1195
  memory.guard %memory:0 %1195 32
  %1196 = load.32 i32 %memory:0 %1195
  %1197 = int.add %1192 %1196
  %1198 = local.get %20
  %1199 = int.add %1197 %1198
  %1200 = local.get %11
  %1201 = local.get %18
  %1202 = local.get %21
  %1203 = int.xor %1201 %1202
  %1204 = int.and %1200 %1203
  %1205 = local.get %21
  %1206 = int.xor %1204 %1205
  %1207 = int.add %1199 %1206
  %1208 = local.get %11
  %1209 = const i32 26
  %1210 = int.rotl %1208 %1209
  %1211 = local.get %11
  %1212 = const i32 21
  %1213 = int.rotl %1211 %1212
  %1214 = int.xor %1210 %1213
  %1215 = local.get %11
  %1216 = const i32 7
  %1217 = int.rotl %1215 %1216
  %1218 = int.xor %1214 %1217
  %1219 = int.add %1207 %1218
  local.set %20 %1219
  %1220 = int.add %1188 %1219
  local.set %15 %1220
  memory.guard %memory:0 %1167 32
  store.32 %memory:0 %1167 %1220
  %1221 = local.get %12
  %1222 = local.get %20
  %1223 = local.get %9
  %1224 = int.add %1222 %1223
  local.set %9 %1224
  memory.guard %memory:0 %1221 32
  store.32 %memory:0 %1221 %1224
  %1225 = local.get %7
  %1226 = local.get %15
  %1227 = const i32 30
  %1228 = int.rotl %1226 %1227
  %1229 = local.get %15
  %1230 = const i32 19
  %1231 = int.rotl %1229 %1230
  %1232 = int.xor %1228 %1231
  %1233 = local.get %15
  %1234 = const i32 10
  %1235 = int.rotl %1233 %1234
  %1236 = int.xor %1232 %1235
  %1237 = local.get %15
  %1238 = local.get %16
  %1239 = local.get %13
  %1240 = int.or %1238 %1239
  %1241 = int.and %1237 %1240
  %1242 = local.get %16
  %1243 = local.get %13
  %1244 = int.and %1242 %1243
  %1245 = int.or %1241 %1244
  %1246 = int.add %1236 %1245
  %1247 = local.get %4
  %1248 = const i32 66004
  %1249 = int.add %1247 %1248
  memory.guard %memory:0 %1249 32
  %1250 = load.32 i32 %memory:0 %1249
  %1251 = local.get (arg)%1
  %1252 = const i32 52
  %1253 = int.add %1251 %1252
  local.set %12 %1253
  memory.guard %memory:0 %1253 32
  %1254 = load.32 i32 %memory:0 %1253
  %1255 = int.add %1250 %1254
  %1256 = local.get %21
  %1257 = int.add %1255 %1256
  %1258 = local.get %9
  %1259 = local.get %11
  %1260 = local.get %18
  %1261 = int.xor %1259 %1260
  %1262 = int.and %1258 %1261
  %1263 = local.get %18
  %1264 = int.xor %1262 %1263
  %1265 = int.add %1257 %1264
  %1266 = local.get %9
  %1267 = const i32 26
  %1268 = int.rotl %1266 %1267
  %1269 = local.get %9
  %1270 = const i32 21
  %1271 = int.rotl %1269 %1270
  %1272 = int.xor %1268 %1271
  %1273 = local.get %9
  %1274 = const i32 7
  %1275 = int.rotl %1273 %1274
  %1276 = int.xor %1272 %1275
  %1277 = int.add %1265 %1276
  local.set %20 %1277
  %1278 = int.add %1246 %1277
  local.set %21 %1278
  memory.guard %memory:0 %1225 32
  store.32 %memory:0 %1225 %1278
  %1279 = local.get %5
  %1280 = local.get %20
  %1281 = local.get %14
  %1282 = int.add %1280 %1281
  local.set %14 %1282
  memory.guard %memory:0 %1279 32
  store.32 %memory:0 %1279 %1282
  %1283 = local.get %17
  %1284 = local.get %21
  %1285 = const i32 30
  %1286 = int.rotl %1284 %1285
  %1287 = local.get %21
  %1288 = const i32 19
  %1289 = int.rotl %1287 %1288
  %1290 = int.xor %1286 %1289
  %1291 = local.get %21
  %1292 = const i32 10
  %1293 = int.rotl %1291 %1292
  %1294 = int.xor %1290 %1293
  %1295 = local.get %21
  %1296 = local.get %15
  %1297 = local.get %16
  %1298 = int.or %1296 %1297
  %1299 = int.and %1295 %1298
  %1300 = local.get %15
  %1301 = local.get %16
  %1302 = int.and %1300 %1301
  %1303 = int.or %1299 %1302
  %1304 = int.add %1294 %1303
  %1305 = local.get %4
  %1306 = const i32 66008
  %1307 = int.add %1305 %1306
  memory.guard %memory:0 %1307 32
  %1308 = load.32 i32 %memory:0 %1307
  %1309 = local.get (arg)%1
  %1310 = const i32 56
  %1311 = int.add %1309 %1310
  local.set %8 %1311
  memory.guard %memory:0 %1311 32
  %1312 = load.32 i32 %memory:0 %1311
  %1313 = int.add %1308 %1312
  %1314 = local.get %18
  %1315 = int.add %1313 %1314
  %1316 = local.get %14
  %1317 = local.get %9
  %1318 = local.get %11
  %1319 = int.xor %1317 %1318
  %1320 = int.and %1316 %1319
  %1321 = local.get %11
  %1322 = int.xor %1320 %1321
  %1323 = int.add %1315 %1322
  %1324 = local.get %14
  %1325 = const i32 26
  %1326 = int.rotl %1324 %1325
  %1327 = local.get %14
  %1328 = const i32 21
  %1329 = int.rotl %1327 %1328
  %1330 = int.xor %1326 %1329
  %1331 = local.get %14
  %1332 = const i32 7
  %1333 = int.rotl %1331 %1332
  %1334 = int.xor %1330 %1333
  %1335 = int.add %1323 %1334
  local.set %20 %1335
  %1336 = int.add %1304 %1335
  local.set %18 %1336
  memory.guard %memory:0 %1283 32
  store.32 %memory:0 %1283 %1336
  %1337 = local.get %10
  %1338 = local.get %20
  %1339 = local.get %13
  %1340 = int.add %1338 %1339
  local.set %13 %1340
  memory.guard %memory:0 %1337 32
  store.32 %memory:0 %1337 %1340
  %1341 = local.get (arg)%3
  %1342 = local.get %18
  %1343 = const i32 30
  %1344 = int.rotl %1342 %1343
  %1345 = local.get %18
  %1346 = const i32 19
  %1347 = int.rotl %1345 %1346
  %1348 = int.xor %1344 %1347
  %1349 = local.get %18
  %1350 = const i32 10
  %1351 = int.rotl %1349 %1350
  %1352 = int.xor %1348 %1351
  %1353 = local.get %18
  %1354 = local.get %21
  %1355 = local.get %15
  %1356 = int.or %1354 %1355
  %1357 = int.and %1353 %1356
  %1358 = local.get %21
  %1359 = local.get %15
  %1360 = int.and %1358 %1359
  %1361 = int.or %1357 %1360
  %1362 = int.add %1352 %1361
  %1363 = local.get %4
  %1364 = const i32 66012
  %1365 = int.add %1363 %1364
  memory.guard %memory:0 %1365 32
  %1366 = load.32 i32 %memory:0 %1365
  %1367 = local.get (arg)%1
  %1368 = const i32 60
  %1369 = int.add %1367 %1368
  local.set %15 %1369
  memory.guard %memory:0 %1369 32
  %1370 = load.32 i32 %memory:0 %1369
  %1371 = int.add %1366 %1370
  %1372 = local.get %11
  %1373 = int.add %1371 %1372
  %1374 = local.get %13
  %1375 = local.get %14
  %1376 = local.get %9
  %1377 = int.xor %1375 %1376
  %1378 = int.and %1374 %1377
  %1379 = local.get %9
  %1380 = int.xor %1378 %1379
  %1381 = int.add %1373 %1380
  %1382 = local.get %13
  %1383 = const i32 26
  %1384 = int.rotl %1382 %1383
  %1385 = local.get %13
  %1386 = const i32 21
  %1387 = int.rotl %1385 %1386
  %1388 = int.xor %1384 %1387
  %1389 = local.get %13
  %1390 = const i32 7
  %1391 = int.rotl %1389 %1390
  %1392 = int.xor %1388 %1391
  %1393 = int.add %1381 %1392
  local.set %13 %1393
  %1394 = int.add %1362 %1393
  local.set %11 %1394
  memory.guard %memory:0 %1341 32
  store.32 %memory:0 %1341 %1394
  %1395 = local.get %6
  %1396 = local.get %13
  %1397 = local.get %16
  %1398 = int.add %1396 %1397
  memory.guard %memory:0 %1395 32
  store.32 %memory:0 %1395 %1398
  %1399 = local.get %4
  %1400 = const i32 192
  %1401 = int.eq %1399 %1400
  br.cond %1401 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  %1402 = local.get (arg)%1
  %1403 = const i32 64
  %1404 = int.add %1402 %1403
  local.set %17 %1404
  %1405 = local.get (arg)%1
  memory.guard %memory:0 %1405 32
  %1406 = load.32 i32 %memory:0 %1405
  %1407 = local.get %29
  memory.guard %memory:0 %1407 32
  %1408 = load.32 i32 %memory:0 %1407
  local.set %16 %1408
  %1409 = int.add %1406 %1408
  %1410 = local.get %8
  memory.guard %memory:0 %1410 32
  %1411 = load.32 i32 %memory:0 %1410
  local.set %10 %1411
  %1412 = const i32 13
  %1413 = int.rotl %1411 %1412
  %1414 = local.get %10
  %1415 = const i32 10
  %1416 = int.shr.u %1414 %1415
  %1417 = int.xor %1413 %1416
  %1418 = local.get %10
  %1419 = const i32 15
  %1420 = int.rotl %1418 %1419
  %1421 = int.xor %1417 %1420
  %1422 = int.add %1409 %1421
  %1423 = local.get %19
  memory.guard %memory:0 %1423 32
  %1424 = load.32 i32 %memory:0 %1423
  local.set %13 %1424
  %1425 = const i32 14
  %1426 = int.rotl %1424 %1425
  %1427 = local.get %13
  %1428 = const i32 3
  %1429 = int.shr.u %1427 %1428
  %1430 = int.xor %1426 %1429
  %1431 = local.get %13
  %1432 = const i32 25
  %1433 = int.rotl %1431 %1432
  %1434 = int.xor %1430 %1433
  %1435 = int.add %1422 %1434
  local.set %9 %1435
  memory.guard %memory:0 %1404 32
  store.32 %memory:0 %1404 %1435
  %1436 = local.get (arg)%1
  %1437 = const i32 68
  %1438 = int.add %1436 %1437
  local.set %19 %1438
  %1439 = local.get %13
  %1440 = local.get %30
  memory.guard %memory:0 %1440 32
  %1441 = load.32 i32 %memory:0 %1440
  %1442 = int.add %1439 %1441
  %1443 = local.get %15
  memory.guard %memory:0 %1443 32
  %1444 = load.32 i32 %memory:0 %1443
  local.set %13 %1444
  %1445 = const i32 13
  %1446 = int.rotl %1444 %1445
  %1447 = local.get %13
  %1448 = const i32 10
  %1449 = int.shr.u %1447 %1448
  %1450 = int.xor %1446 %1449
  %1451 = local.get %13
  %1452 = const i32 15
  %1453 = int.rotl %1451 %1452
  %1454 = int.xor %1450 %1453
  %1455 = int.add %1442 %1454
  %1456 = local.get %22
  memory.guard %memory:0 %1456 32
  %1457 = load.32 i32 %memory:0 %1456
  local.set %14 %1457
  %1458 = const i32 14
  %1459 = int.rotl %1457 %1458
  %1460 = local.get %14
  %1461 = const i32 3
  %1462 = int.shr.u %1460 %1461
  %1463 = int.xor %1459 %1462
  %1464 = local.get %14
  %1465 = const i32 25
  %1466 = int.rotl %1464 %1465
  %1467 = int.xor %1463 %1466
  %1468 = int.add %1455 %1467
  local.set %15 %1468
  memory.guard %memory:0 %1438 32
  store.32 %memory:0 %1438 %1468
  %1469 = local.get (arg)%1
  %1470 = const i32 72
  %1471 = int.add %1469 %1470
  local.set %22 %1471
  %1472 = local.get %14
  %1473 = local.get %31
  memory.guard %memory:0 %1473 32
  %1474 = load.32 i32 %memory:0 %1473
  local.set %11 %1474
  %1475 = int.add %1472 %1474
  %1476 = local.get %9
  %1477 = const i32 13
  %1478 = int.rotl %1476 %1477
  %1479 = local.get %9
  %1480 = const i32 10
  %1481 = int.shr.u %1479 %1480
  %1482 = int.xor %1478 %1481
  %1483 = local.get %9
  %1484 = const i32 15
  %1485 = int.rotl %1483 %1484
  %1486 = int.xor %1482 %1485
  %1487 = int.add %1475 %1486
  %1488 = local.get %23
  memory.guard %memory:0 %1488 32
  %1489 = load.32 i32 %memory:0 %1488
  local.set %9 %1489
  %1490 = const i32 14
  %1491 = int.rotl %1489 %1490
  %1492 = local.get %9
  %1493 = const i32 3
  %1494 = int.shr.u %1492 %1493
  %1495 = int.xor %1491 %1494
  %1496 = local.get %9
  %1497 = const i32 25
  %1498 = int.rotl %1496 %1497
  %1499 = int.xor %1495 %1498
  %1500 = int.add %1487 %1499
  local.set %14 %1500
  memory.guard %memory:0 %1471 32
  store.32 %memory:0 %1471 %1500
  %1501 = local.get (arg)%1
  %1502 = const i32 76
  %1503 = int.add %1501 %1502
  local.set %23 %1503
  %1504 = local.get %9
  %1505 = local.get %32
  memory.guard %memory:0 %1505 32
  %1506 = load.32 i32 %memory:0 %1505
  %1507 = int.add %1504 %1506
  %1508 = local.get %15
  %1509 = const i32 13
  %1510 = int.rotl %1508 %1509
  %1511 = local.get %15
  %1512 = const i32 10
  %1513 = int.shr.u %1511 %1512
  %1514 = int.xor %1510 %1513
  %1515 = local.get %15
  %1516 = const i32 15
  %1517 = int.rotl %1515 %1516
  %1518 = int.xor %1514 %1517
  %1519 = int.add %1507 %1518
  %1520 = local.get %24
  memory.guard %memory:0 %1520 32
  %1521 = load.32 i32 %memory:0 %1520
  local.set %15 %1521
  %1522 = const i32 14
  %1523 = int.rotl %1521 %1522
  %1524 = local.get %15
  %1525 = const i32 3
  %1526 = int.shr.u %1524 %1525
  %1527 = int.xor %1523 %1526
  %1528 = local.get %15
  %1529 = const i32 25
  %1530 = int.rotl %1528 %1529
  %1531 = int.xor %1527 %1530
  %1532 = int.add %1519 %1531
  local.set %21 %1532
  memory.guard %memory:0 %1503 32
  store.32 %memory:0 %1503 %1532
  %1533 = local.get (arg)%1
  %1534 = const i32 80
  %1535 = int.add %1533 %1534
  %1536 = local.get %15
  %1537 = local.get %12
  memory.guard %memory:0 %1537 32
  %1538 = load.32 i32 %memory:0 %1537
  local.set %9 %1538
  %1539 = int.add %1536 %1538
  %1540 = local.get %14
  %1541 = const i32 13
  %1542 = int.rotl %1540 %1541
  %1543 = local.get %14
  %1544 = const i32 10
  %1545 = int.shr.u %1543 %1544
  %1546 = int.xor %1542 %1545
  %1547 = local.get %14
  %1548 = const i32 15
  %1549 = int.rotl %1547 %1548
  %1550 = int.xor %1546 %1549
  %1551 = int.add %1539 %1550
  %1552 = local.get %25
  memory.guard %memory:0 %1552 32
  %1553 = load.32 i32 %memory:0 %1552
  local.set %15 %1553
  %1554 = const i32 14
  %1555 = int.rotl %1553 %1554
  %1556 = local.get %15
  %1557 = const i32 3
  %1558 = int.shr.u %1556 %1557
  %1559 = int.xor %1555 %1558
  %1560 = local.get %15
  %1561 = const i32 25
  %1562 = int.rotl %1560 %1561
  %1563 = int.xor %1559 %1562
  %1564 = int.add %1551 %1563
  local.set %14 %1564
  memory.guard %memory:0 %1535 32
  store.32 %memory:0 %1535 %1564
  %1565 = local.get (arg)%1
  %1566 = const i32 84
  %1567 = int.add %1565 %1566
  %1568 = local.get %15
  %1569 = local.get %8
  memory.guard %memory:0 %1569 32
  %1570 = load.32 i32 %memory:0 %1569
  %1571 = int.add %1568 %1570
  %1572 = local.get %21
  %1573 = const i32 13
  %1574 = int.rotl %1572 %1573
  %1575 = local.get %21
  %1576 = const i32 10
  %1577 = int.shr.u %1575 %1576
  %1578 = int.xor %1574 %1577
  %1579 = local.get %21
  %1580 = const i32 15
  %1581 = int.rotl %1579 %1580
  %1582 = int.xor %1578 %1581
  %1583 = int.add %1571 %1582
  %1584 = local.get %26
  memory.guard %memory:0 %1584 32
  %1585 = load.32 i32 %memory:0 %1584
  local.set %21 %1585
  %1586 = const i32 14
  %1587 = int.rotl %1585 %1586
  %1588 = local.get %21
  %1589 = const i32 3
  %1590 = int.shr.u %1588 %1589
  %1591 = int.xor %1587 %1590
  %1592 = local.get %21
  %1593 = const i32 25
  %1594 = int.rotl %1592 %1593
  %1595 = int.xor %1591 %1594
  %1596 = int.add %1583 %1595
  local.set %15 %1596
  memory.guard %memory:0 %1567 32
  store.32 %memory:0 %1567 %1596
  %1597 = local.get (arg)%1
  %1598 = const i32 88
  %1599 = int.add %1597 %1598
  %1600 = local.get %21
  %1601 = local.get %13
  %1602 = int.add %1600 %1601
  %1603 = local.get %14
  %1604 = const i32 13
  %1605 = int.rotl %1603 %1604
  %1606 = local.get %14
  %1607 = const i32 10
  %1608 = int.shr.u %1606 %1607
  %1609 = int.xor %1605 %1608
  %1610 = local.get %14
  %1611 = const i32 15
  %1612 = int.rotl %1610 %1611
  %1613 = int.xor %1609 %1612
  %1614 = int.add %1602 %1613
  %1615 = local.get %27
  memory.guard %memory:0 %1615 32
  %1616 = load.32 i32 %memory:0 %1615
  local.set %18 %1616
  %1617 = const i32 14
  %1618 = int.rotl %1616 %1617
  %1619 = local.get %18
  %1620 = const i32 3
  %1621 = int.shr.u %1619 %1620
  %1622 = int.xor %1618 %1621
  %1623 = local.get %18
  %1624 = const i32 25
  %1625 = int.rotl %1623 %1624
  %1626 = int.xor %1622 %1625
  %1627 = int.add %1614 %1626
  local.set %21 %1627
  memory.guard %memory:0 %1599 32
  store.32 %memory:0 %1599 %1627
  %1628 = local.get (arg)%1
  %1629 = const i32 92
  %1630 = int.add %1628 %1629
  %1631 = local.get %18
  %1632 = local.get %17
  memory.guard %memory:0 %1632 32
  %1633 = load.32 i32 %memory:0 %1632
  %1634 = int.add %1631 %1633
  %1635 = local.get %15
  %1636 = const i32 13
  %1637 = int.rotl %1635 %1636
  %1638 = local.get %15
  %1639 = const i32 10
  %1640 = int.shr.u %1638 %1639
  %1641 = int.xor %1637 %1640
  %1642 = local.get %15
  %1643 = const i32 15
  %1644 = int.rotl %1642 %1643
  %1645 = int.xor %1641 %1644
  %1646 = int.add %1634 %1645
  %1647 = local.get %28
  memory.guard %memory:0 %1647 32
  %1648 = load.32 i32 %memory:0 %1647
  local.set %20 %1648
  %1649 = const i32 14
  %1650 = int.rotl %1648 %1649
  %1651 = local.get %20
  %1652 = const i32 3
  %1653 = int.shr.u %1651 %1652
  %1654 = int.xor %1650 %1653
  %1655 = local.get %20
  %1656 = const i32 25
  %1657 = int.rotl %1655 %1656
  %1658 = int.xor %1654 %1657
  %1659 = int.add %1646 %1658
  local.set %18 %1659
  memory.guard %memory:0 %1630 32
  store.32 %memory:0 %1630 %1659
  %1660 = local.get (arg)%1
  %1661 = const i32 96
  %1662 = int.add %1660 %1661
  %1663 = local.get %20
  %1664 = local.get %19
  memory.guard %memory:0 %1664 32
  %1665 = load.32 i32 %memory:0 %1664
  %1666 = local.get %16
  %1667 = const i32 14
  %1668 = int.rotl %1666 %1667
  %1669 = local.get %16
  %1670 = const i32 3
  %1671 = int.shr.u %1669 %1670
  %1672 = int.xor %1668 %1671
  %1673 = local.get %16
  %1674 = const i32 25
  %1675 = int.rotl %1673 %1674
  %1676 = int.xor %1672 %1675
  %1677 = int.add %1665 %1676
  %1678 = int.add %1663 %1677
  %1679 = local.get %21
  %1680 = const i32 13
  %1681 = int.rotl %1679 %1680
  %1682 = local.get %21
  %1683 = const i32 10
  %1684 = int.shr.u %1682 %1683
  %1685 = int.xor %1681 %1684
  %1686 = local.get %21
  %1687 = const i32 15
  %1688 = int.rotl %1686 %1687
  %1689 = int.xor %1685 %1688
  %1690 = int.add %1678 %1689
  local.set %20 %1690
  memory.guard %memory:0 %1662 32
  store.32 %memory:0 %1662 %1690
  %1691 = local.get (arg)%1
  %1692 = const i32 100
  %1693 = int.add %1691 %1692
  %1694 = local.get %16
  %1695 = local.get %22
  memory.guard %memory:0 %1695 32
  %1696 = load.32 i32 %memory:0 %1695
  %1697 = int.add %1694 %1696
  %1698 = local.get %18
  %1699 = const i32 13
  %1700 = int.rotl %1698 %1699
  %1701 = local.get %18
  %1702 = const i32 10
  %1703 = int.shr.u %1701 %1702
  %1704 = int.xor %1700 %1703
  %1705 = local.get %18
  %1706 = const i32 15
  %1707 = int.rotl %1705 %1706
  %1708 = int.xor %1704 %1707
  %1709 = int.add %1697 %1708
  %1710 = local.get %30
  memory.guard %memory:0 %1710 32
  %1711 = load.32 i32 %memory:0 %1710
  local.set %16 %1711
  %1712 = const i32 14
  %1713 = int.rotl %1711 %1712
  %1714 = local.get %16
  %1715 = const i32 3
  %1716 = int.shr.u %1714 %1715
  %1717 = int.xor %1713 %1716
  %1718 = local.get %16
  %1719 = const i32 25
  %1720 = int.rotl %1718 %1719
  %1721 = int.xor %1717 %1720
  %1722 = int.add %1709 %1721
  local.set %12 %1722
  memory.guard %memory:0 %1693 32
  store.32 %memory:0 %1693 %1722
  %1723 = local.get (arg)%1
  %1724 = const i32 104
  %1725 = int.add %1723 %1724
  %1726 = local.get %16
  %1727 = local.get %23
  memory.guard %memory:0 %1727 32
  %1728 = load.32 i32 %memory:0 %1727
  %1729 = local.get %11
  %1730 = const i32 14
  %1731 = int.rotl %1729 %1730
  %1732 = local.get %11
  %1733 = const i32 3
  %1734 = int.shr.u %1732 %1733
  %1735 = int.xor %1731 %1734
  %1736 = local.get %11
  %1737 = const i32 25
  %1738 = int.rotl %1736 %1737
  %1739 = int.xor %1735 %1738
  %1740 = int.add %1728 %1739
  %1741 = int.add %1726 %1740
  %1742 = local.get %20
  %1743 = const i32 13
  %1744 = int.rotl %1742 %1743
  %1745 = local.get %20
  %1746 = const i32 10
  %1747 = int.shr.u %1745 %1746
  %1748 = int.xor %1744 %1747
  %1749 = local.get %20
  %1750 = const i32 15
  %1751 = int.rotl %1749 %1750
  %1752 = int.xor %1748 %1751
  %1753 = int.add %1741 %1752
  local.set %16 %1753
  memory.guard %memory:0 %1725 32
  store.32 %memory:0 %1725 %1753
  %1754 = local.get (arg)%1
  %1755 = const i32 108
  %1756 = int.add %1754 %1755
  %1757 = local.get %14
  %1758 = local.get %11
  %1759 = int.add %1757 %1758
  %1760 = local.get %12
  %1761 = const i32 13
  %1762 = int.rotl %1760 %1761
  %1763 = local.get %12
  %1764 = const i32 10
  %1765 = int.shr.u %1763 %1764
  %1766 = int.xor %1762 %1765
  %1767 = local.get %12
  %1768 = const i32 15
  %1769 = int.rotl %1767 %1768
  %1770 = int.xor %1766 %1769
  %1771 = int.add %1759 %1770
  %1772 = local.get %32
  memory.guard %memory:0 %1772 32
  %1773 = load.32 i32 %memory:0 %1772
  local.set %11 %1773
  %1774 = const i32 14
  %1775 = int.rotl %1773 %1774
  %1776 = local.get %11
  %1777 = const i32 3
  %1778 = int.shr.u %1776 %1777
  %1779 = int.xor %1775 %1778
  %1780 = local.get %11
  %1781 = const i32 25
  %1782 = int.rotl %1780 %1781
  %1783 = int.xor %1779 %1782
  %1784 = int.add %1771 %1783
  local.set %14 %1784
  memory.guard %memory:0 %1756 32
  store.32 %memory:0 %1756 %1784
  %1785 = local.get (arg)%1
  %1786 = const i32 112
  %1787 = int.add %1785 %1786
  %1788 = local.get %11
  %1789 = local.get %15
  %1790 = local.get %9
  %1791 = const i32 14
  %1792 = int.rotl %1790 %1791
  %1793 = local.get %9
  %1794 = const i32 3
  %1795 = int.shr.u %1793 %1794
  %1796 = int.xor %1792 %1795
  %1797 = local.get %9
  %1798 = const i32 25
  %1799 = int.rotl %1797 %1798
  %1800 = int.xor %1796 %1799
  %1801 = int.add %1789 %1800
  %1802 = int.add %1788 %1801
  %1803 = local.get %16
  %1804 = const i32 13
  %1805 = int.rotl %1803 %1804
  %1806 = local.get %16
  %1807 = const i32 10
  %1808 = int.shr.u %1806 %1807
  %1809 = int.xor %1805 %1808
  %1810 = local.get %16
  %1811 = const i32 15
  %1812 = int.rotl %1810 %1811
  %1813 = int.xor %1809 %1812
  %1814 = int.add %1802 %1813
  local.set %16 %1814
  memory.guard %memory:0 %1787 32
  store.32 %memory:0 %1787 %1814
  %1815 = local.get %8
  memory.guard %memory:0 %1815 32
  %1816 = load.32 i32 %memory:0 %1815
  local.set %11 %1816
  %1817 = local.get (arg)%1
  %1818 = const i32 120
  %1819 = int.add %1817 %1818
  %1820 = local.get %10
  %1821 = local.get %13
  %1822 = const i32 14
  %1823 = int.rotl %1821 %1822
  %1824 = local.get %13
  %1825 = const i32 3
  %1826 = int.shr.u %1824 %1825
  %1827 = int.xor %1823 %1826
  %1828 = local.get %13
  %1829 = const i32 25
  %1830 = int.rotl %1828 %1829
  %1831 = int.xor %1827 %1830
  %1832 = int.add %1820 %1831
  %1833 = local.get %18
  %1834 = int.add %1832 %1833
  %1835 = local.get %16
  %1836 = const i32 13
  %1837 = int.rotl %1835 %1836
  %1838 = local.get %16
  %1839 = const i32 10
  %1840 = int.shr.u %1838 %1839
  %1841 = int.xor %1837 %1840
  %1842 = local.get %16
  %1843 = const i32 15
  %1844 = int.rotl %1842 %1843
  %1845 = int.xor %1841 %1844
  %1846 = int.add %1834 %1845
  memory.guard %memory:0 %1819 32
  store.32 %memory:0 %1819 %1846
  %1847 = local.get (arg)%1
  %1848 = const i32 116
  %1849 = int.add %1847 %1848
  %1850 = local.get %21
  %1851 = local.get %9
  %1852 = int.add %1850 %1851
  %1853 = local.get %14
  %1854 = const i32 13
  %1855 = int.rotl %1853 %1854
  %1856 = local.get %14
  %1857 = const i32 10
  %1858 = int.shr.u %1856 %1857
  %1859 = int.xor %1855 %1858
  %1860 = local.get %14
  %1861 = const i32 15
  %1862 = int.rotl %1860 %1861
  %1863 = int.xor %1859 %1862
  %1864 = int.add %1852 %1863
  %1865 = local.get %11
  %1866 = const i32 14
  %1867 = int.rotl %1865 %1866
  %1868 = local.get %11
  %1869 = const i32 3
  %1870 = int.shr.u %1868 %1869
  %1871 = int.xor %1867 %1870
  %1872 = local.get %11
  %1873 = const i32 25
  %1874 = int.rotl %1872 %1873
  %1875 = int.xor %1871 %1874
  %1876 = int.add %1864 %1875
  local.set %16 %1876
  memory.guard %memory:0 %1849 32
  store.32 %memory:0 %1849 %1876
  %1877 = local.get (arg)%1
  %1878 = const i32 124
  %1879 = int.add %1877 %1878
  %1880 = local.get %20
  %1881 = local.get %13
  %1882 = int.add %1880 %1881
  %1883 = local.get %16
  %1884 = const i32 13
  %1885 = int.rotl %1883 %1884
  %1886 = local.get %16
  %1887 = const i32 10
  %1888 = int.shr.u %1886 %1887
  %1889 = int.xor %1885 %1888
  %1890 = local.get %16
  %1891 = const i32 15
  %1892 = int.rotl %1890 %1891
  %1893 = int.xor %1889 %1892
  %1894 = int.add %1882 %1893
  %1895 = local.get %17
  memory.guard %memory:0 %1895 32
  %1896 = load.32 i32 %memory:0 %1895
  local.set (arg)%1 %1896
  %1897 = const i32 14
  %1898 = int.rotl %1896 %1897
  %1899 = local.get (arg)%1
  %1900 = const i32 3
  %1901 = int.shr.u %1899 %1900
  %1902 = int.xor %1898 %1901
  %1903 = local.get (arg)%1
  %1904 = const i32 25
  %1905 = int.rotl %1903 %1904
  %1906 = int.xor %1902 %1905
  %1907 = int.add %1894 %1906
  memory.guard %memory:0 %1879 32
  store.32 %memory:0 %1879 %1907
  %1908 = local.get %4
  %1909 = const i32 64
  %1910 = int.add %1908 %1909
  local.set %4 %1910
  br %BB:0

#pred = {%BB:0}
%BB:2:
  %1911 = local.get (arg)%0
  %1912 = local.get (arg)%0
  memory.guard %memory:0 %1912 32
  %1913 = load.32 i32 %memory:0 %1912
  %1914 = local.get %11
  %1915 = int.add %1913 %1914
  memory.guard %memory:0 %1911 32
  store.32 %memory:0 %1911 %1915
  %1916 = local.get (arg)%0
  %1917 = const i32 4
  %1918 = int.add %1916 %1917
  local.set (arg)%1 %1918
  %1919 = local.get (arg)%1
  memory.guard %memory:0 %1919 32
  %1920 = load.32 i32 %memory:0 %1919
  %1921 = local.get (arg)%3
  %1922 = const i32 4
  %1923 = int.add %1921 %1922
  memory.guard %memory:0 %1923 32
  %1924 = load.32 i32 %memory:0 %1923
  %1925 = int.add %1920 %1924
  memory.guard %memory:0 %1918 32
  store.32 %memory:0 %1918 %1925
  %1926 = local.get (arg)%0
  %1927 = const i32 8
  %1928 = int.add %1926 %1927
  local.set (arg)%1 %1928
  %1929 = local.get (arg)%1
  memory.guard %memory:0 %1929 32
  %1930 = load.32 i32 %memory:0 %1929
  %1931 = local.get (arg)%3
  %1932 = const i32 8
  %1933 = int.add %1931 %1932
  memory.guard %memory:0 %1933 32
  %1934 = load.32 i32 %memory:0 %1933
  %1935 = int.add %1930 %1934
  memory.guard %memory:0 %1928 32
  store.32 %memory:0 %1928 %1935
  %1936 = local.get (arg)%0
  %1937 = const i32 12
  %1938 = int.add %1936 %1937
  local.set (arg)%1 %1938
  %1939 = local.get (arg)%1
  memory.guard %memory:0 %1939 32
  %1940 = load.32 i32 %memory:0 %1939
  %1941 = local.get (arg)%3
  %1942 = const i32 12
  %1943 = int.add %1941 %1942
  memory.guard %memory:0 %1943 32
  %1944 = load.32 i32 %memory:0 %1943
  %1945 = int.add %1940 %1944
  memory.guard %memory:0 %1938 32
  store.32 %memory:0 %1938 %1945
  %1946 = local.get (arg)%0
  %1947 = const i32 16
  %1948 = int.add %1946 %1947
  local.set (arg)%1 %1948
  %1949 = local.get (arg)%1
  memory.guard %memory:0 %1949 32
  %1950 = load.32 i32 %memory:0 %1949
  %1951 = local.get (arg)%3
  %1952 = const i32 16
  %1953 = int.add %1951 %1952
  memory.guard %memory:0 %1953 32
  %1954 = load.32 i32 %memory:0 %1953
  %1955 = int.add %1950 %1954
  memory.guard %memory:0 %1948 32
  store.32 %memory:0 %1948 %1955
  %1956 = local.get (arg)%0
  %1957 = const i32 20
  %1958 = int.add %1956 %1957
  local.set (arg)%1 %1958
  %1959 = local.get (arg)%1
  memory.guard %memory:0 %1959 32
  %1960 = load.32 i32 %memory:0 %1959
  %1961 = local.get (arg)%3
  %1962 = const i32 20
  %1963 = int.add %1961 %1962
  memory.guard %memory:0 %1963 32
  %1964 = load.32 i32 %memory:0 %1963
  %1965 = int.add %1960 %1964
  memory.guard %memory:0 %1958 32
  store.32 %memory:0 %1958 %1965
  %1966 = local.get (arg)%0
  %1967 = const i32 24
  %1968 = int.add %1966 %1967
  local.set (arg)%1 %1968
  %1969 = local.get (arg)%1
  memory.guard %memory:0 %1969 32
  %1970 = load.32 i32 %memory:0 %1969
  %1971 = local.get (arg)%3
  %1972 = const i32 24
  %1973 = int.add %1971 %1972
  memory.guard %memory:0 %1973 32
  %1974 = load.32 i32 %memory:0 %1973
  %1975 = int.add %1970 %1974
  memory.guard %memory:0 %1968 32
  store.32 %memory:0 %1968 %1975
  %1976 = local.get (arg)%0
  %1977 = const i32 28
  %1978 = int.add %1976 %1977
  local.set (arg)%1 %1978
  %1979 = local.get (arg)%1
  memory.guard %memory:0 %1979 32
  %1980 = load.32 i32 %memory:0 %1979
  %1981 = local.get (arg)%3
  %1982 = const i32 28
  %1983 = int.add %1981 %1982
  memory.guard %memory:0 %1983 32
  %1984 = load.32 i32 %memory:0 %1983
  %1985 = int.add %1980 %1984
  memory.guard %memory:0 %1978 32
  store.32 %memory:0 %1978 %1985
  ret

}

function %function:22 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, %2:i32, %3:i64, %4:i32, %5:i32}
#pred = {}
%entry:
  %6 = global.get %global:0
  %7 = const i32 288
  %8 = int.sub %6 %7
  local.set %2 %8
  global.set %global:0%8
  %9 = local.get (arg)%0
  %10 = const i32 32
  %11 = int.add %9 %10
  memory.guard %memory:0 %11 64
  %12 = load.64 i64 %memory:0 %11
  local.set %3 %12
  %13 = cast i32 %12
  %14 = const i32 3
  %15 = int.shr.u %13 %14
  %16 = const i32 63
  %17 = int.and %15 %16
  local.set %4 %17
  %18 = const i32 55
  %19 = int.gt.u %17 %18
  br.cond %19 %BB:2 %BB:0

#pred = {%entry}
%BB:0:
  %20 = const i32 56
  %21 = local.get %4
  %22 = int.sub %20 %21
  local.set %5 %22
  %23 = int.eqz %22
  br.cond %23 %BB:3 %BB:1

#pred = {%BB:0}
%BB:1:
  %24 = local.get (arg)%0
  %25 = local.get %4
  %26 = int.add %24 %25
  %27 = const i32 40
  %28 = int.add %26 %27
  %29 = const i32 66208
  %30 = local.get %5
  %31 = call %function:95(%28, %29, %30)
  br %BB:3

#pred = {%entry}
%BB:2:
  %32 = local.get (arg)%0
  %33 = const i32 40
  %34 = int.add %32 %33
  local.set %5 %34
  %35 = local.get %4
  %36 = int.add %34 %35
  %37 = const i32 66208
  %38 = const i32 64
  %39 = local.get %4
  %40 = int.sub %38 %39
  %41 = call %function:95(%36, %37, %40)
  %42 = local.get (arg)%0
  %43 = local.get %5
  %44 = local.get %2
  %45 = local.get %2
  %46 = const i32 256
  %47 = int.add %45 %46
  call %function:21(%42, %43, %44, %47)
  %48 = local.get (arg)%0
  %49 = const i32 88
  %50 = int.add %48 %49
  %51 = const i64 0
  memory.guard %memory:0 %50 64
  store.64 %memory:0 %50 %51
  %52 = local.get (arg)%0
  %53 = const i32 80
  %54 = int.add %52 %53
  %55 = const i64 0
  memory.guard %memory:0 %54 64
  store.64 %memory:0 %54 %55
  %56 = local.get (arg)%0
  %57 = const i32 72
  %58 = int.add %56 %57
  %59 = const i64 0
  memory.guard %memory:0 %58 64
  store.64 %memory:0 %58 %59
  %60 = local.get (arg)%0
  %61 = const i32 64
  %62 = int.add %60 %61
  %63 = const i64 0
  memory.guard %memory:0 %62 64
  store.64 %memory:0 %62 %63
  %64 = local.get (arg)%0
  %65 = const i32 56
  %66 = int.add %64 %65
  %67 = const i64 0
  memory.guard %memory:0 %66 64
  store.64 %memory:0 %66 %67
  %68 = local.get (arg)%0
  %69 = const i32 48
  %70 = int.add %68 %69
  %71 = const i64 0
  memory.guard %memory:0 %70 64
  store.64 %memory:0 %70 %71
  %72 = local.get %5
  %73 = const i64 0
  memory.guard %memory:0 %72 64
  store.64 %memory:0 %72 %73
  %74 = local.get (arg)%0
  %75 = const i32 32
  %76 = int.add %74 %75
  memory.guard %memory:0 %76 64
  %77 = load.64 i64 %memory:0 %76
  local.set %3 %77
  br %BB:3

#pred = {%BB:2, %BB:1, %BB:0}
%BB:3:
  %78 = local.get (arg)%0
  %79 = const i32 96
  %80 = int.add %78 %79
  %81 = local.get %3
  %82 = const i64 56
  %83 = int.shl %81 %82
  %84 = local.get %3
  %85 = const i64 40
  %86 = int.shl %84 %85
  %87 = const i64 71776119061217280
  %88 = int.and %86 %87
  %89 = int.or %83 %88
  %90 = local.get %3
  %91 = const i64 24
  %92 = int.shl %90 %91
  %93 = const i64 280375465082880
  %94 = int.and %92 %93
  %95 = local.get %3
  %96 = const i64 8
  %97 = int.shl %95 %96
  %98 = const i64 1095216660480
  %99 = int.and %97 %98
  %100 = int.or %94 %99
  %101 = int.or %89 %100
  %102 = local.get %3
  %103 = const i64 8
  %104 = int.shr.u %102 %103
  %105 = const i64 4278190080
  %106 = int.and %104 %105
  %107 = local.get %3
  %108 = const i64 24
  %109 = int.shr.u %107 %108
  %110 = const i64 16711680
  %111 = int.and %109 %110
  %112 = int.or %106 %111
  %113 = local.get %3
  %114 = const i64 40
  %115 = int.shr.u %113 %114
  %116 = const i64 65280
  %117 = int.and %115 %116
  %118 = local.get %3
  %119 = const i64 56
  %120 = int.shr.u %118 %119
  %121 = int.or %117 %120
  %122 = int.or %112 %121
  %123 = int.or %101 %122
  memory.guard %memory:0 %80 64
  store.64 %memory:0 %80 %123
  %124 = local.get (arg)%0
  %125 = local.get (arg)%0
  %126 = const i32 40
  %127 = int.add %125 %126
  %128 = local.get %2
  %129 = local.get %2
  %130 = const i32 256
  %131 = int.add %129 %130
  call %function:21(%124, %127, %128, %131)
  %132 = local.get (arg)%1
  %133 = local.get (arg)%0
  memory.guard %memory:0 %133 32
  %134 = load.32 i32 %memory:0 %133
  local.set %4 %134
  %135 = const i32 24
  %136 = int.shl %134 %135
  %137 = local.get %4
  %138 = const i32 8
  %139 = int.shl %137 %138
  %140 = const i32 16711680
  %141 = int.and %139 %140
  %142 = int.or %136 %141
  %143 = local.get %4
  %144 = const i32 8
  %145 = int.shr.u %143 %144
  %146 = const i32 65280
  %147 = int.and %145 %146
  %148 = local.get %4
  %149 = const i32 24
  %150 = int.shr.u %148 %149
  %151 = int.or %147 %150
  %152 = int.or %142 %151
  memory.guard %memory:0 %132 32
  store.32 %memory:0 %132 %152
  %153 = local.get (arg)%1
  %154 = const i32 4
  %155 = int.add %153 %154
  %156 = local.get (arg)%0
  %157 = const i32 4
  %158 = int.add %156 %157
  memory.guard %memory:0 %158 32
  %159 = load.32 i32 %memory:0 %158
  local.set %4 %159
  %160 = const i32 24
  %161 = int.shl %159 %160
  %162 = local.get %4
  %163 = const i32 8
  %164 = int.shl %162 %163
  %165 = const i32 16711680
  %166 = int.and %164 %165
  %167 = int.or %161 %166
  %168 = local.get %4
  %169 = const i32 8
  %170 = int.shr.u %168 %169
  %171 = const i32 65280
  %172 = int.and %170 %171
  %173 = local.get %4
  %174 = const i32 24
  %175 = int.shr.u %173 %174
  %176 = int.or %172 %175
  %177 = int.or %167 %176
  memory.guard %memory:0 %155 32
  store.32 %memory:0 %155 %177
  %178 = local.get (arg)%1
  %179 = const i32 8
  %180 = int.add %178 %179
  %181 = local.get (arg)%0
  %182 = const i32 8
  %183 = int.add %181 %182
  memory.guard %memory:0 %183 32
  %184 = load.32 i32 %memory:0 %183
  local.set %4 %184
  %185 = const i32 24
  %186 = int.shl %184 %185
  %187 = local.get %4
  %188 = const i32 8
  %189 = int.shl %187 %188
  %190 = const i32 16711680
  %191 = int.and %189 %190
  %192 = int.or %186 %191
  %193 = local.get %4
  %194 = const i32 8
  %195 = int.shr.u %193 %194
  %196 = const i32 65280
  %197 = int.and %195 %196
  %198 = local.get %4
  %199 = const i32 24
  %200 = int.shr.u %198 %199
  %201 = int.or %197 %200
  %202 = int.or %192 %201
  memory.guard %memory:0 %180 32
  store.32 %memory:0 %180 %202
  %203 = local.get (arg)%1
  %204 = const i32 12
  %205 = int.add %203 %204
  %206 = local.get (arg)%0
  %207 = const i32 12
  %208 = int.add %206 %207
  memory.guard %memory:0 %208 32
  %209 = load.32 i32 %memory:0 %208
  local.set %4 %209
  %210 = const i32 24
  %211 = int.shl %209 %210
  %212 = local.get %4
  %213 = const i32 8
  %214 = int.shl %212 %213
  %215 = const i32 16711680
  %216 = int.and %214 %215
  %217 = int.or %211 %216
  %218 = local.get %4
  %219 = const i32 8
  %220 = int.shr.u %218 %219
  %221 = const i32 65280
  %222 = int.and %220 %221
  %223 = local.get %4
  %224 = const i32 24
  %225 = int.shr.u %223 %224
  %226 = int.or %222 %225
  %227 = int.or %217 %226
  memory.guard %memory:0 %205 32
  store.32 %memory:0 %205 %227
  %228 = local.get (arg)%1
  %229 = const i32 16
  %230 = int.add %228 %229
  %231 = local.get (arg)%0
  %232 = const i32 16
  %233 = int.add %231 %232
  memory.guard %memory:0 %233 32
  %234 = load.32 i32 %memory:0 %233
  local.set %4 %234
  %235 = const i32 24
  %236 = int.shl %234 %235
  %237 = local.get %4
  %238 = const i32 8
  %239 = int.shl %237 %238
  %240 = const i32 16711680
  %241 = int.and %239 %240
  %242 = int.or %236 %241
  %243 = local.get %4
  %244 = const i32 8
  %245 = int.shr.u %243 %244
  %246 = const i32 65280
  %247 = int.and %245 %246
  %248 = local.get %4
  %249 = const i32 24
  %250 = int.shr.u %248 %249
  %251 = int.or %247 %250
  %252 = int.or %242 %251
  memory.guard %memory:0 %230 32
  store.32 %memory:0 %230 %252
  %253 = local.get (arg)%1
  %254 = const i32 20
  %255 = int.add %253 %254
  %256 = local.get (arg)%0
  %257 = const i32 20
  %258 = int.add %256 %257
  memory.guard %memory:0 %258 32
  %259 = load.32 i32 %memory:0 %258
  local.set %4 %259
  %260 = const i32 24
  %261 = int.shl %259 %260
  %262 = local.get %4
  %263 = const i32 8
  %264 = int.shl %262 %263
  %265 = const i32 16711680
  %266 = int.and %264 %265
  %267 = int.or %261 %266
  %268 = local.get %4
  %269 = const i32 8
  %270 = int.shr.u %268 %269
  %271 = const i32 65280
  %272 = int.and %270 %271
  %273 = local.get %4
  %274 = const i32 24
  %275 = int.shr.u %273 %274
  %276 = int.or %272 %275
  %277 = int.or %267 %276
  memory.guard %memory:0 %255 32
  store.32 %memory:0 %255 %277
  %278 = local.get (arg)%1
  %279 = const i32 24
  %280 = int.add %278 %279
  %281 = local.get (arg)%0
  %282 = const i32 24
  %283 = int.add %281 %282
  memory.guard %memory:0 %283 32
  %284 = load.32 i32 %memory:0 %283
  local.set %4 %284
  %285 = const i32 24
  %286 = int.shl %284 %285
  %287 = local.get %4
  %288 = const i32 8
  %289 = int.shl %287 %288
  %290 = const i32 16711680
  %291 = int.and %289 %290
  %292 = int.or %286 %291
  %293 = local.get %4
  %294 = const i32 8
  %295 = int.shr.u %293 %294
  %296 = const i32 65280
  %297 = int.and %295 %296
  %298 = local.get %4
  %299 = const i32 24
  %300 = int.shr.u %298 %299
  %301 = int.or %297 %300
  %302 = int.or %292 %301
  memory.guard %memory:0 %280 32
  store.32 %memory:0 %280 %302
  %303 = local.get (arg)%1
  %304 = const i32 28
  %305 = int.add %303 %304
  %306 = local.get (arg)%0
  %307 = const i32 28
  %308 = int.add %306 %307
  memory.guard %memory:0 %308 32
  %309 = load.32 i32 %memory:0 %308
  local.set (arg)%1 %309
  %310 = const i32 24
  %311 = int.shl %309 %310
  %312 = local.get (arg)%1
  %313 = const i32 8
  %314 = int.shl %312 %313
  %315 = const i32 16711680
  %316 = int.and %314 %315
  %317 = int.or %311 %316
  %318 = local.get (arg)%1
  %319 = const i32 8
  %320 = int.shr.u %318 %319
  %321 = const i32 65280
  %322 = int.and %320 %321
  %323 = local.get (arg)%1
  %324 = const i32 24
  %325 = int.shr.u %323 %324
  %326 = int.or %322 %325
  %327 = int.or %317 %326
  memory.guard %memory:0 %305 32
  store.32 %memory:0 %305 %327
  %328 = local.get %2
  %329 = const i32 288
  call %function:46(%328, %329)
  %330 = local.get (arg)%0
  %331 = const i32 104
  call %function:46(%330, %331)
  %332 = local.get %2
  %333 = const i32 288
  %334 = int.add %332 %333
  global.set %global:0%334
  %335 = const i32 0
  ret %335

}

function %function:23 : [i32, i32, i64] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i64, %3:i32}
#pred = {}
%entry:
  %4 = global.get %global:0
  %5 = const i32 112
  %6 = int.sub %4 %5
  local.set %3 %6
  global.set %global:0%6
  %7 = local.get %3
  %8 = const i32 16
  %9 = int.add %7 %8
  %10 = const i32 0
  %11 = const i32 65928
  %12 = int.add %10 %11
  memory.guard %memory:0 %12 64
  %13 = load.64 i64 %memory:0 %12
  memory.guard %memory:0 %9 64
  store.64 %memory:0 %9 %13
  %14 = local.get %3
  %15 = const i32 24
  %16 = int.add %14 %15
  %17 = const i32 0
  %18 = const i32 65936
  %19 = int.add %17 %18
  memory.guard %memory:0 %19 64
  %20 = load.64 i64 %memory:0 %19
  memory.guard %memory:0 %16 64
  store.64 %memory:0 %16 %20
  %21 = local.get %3
  %22 = const i32 32
  %23 = int.add %21 %22
  %24 = const i32 0
  %25 = const i32 65944
  %26 = int.add %24 %25
  memory.guard %memory:0 %26 64
  %27 = load.64 i64 %memory:0 %26
  memory.guard %memory:0 %23 64
  store.64 %memory:0 %23 %27
  %28 = local.get %3
  %29 = const i64 0
  %30 = const i32 40
  %31 = int.add %28 %30
  memory.guard %memory:0 %31 64
  store.64 %memory:0 %31 %29
  %32 = local.get %3
  %33 = const i32 0
  %34 = const i32 65920
  %35 = int.add %33 %34
  memory.guard %memory:0 %35 64
  %36 = load.64 i64 %memory:0 %35
  %37 = const i32 8
  %38 = int.add %32 %37
  memory.guard %memory:0 %38 64
  store.64 %memory:0 %38 %36
  %39 = local.get %3
  %40 = const i32 8
  %41 = int.add %39 %40
  %42 = local.get (arg)%1
  %43 = local.get (arg)%2
  %44 = call %function:20(%41, %42, %43)
  %45 = local.get %3
  %46 = const i32 8
  %47 = int.add %45 %46
  %48 = local.get (arg)%0
  %49 = call %function:22(%47, %48)
  %50 = local.get %3
  %51 = const i32 112
  %52 = int.add %50 %51
  global.set %global:0%52
  %53 = const i32 0
  ret %53

}

function %function:24 : [i32, i64, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i32, (arg)%3:i32, %4:i32}
#pred = {}
%entry:
  %5 = global.get %global:0
  %6 = const i32 64
  %7 = int.sub %5 %6
  local.set %4 %7
  global.set %global:0%7
  %8 = local.get (arg)%1
  %9 = int.eqz %8
  br.cond %9 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %10 = local.get %4
  %11 = const i64 7719281312240119090
  %12 = const i32 8
  %13 = int.add %10 %12
  memory.guard %memory:0 %13 64
  store.64 %memory:0 %13 %11
  %14 = local.get %4
  %15 = const i64 3684054920433006693
  memory.guard %memory:0 %14 64
  store.64 %memory:0 %14 %15
  %16 = local.get %4
  %17 = const i64 0
  %18 = const i32 48
  %19 = int.add %16 %18
  memory.guard %memory:0 %19 64
  store.64 %memory:0 %19 %17
  %20 = local.get %4
  %21 = local.get (arg)%3
  memory.guard %memory:0 %21 32
  %22 = load.32 i32 %memory:0 %21
  %23 = const i32 16
  %24 = int.add %20 %23
  memory.guard %memory:0 %24 32
  store.32 %memory:0 %24 %22
  %25 = local.get %4
  %26 = local.get (arg)%2
  memory.guard %memory:0 %26 64
  %27 = load.64 i64 %memory:0 %26
  %28 = const i32 56
  %29 = int.add %25 %28
  memory.guard %memory:0 %29 64
  store.64 %memory:0 %29 %27
  %30 = local.get %4
  %31 = local.get (arg)%3
  %32 = const i32 4
  %33 = int.add %31 %32
  memory.guard %memory:0 %33 64
  %34 = load.64 i64 %memory:0 %33
  %35 = const i32 20
  %36 = int.add %30 %35
  memory.guard %memory:0 %36 64
  store.64 %memory:0 %36 %34
  %37 = local.get %4
  %38 = local.get (arg)%3
  %39 = const i32 12
  %40 = int.add %38 %39
  memory.guard %memory:0 %40 64
  %41 = load.64 i64 %memory:0 %40
  %42 = const i32 28
  %43 = int.add %37 %42
  memory.guard %memory:0 %43 64
  store.64 %memory:0 %43 %41
  %44 = local.get %4
  %45 = local.get (arg)%3
  %46 = const i32 20
  %47 = int.add %45 %46
  memory.guard %memory:0 %47 64
  %48 = load.64 i64 %memory:0 %47
  %49 = const i32 36
  %50 = int.add %44 %49
  memory.guard %memory:0 %50 64
  store.64 %memory:0 %50 %48
  %51 = local.get %4
  %52 = local.get (arg)%3
  %53 = const i32 28
  %54 = int.add %52 %53
  memory.guard %memory:0 %54 32
  %55 = load.32 i32 %memory:0 %54
  %56 = const i32 44
  %57 = int.add %51 %56
  memory.guard %memory:0 %57 32
  store.32 %memory:0 %57 %55
  %58 = local.get %4
  %59 = local.get (arg)%0
  %60 = const i32 0
  %61 = local.get (arg)%1
  %62 = cast i32 %61
  %63 = call %function:97(%59, %60, %62)
  local.set (arg)%3 %63
  %64 = local.get (arg)%3
  %65 = local.get (arg)%1
  call %function:25(%58, %63, %64, %65)
  %66 = local.get %4
  %67 = const i32 64
  call %function:46(%66, %67)
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  %68 = local.get %4
  %69 = const i32 64
  %70 = int.add %68 %69
  global.set %global:0%70
  %71 = const i32 0
  ret %71

}

function %function:25 : [i32, i32, i32, i64] -> [] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i64, %4:i32, %5:i32, %6:i32, %7:i32, %8:i32, %9:i32, %10:i32, %11:i32, %12:i32, %13:i32, %14:i32, %15:i32, %16:i32, %17:i32, %18:i32, %19:i32, %20:i32, %21:i32, %22:i32, %23:i32, %24:i32, %25:i32, %26:i32, %27:i32, %28:i32, %29:i32, %30:i32, %31:i32, %32:i32, %33:i32, %34:i32, %35:i32, %36:i32, %37:i32, %38:i32, %39:i32, %40:i32, %41:i32, %42:i32, %43:i32, %44:i32, %45:i32, %46:i32, %47:i32, %48:i32, %49:i32, %50:i32, %51:i32, %52:i32, %53:i32}
#pred = {}
%entry:
  %54 = global.get %global:0
  %55 = const i32 64
  %56 = int.sub %54 %55
  local.set %4 %56
  %57 = local.get (arg)%3
  %58 = cast i32 %57
  %59 = const i32 -1
  %60 = int.add %58 %59
  local.set %5 %60
  %61 = local.get (arg)%0
  %62 = const i32 60
  %63 = int.add %61 %62
  memory.guard %memory:0 %63 32
  %64 = load.32 i32 %memory:0 %63
  local.set %6 %64
  %65 = local.get (arg)%0
  %66 = const i32 56
  %67 = int.add %65 %66
  memory.guard %memory:0 %67 32
  %68 = load.32 i32 %memory:0 %67
  local.set %7 %68
  %69 = local.get (arg)%0
  %70 = const i32 52
  %71 = int.add %69 %70
  memory.guard %memory:0 %71 32
  %72 = load.32 i32 %memory:0 %71
  local.set %8 %72
  %73 = local.get (arg)%0
  %74 = const i32 48
  %75 = int.add %73 %74
  memory.guard %memory:0 %75 32
  %76 = load.32 i32 %memory:0 %75
  local.set %9 %76
  %77 = local.get (arg)%0
  %78 = const i32 44
  %79 = int.add %77 %78
  memory.guard %memory:0 %79 32
  %80 = load.32 i32 %memory:0 %79
  local.set %10 %80
  %81 = local.get (arg)%0
  %82 = const i32 40
  %83 = int.add %81 %82
  memory.guard %memory:0 %83 32
  %84 = load.32 i32 %memory:0 %83
  local.set %11 %84
  %85 = local.get (arg)%0
  %86 = const i32 36
  %87 = int.add %85 %86
  memory.guard %memory:0 %87 32
  %88 = load.32 i32 %memory:0 %87
  local.set %12 %88
  %89 = local.get (arg)%0
  %90 = const i32 32
  %91 = int.add %89 %90
  memory.guard %memory:0 %91 32
  %92 = load.32 i32 %memory:0 %91
  local.set %13 %92
  %93 = local.get (arg)%0
  %94 = const i32 28
  %95 = int.add %93 %94
  memory.guard %memory:0 %95 32
  %96 = load.32 i32 %memory:0 %95
  local.set %14 %96
  %97 = local.get (arg)%0
  %98 = const i32 24
  %99 = int.add %97 %98
  memory.guard %memory:0 %99 32
  %100 = load.32 i32 %memory:0 %99
  local.set %15 %100
  %101 = local.get (arg)%0
  %102 = const i32 20
  %103 = int.add %101 %102
  memory.guard %memory:0 %103 32
  %104 = load.32 i32 %memory:0 %103
  local.set %16 %104
  %105 = local.get (arg)%0
  %106 = const i32 16
  %107 = int.add %105 %106
  memory.guard %memory:0 %107 32
  %108 = load.32 i32 %memory:0 %107
  local.set %17 %108
  %109 = local.get (arg)%0
  %110 = const i32 12
  %111 = int.add %109 %110
  memory.guard %memory:0 %111 32
  %112 = load.32 i32 %memory:0 %111
  local.set %18 %112
  %113 = local.get (arg)%0
  %114 = const i32 8
  %115 = int.add %113 %114
  memory.guard %memory:0 %115 32
  %116 = load.32 i32 %memory:0 %115
  local.set %19 %116
  %117 = local.get (arg)%0
  %118 = const i32 4
  %119 = int.add %117 %118
  memory.guard %memory:0 %119 32
  %120 = load.32 i32 %memory:0 %119
  local.set %20 %120
  %121 = local.get (arg)%0
  memory.guard %memory:0 %121 32
  %122 = load.32 i32 %memory:0 %121
  local.set %21 %122
  %123 = const i32 0
  local.set %22 %123
  br %BB:0

#pred = {%BB:17, %entry}
%BB:0:
  %124 = local.get (arg)%3
  %125 = const i64 63
  %126 = int.le.u %124 %125
  br.cond %126 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  %127 = local.get (arg)%2
  local.set %23 %127
  br %BB:7

#pred = {%BB:0}
%BB:2:
  %128 = local.get %4
  %129 = const i32 56
  %130 = int.add %128 %129
  %131 = const i64 0
  memory.guard %memory:0 %130 64
  store.64 %memory:0 %130 %131
  %132 = local.get %4
  %133 = const i32 48
  %134 = int.add %132 %133
  %135 = const i64 0
  memory.guard %memory:0 %134 64
  store.64 %memory:0 %134 %135
  %136 = local.get %4
  %137 = const i32 40
  %138 = int.add %136 %137
  %139 = const i64 0
  memory.guard %memory:0 %138 64
  store.64 %memory:0 %138 %139
  %140 = local.get %4
  %141 = const i32 32
  %142 = int.add %140 %141
  %143 = const i64 0
  memory.guard %memory:0 %142 64
  store.64 %memory:0 %142 %143
  %144 = local.get %4
  %145 = const i32 24
  %146 = int.add %144 %145
  %147 = const i64 0
  memory.guard %memory:0 %146 64
  store.64 %memory:0 %146 %147
  %148 = local.get %4
  %149 = const i32 16
  %150 = int.add %148 %149
  %151 = const i64 0
  memory.guard %memory:0 %150 64
  store.64 %memory:0 %150 %151
  %152 = local.get %4
  %153 = const i64 0
  %154 = const i32 8
  %155 = int.add %152 %154
  memory.guard %memory:0 %155 64
  store.64 %memory:0 %155 %153
  %156 = local.get %4
  %157 = const i64 0
  memory.guard %memory:0 %156 64
  store.64 %memory:0 %156 %157
  %158 = local.get %4
  local.set %23 %158
  %159 = local.get (arg)%3
  %160 = int.eqz %159
  br.cond %160 %BB:6 %BB:3

#pred = {%BB:2}
%BB:3:
  %161 = const i32 0
  local.set %24 %161
  br %BB:4

#pred = {%BB:4, %BB:3}
%BB:4:
  %162 = local.get %4
  %163 = local.get %24
  %164 = int.add %162 %163
  %165 = local.get (arg)%1
  %166 = local.get %24
  %167 = int.add %165 %166
  memory.guard %memory:0 %167 8
  %168 = load.8 i32 %memory:0 %167
  memory.guard %memory:0 %164 8
  store.8 %memory:0 %164 %168
  %169 = local.get (arg)%3
  %170 = local.get %24
  %171 = const i32 1
  %172 = int.add %170 %171
  local.set %24 %172
  %173 = cast.u i64 %172
  %174 = int.gt.u %169 %173
  br.cond %174 %BB:4 %BB:5

#pred = {%BB:4}
%BB:5:
  br %BB:6

#pred = {%BB:5, %BB:2}
%BB:6:
  %175 = local.get %23
  local.set (arg)%1 %175
  %176 = local.get (arg)%2
  local.set %22 %176
  br %BB:7

#pred = {%BB:6, %BB:1}
%BB:7:
  %177 = const i32 -20
  local.set %25 %177
  %178 = local.get %21
  local.set %26 %178
  %179 = local.get %20
  local.set %27 %179
  %180 = local.get %19
  local.set %28 %180
  %181 = local.get %18
  local.set %29 %181
  %182 = local.get %17
  local.set %24 %182
  %183 = local.get %16
  local.set (arg)%2 %183
  %184 = local.get %15
  local.set %30 %184
  %185 = local.get %14
  local.set %31 %185
  %186 = local.get %13
  local.set %32 %186
  %187 = local.get %12
  local.set %33 %187
  %188 = local.get %11
  local.set %34 %188
  %189 = local.get %6
  local.set %35 %189
  %190 = local.get %7
  local.set %36 %190
  %191 = local.get %8
  local.set %37 %191
  %192 = local.get %9
  local.set %38 %192
  %193 = local.get %10
  local.set %39 %193
  br %BB:8

#pred = {%BB:8, %BB:7}
%BB:8:
  %194 = local.get %26
  %195 = local.get %24
  %196 = int.add %194 %195
  local.set %26 %196
  %197 = local.get %38
  %198 = int.xor %196 %197
  %199 = const i32 16
  %200 = int.rotl %198 %199
  local.set %38 %200
  %201 = local.get %32
  %202 = int.add %200 %201
  local.set %32 %202
  %203 = local.get %24
  %204 = int.xor %202 %203
  %205 = const i32 12
  %206 = int.rotl %204 %205
  local.set %24 %206
  %207 = local.get %26
  %208 = int.add %206 %207
  local.set %26 %208
  %209 = local.get %38
  %210 = int.xor %208 %209
  %211 = const i32 8
  %212 = int.rotl %210 %211
  local.set %38 %212
  %213 = local.get %32
  %214 = int.add %212 %213
  local.set %32 %214
  %215 = local.get %24
  %216 = int.xor %214 %215
  %217 = const i32 7
  %218 = int.rotl %216 %217
  local.set %24 %218
  %219 = local.get %29
  %220 = local.get %31
  %221 = int.add %219 %220
  local.set %29 %221
  %222 = local.get %35
  %223 = int.xor %221 %222
  %224 = const i32 16
  %225 = int.rotl %223 %224
  local.set %35 %225
  %226 = local.get %39
  %227 = int.add %225 %226
  local.set %39 %227
  %228 = local.get %31
  %229 = int.xor %227 %228
  %230 = const i32 12
  %231 = int.rotl %229 %230
  local.set %31 %231
  %232 = local.get %29
  %233 = int.add %231 %232
  local.set %40 %233
  %234 = int.add %218 %233
  local.set %29 %234
  %235 = local.get %28
  %236 = local.get %30
  %237 = int.add %235 %236
  local.set %28 %237
  %238 = local.get %36
  %239 = int.xor %237 %238
  %240 = const i32 16
  %241 = int.rotl %239 %240
  local.set %36 %241
  %242 = local.get %34
  %243 = int.add %241 %242
  local.set %34 %243
  %244 = local.get %30
  %245 = int.xor %243 %244
  %246 = const i32 12
  %247 = int.rotl %245 %246
  local.set %30 %247
  %248 = local.get %28
  %249 = int.add %247 %248
  local.set %28 %249
  %250 = local.get %36
  %251 = int.xor %249 %250
  %252 = const i32 8
  %253 = int.rotl %251 %252
  local.set %41 %253
  %254 = int.xor %234 %253
  %255 = const i32 16
  %256 = int.rotl %254 %255
  local.set %36 %256
  %257 = local.get %27
  %258 = local.get (arg)%2
  %259 = int.add %257 %258
  local.set %27 %259
  %260 = local.get %37
  %261 = int.xor %259 %260
  %262 = const i32 16
  %263 = int.rotl %261 %262
  local.set %37 %263
  %264 = local.get %33
  %265 = int.add %263 %264
  local.set %33 %265
  %266 = local.get (arg)%2
  %267 = int.xor %265 %266
  %268 = const i32 12
  %269 = int.rotl %267 %268
  local.set (arg)%2 %269
  %270 = local.get %27
  %271 = int.add %269 %270
  local.set %27 %271
  %272 = local.get %37
  %273 = int.xor %271 %272
  %274 = const i32 8
  %275 = int.rotl %273 %274
  local.set %37 %275
  %276 = local.get %33
  %277 = int.add %275 %276
  local.set %42 %277
  %278 = int.add %256 %277
  local.set %33 %278
  %279 = local.get %24
  %280 = int.xor %278 %279
  %281 = const i32 12
  %282 = int.rotl %280 %281
  local.set %24 %282
  %283 = local.get %29
  %284 = int.add %282 %283
  local.set %29 %284
  %285 = local.get %36
  %286 = int.xor %284 %285
  %287 = const i32 8
  %288 = int.rotl %286 %287
  local.set %36 %288
  %289 = local.get %33
  %290 = int.add %288 %289
  local.set %33 %290
  %291 = local.get %24
  %292 = int.xor %290 %291
  %293 = const i32 7
  %294 = int.rotl %292 %293
  local.set %24 %294
  %295 = local.get %40
  %296 = local.get %35
  %297 = int.xor %295 %296
  %298 = const i32 8
  %299 = int.rotl %297 %298
  local.set %35 %299
  %300 = local.get %39
  %301 = int.add %299 %300
  local.set %39 %301
  %302 = local.get %31
  %303 = int.xor %301 %302
  %304 = const i32 7
  %305 = int.rotl %303 %304
  local.set %31 %305
  %306 = local.get %28
  %307 = int.add %305 %306
  local.set %28 %307
  %308 = local.get %37
  %309 = int.xor %307 %308
  %310 = const i32 16
  %311 = int.rotl %309 %310
  local.set %37 %311
  %312 = local.get %32
  %313 = int.add %311 %312
  local.set %32 %313
  %314 = local.get %31
  %315 = int.xor %313 %314
  %316 = const i32 12
  %317 = int.rotl %315 %316
  local.set %31 %317
  %318 = local.get %28
  %319 = int.add %317 %318
  local.set %28 %319
  %320 = local.get %37
  %321 = int.xor %319 %320
  %322 = const i32 8
  %323 = int.rotl %321 %322
  local.set %37 %323
  %324 = local.get %32
  %325 = int.add %323 %324
  local.set %32 %325
  %326 = local.get %31
  %327 = int.xor %325 %326
  %328 = const i32 7
  %329 = int.rotl %327 %328
  local.set %31 %329
  %330 = local.get %41
  %331 = local.get %34
  %332 = int.add %330 %331
  local.set %34 %332
  %333 = local.get %30
  %334 = int.xor %332 %333
  %335 = const i32 7
  %336 = int.rotl %334 %335
  local.set %30 %336
  %337 = local.get %27
  %338 = int.add %336 %337
  local.set %27 %338
  %339 = local.get %38
  %340 = int.xor %338 %339
  %341 = const i32 16
  %342 = int.rotl %340 %341
  local.set %38 %342
  %343 = local.get %39
  %344 = int.add %342 %343
  local.set %39 %344
  %345 = local.get %30
  %346 = int.xor %344 %345
  %347 = const i32 12
  %348 = int.rotl %346 %347
  local.set %30 %348
  %349 = local.get %27
  %350 = int.add %348 %349
  local.set %27 %350
  %351 = local.get %38
  %352 = int.xor %350 %351
  %353 = const i32 8
  %354 = int.rotl %352 %353
  local.set %38 %354
  %355 = local.get %39
  %356 = int.add %354 %355
  local.set %39 %356
  %357 = local.get %30
  %358 = int.xor %356 %357
  %359 = const i32 7
  %360 = int.rotl %358 %359
  local.set %30 %360
  %361 = local.get %42
  %362 = local.get (arg)%2
  %363 = int.xor %361 %362
  %364 = const i32 7
  %365 = int.rotl %363 %364
  local.set (arg)%2 %365
  %366 = local.get %26
  %367 = int.add %365 %366
  local.set %26 %367
  %368 = local.get %35
  %369 = int.xor %367 %368
  %370 = const i32 16
  %371 = int.rotl %369 %370
  local.set %35 %371
  %372 = local.get %34
  %373 = int.add %371 %372
  local.set %34 %373
  %374 = local.get (arg)%2
  %375 = int.xor %373 %374
  %376 = const i32 12
  %377 = int.rotl %375 %376
  local.set (arg)%2 %377
  %378 = local.get %26
  %379 = int.add %377 %378
  local.set %26 %379
  %380 = local.get %35
  %381 = int.xor %379 %380
  %382 = const i32 8
  %383 = int.rotl %381 %382
  local.set %35 %383
  %384 = local.get %34
  %385 = int.add %383 %384
  local.set %34 %385
  %386 = local.get (arg)%2
  %387 = int.xor %385 %386
  %388 = const i32 7
  %389 = int.rotl %387 %388
  local.set (arg)%2 %389
  %390 = local.get %25
  %391 = const i32 2
  %392 = int.add %390 %391
  local.set %25 %392
  br.cond %392 %BB:8 %BB:9

#pred = {%BB:8}
%BB:9:
  %393 = local.get (arg)%1
  %394 = const i32 4
  %395 = int.add %393 %394
  memory.guard %memory:0 %395 32
  %396 = load.32 i32 %memory:0 %395
  local.set %25 %396
  %397 = local.get (arg)%1
  %398 = const i32 8
  %399 = int.add %397 %398
  memory.guard %memory:0 %399 32
  %400 = load.32 i32 %memory:0 %399
  local.set %40 %400
  %401 = local.get (arg)%1
  %402 = const i32 12
  %403 = int.add %401 %402
  memory.guard %memory:0 %403 32
  %404 = load.32 i32 %memory:0 %403
  local.set %41 %404
  %405 = local.get (arg)%1
  %406 = const i32 16
  %407 = int.add %405 %406
  memory.guard %memory:0 %407 32
  %408 = load.32 i32 %memory:0 %407
  local.set %42 %408
  %409 = local.get (arg)%1
  %410 = const i32 20
  %411 = int.add %409 %410
  memory.guard %memory:0 %411 32
  %412 = load.32 i32 %memory:0 %411
  local.set %43 %412
  %413 = local.get (arg)%1
  %414 = const i32 24
  %415 = int.add %413 %414
  memory.guard %memory:0 %415 32
  %416 = load.32 i32 %memory:0 %415
  local.set %44 %416
  %417 = local.get (arg)%1
  %418 = const i32 28
  %419 = int.add %417 %418
  memory.guard %memory:0 %419 32
  %420 = load.32 i32 %memory:0 %419
  local.set %45 %420
  %421 = local.get (arg)%1
  %422 = const i32 32
  %423 = int.add %421 %422
  memory.guard %memory:0 %423 32
  %424 = load.32 i32 %memory:0 %423
  local.set %46 %424
  %425 = local.get (arg)%1
  %426 = const i32 36
  %427 = int.add %425 %426
  memory.guard %memory:0 %427 32
  %428 = load.32 i32 %memory:0 %427
  local.set %47 %428
  %429 = local.get (arg)%1
  %430 = const i32 40
  %431 = int.add %429 %430
  memory.guard %memory:0 %431 32
  %432 = load.32 i32 %memory:0 %431
  local.set %48 %432
  %433 = local.get (arg)%1
  %434 = const i32 44
  %435 = int.add %433 %434
  memory.guard %memory:0 %435 32
  %436 = load.32 i32 %memory:0 %435
  local.set %49 %436
  %437 = local.get (arg)%1
  %438 = const i32 48
  %439 = int.add %437 %438
  memory.guard %memory:0 %439 32
  %440 = load.32 i32 %memory:0 %439
  local.set %50 %440
  %441 = local.get (arg)%1
  %442 = const i32 52
  %443 = int.add %441 %442
  memory.guard %memory:0 %443 32
  %444 = load.32 i32 %memory:0 %443
  local.set %51 %444
  %445 = local.get (arg)%1
  %446 = const i32 56
  %447 = int.add %445 %446
  memory.guard %memory:0 %447 32
  %448 = load.32 i32 %memory:0 %447
  local.set %52 %448
  %449 = local.get (arg)%1
  %450 = const i32 60
  %451 = int.add %449 %450
  memory.guard %memory:0 %451 32
  %452 = load.32 i32 %memory:0 %451
  local.set %53 %452
  %453 = local.get %23
  %454 = local.get (arg)%1
  memory.guard %memory:0 %454 32
  %455 = load.32 i32 %memory:0 %454
  %456 = local.get %26
  %457 = local.get %21
  %458 = int.add %456 %457
  %459 = int.xor %455 %458
  local.set %26 %459
  memory.guard %memory:0 %453 32
  store.32 %memory:0 %453 %459
  %460 = local.get %23
  %461 = const i32 60
  %462 = int.add %460 %461
  %463 = local.get %53
  %464 = local.get %35
  %465 = local.get %6
  %466 = int.add %464 %465
  %467 = int.xor %463 %466
  memory.guard %memory:0 %462 32
  store.32 %memory:0 %462 %467
  %468 = local.get %23
  %469 = const i32 56
  %470 = int.add %468 %469
  %471 = local.get %52
  %472 = local.get %36
  %473 = local.get %7
  %474 = int.add %472 %473
  %475 = int.xor %471 %474
  memory.guard %memory:0 %470 32
  store.32 %memory:0 %470 %475
  %476 = local.get %23
  %477 = const i32 52
  %478 = int.add %476 %477
  %479 = local.get %51
  %480 = local.get %37
  %481 = local.get %8
  %482 = int.add %480 %481
  %483 = int.xor %479 %482
  memory.guard %memory:0 %478 32
  store.32 %memory:0 %478 %483
  %484 = local.get %23
  %485 = const i32 48
  %486 = int.add %484 %485
  %487 = local.get %50
  %488 = local.get %38
  %489 = local.get %9
  %490 = int.add %488 %489
  %491 = int.xor %487 %490
  memory.guard %memory:0 %486 32
  store.32 %memory:0 %486 %491
  %492 = local.get %23
  %493 = const i32 44
  %494 = int.add %492 %493
  %495 = local.get %49
  %496 = local.get %39
  %497 = local.get %10
  %498 = int.add %496 %497
  %499 = int.xor %495 %498
  memory.guard %memory:0 %494 32
  store.32 %memory:0 %494 %499
  %500 = local.get %23
  %501 = const i32 40
  %502 = int.add %500 %501
  %503 = local.get %48
  %504 = local.get %34
  %505 = local.get %11
  %506 = int.add %504 %505
  %507 = int.xor %503 %506
  memory.guard %memory:0 %502 32
  store.32 %memory:0 %502 %507
  %508 = local.get %23
  %509 = const i32 36
  %510 = int.add %508 %509
  %511 = local.get %47
  %512 = local.get %33
  %513 = local.get %12
  %514 = int.add %512 %513
  %515 = int.xor %511 %514
  memory.guard %memory:0 %510 32
  store.32 %memory:0 %510 %515
  %516 = local.get %23
  %517 = const i32 32
  %518 = int.add %516 %517
  %519 = local.get %46
  %520 = local.get %32
  %521 = local.get %13
  %522 = int.add %520 %521
  %523 = int.xor %519 %522
  memory.guard %memory:0 %518 32
  store.32 %memory:0 %518 %523
  %524 = local.get %23
  %525 = const i32 28
  %526 = int.add %524 %525
  %527 = local.get %45
  %528 = local.get %31
  %529 = local.get %14
  %530 = int.add %528 %529
  %531 = int.xor %527 %530
  memory.guard %memory:0 %526 32
  store.32 %memory:0 %526 %531
  %532 = local.get %23
  %533 = const i32 24
  %534 = int.add %532 %533
  %535 = local.get %44
  %536 = local.get %30
  %537 = local.get %15
  %538 = int.add %536 %537
  %539 = int.xor %535 %538
  memory.guard %memory:0 %534 32
  store.32 %memory:0 %534 %539
  %540 = local.get %23
  %541 = const i32 20
  %542 = int.add %540 %541
  %543 = local.get %43
  %544 = local.get (arg)%2
  %545 = local.get %16
  %546 = int.add %544 %545
  %547 = int.xor %543 %546
  memory.guard %memory:0 %542 32
  store.32 %memory:0 %542 %547
  %548 = local.get %23
  %549 = const i32 16
  %550 = int.add %548 %549
  %551 = local.get %42
  %552 = local.get %24
  %553 = local.get %17
  %554 = int.add %552 %553
  %555 = int.xor %551 %554
  memory.guard %memory:0 %550 32
  store.32 %memory:0 %550 %555
  %556 = local.get %23
  %557 = const i32 12
  %558 = int.add %556 %557
  %559 = local.get %41
  %560 = local.get %29
  %561 = local.get %18
  %562 = int.add %560 %561
  %563 = int.xor %559 %562
  memory.guard %memory:0 %558 32
  store.32 %memory:0 %558 %563
  %564 = local.get %23
  %565 = const i32 8
  %566 = int.add %564 %565
  %567 = local.get %40
  %568 = local.get %28
  %569 = local.get %19
  %570 = int.add %568 %569
  %571 = int.xor %567 %570
  memory.guard %memory:0 %566 32
  store.32 %memory:0 %566 %571
  %572 = local.get %23
  %573 = const i32 4
  %574 = int.add %572 %573
  %575 = local.get %25
  %576 = local.get %27
  %577 = local.get %20
  %578 = int.add %576 %577
  %579 = int.xor %575 %578
  memory.guard %memory:0 %574 32
  store.32 %memory:0 %574 %579
  %580 = local.get %8
  %581 = local.get %9
  %582 = const i32 1
  %583 = int.add %581 %582
  local.set %24 %583
  %584 = local.get %9
  %585 = int.lt.u %583 %584
  %586 = int.add %580 %585
  local.set %8 %586
  %587 = local.get (arg)%3
  %588 = const i64 64
  %589 = int.gt.u %587 %588
  br.cond %589 %BB:17 %BB:10

#pred = {%BB:9}
%BB:10:
  %590 = local.get (arg)%3
  %591 = const i64 63
  %592 = int.gt.u %590 %591
  br.cond %592 %BB:16 %BB:11

#pred = {%BB:10}
%BB:11:
  %593 = local.get (arg)%3
  %594 = cast i32 %593
  local.set (arg)%2 %594
  %595 = int.eqz %594
  br.cond %595 %BB:16 %BB:12

#pred = {%BB:11}
%BB:12:
  %596 = local.get %22
  %597 = local.get %26
  memory.guard %memory:0 %596 8
  store.8 %memory:0 %596 %597
  %598 = local.get (arg)%2
  %599 = const i32 1
  %600 = int.eq %598 %599
  br.cond %600 %BB:16 %BB:13

#pred = {%BB:12}
%BB:13:
  %601 = local.get %23
  %602 = const i32 1
  %603 = int.add %601 %602
  local.set (arg)%2 %603
  %604 = local.get %22
  %605 = const i32 1
  %606 = int.add %604 %605
  local.set %30 %606
  br %BB:14

#pred = {%BB:14, %BB:13}
%BB:14:
  %607 = local.get %30
  %608 = local.get (arg)%2
  memory.guard %memory:0 %608 8
  %609 = load.8 i32 %memory:0 %608
  memory.guard %memory:0 %607 8
  store.8 %memory:0 %607 %609
  %610 = local.get (arg)%2
  %611 = const i32 1
  %612 = int.add %610 %611
  local.set (arg)%2 %612
  %613 = local.get %30
  %614 = const i32 1
  %615 = int.add %613 %614
  local.set %30 %615
  %616 = local.get %5
  %617 = const i32 -1
  %618 = int.add %616 %617
  local.set %5 %618
  br.cond %618 %BB:14 %BB:15

#pred = {%BB:14}
%BB:15:
  br %BB:16

#pred = {%BB:15, %BB:12, %BB:11, %BB:10}
%BB:16:
  %619 = local.get (arg)%0
  %620 = const i32 52
  %621 = int.add %619 %620
  %622 = local.get %8
  memory.guard %memory:0 %621 32
  store.32 %memory:0 %621 %622
  %623 = local.get (arg)%0
  %624 = const i32 48
  %625 = int.add %623 %624
  %626 = local.get %24
  memory.guard %memory:0 %625 32
  store.32 %memory:0 %625 %626
  ret

#pred = {%BB:9}
%BB:17:
  %628 = local.get %5
  %629 = const i32 -64
  %630 = int.add %628 %629
  local.set %5 %630
  %631 = local.get (arg)%1
  %632 = const i32 64
  %633 = int.add %631 %632
  local.set (arg)%1 %633
  %634 = local.get %23
  %635 = const i32 64
  %636 = int.add %634 %635
  local.set (arg)%2 %636
  %637 = local.get (arg)%3
  %638 = const i64 -64
  %639 = int.add %637 %638
  local.set (arg)%3 %639
  %640 = local.get %24
  local.set %9 %640
  br %BB:0

}

function %function:26 : [i32, i64, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i32, (arg)%3:i32, %4:i32}
#pred = {}
%entry:
  %5 = global.get %global:0
  %6 = const i32 64
  %7 = int.sub %5 %6
  local.set %4 %7
  global.set %global:0%7
  %8 = local.get (arg)%1
  %9 = int.eqz %8
  br.cond %9 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %10 = local.get %4
  %11 = const i64 7719281312240119090
  %12 = const i32 8
  %13 = int.add %10 %12
  memory.guard %memory:0 %13 64
  store.64 %memory:0 %13 %11
  %14 = local.get %4
  %15 = const i64 3684054920433006693
  memory.guard %memory:0 %14 64
  store.64 %memory:0 %14 %15
  %16 = local.get %4
  %17 = const i32 0
  %18 = const i32 48
  %19 = int.add %16 %18
  memory.guard %memory:0 %19 32
  store.32 %memory:0 %19 %17
  %20 = local.get %4
  %21 = local.get (arg)%3
  memory.guard %memory:0 %21 32
  %22 = load.32 i32 %memory:0 %21
  %23 = const i32 16
  %24 = int.add %20 %23
  memory.guard %memory:0 %24 32
  store.32 %memory:0 %24 %22
  %25 = local.get %4
  %26 = local.get (arg)%2
  memory.guard %memory:0 %26 64
  %27 = load.64 i64 %memory:0 %26
  %28 = const i32 52
  %29 = int.add %25 %28
  memory.guard %memory:0 %29 64
  store.64 %memory:0 %29 %27
  %30 = local.get %4
  %31 = local.get (arg)%3
  %32 = const i32 4
  %33 = int.add %31 %32
  memory.guard %memory:0 %33 64
  %34 = load.64 i64 %memory:0 %33
  %35 = const i32 20
  %36 = int.add %30 %35
  memory.guard %memory:0 %36 64
  store.64 %memory:0 %36 %34
  %37 = local.get %4
  %38 = local.get (arg)%3
  %39 = const i32 12
  %40 = int.add %38 %39
  memory.guard %memory:0 %40 64
  %41 = load.64 i64 %memory:0 %40
  %42 = const i32 28
  %43 = int.add %37 %42
  memory.guard %memory:0 %43 64
  store.64 %memory:0 %43 %41
  %44 = local.get %4
  %45 = local.get (arg)%3
  %46 = const i32 20
  %47 = int.add %45 %46
  memory.guard %memory:0 %47 64
  %48 = load.64 i64 %memory:0 %47
  %49 = const i32 36
  %50 = int.add %44 %49
  memory.guard %memory:0 %50 64
  store.64 %memory:0 %50 %48
  %51 = local.get %4
  %52 = local.get (arg)%3
  %53 = const i32 28
  %54 = int.add %52 %53
  memory.guard %memory:0 %54 32
  %55 = load.32 i32 %memory:0 %54
  %56 = const i32 44
  %57 = int.add %51 %56
  memory.guard %memory:0 %57 32
  store.32 %memory:0 %57 %55
  %58 = local.get %4
  %59 = local.get (arg)%2
  %60 = const i32 8
  %61 = int.add %59 %60
  memory.guard %memory:0 %61 32
  %62 = load.32 i32 %memory:0 %61
  %63 = const i32 60
  %64 = int.add %58 %63
  memory.guard %memory:0 %64 32
  store.32 %memory:0 %64 %62
  %65 = local.get %4
  %66 = local.get (arg)%0
  %67 = const i32 0
  %68 = local.get (arg)%1
  %69 = cast i32 %68
  %70 = call %function:97(%66, %67, %69)
  local.set (arg)%3 %70
  %71 = local.get (arg)%3
  %72 = local.get (arg)%1
  call %function:25(%65, %70, %71, %72)
  %73 = local.get %4
  %74 = const i32 64
  call %function:46(%73, %74)
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  %75 = local.get %4
  %76 = const i32 64
  %77 = int.add %75 %76
  global.set %global:0%77
  %78 = const i32 0
  ret %78

}

function %function:27 : [i32, i32, i64, i32, i64, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i64, (arg)%3:i32, (arg)%4:i64, (arg)%5:i32, %6:i32}
#pred = {}
%entry:
  %7 = global.get %global:0
  %8 = const i32 64
  %9 = int.sub %7 %8
  local.set %6 %9
  global.set %global:0%9
  %10 = local.get (arg)%2
  %11 = int.eqz %10
  br.cond %11 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %12 = local.get %6
  %13 = const i64 7719281312240119090
  %14 = const i32 8
  %15 = int.add %12 %14
  memory.guard %memory:0 %15 64
  store.64 %memory:0 %15 %13
  %16 = local.get %6
  %17 = const i64 3684054920433006693
  memory.guard %memory:0 %16 64
  store.64 %memory:0 %16 %17
  %18 = local.get %6
  %19 = local.get (arg)%5
  memory.guard %memory:0 %19 32
  %20 = load.32 i32 %memory:0 %19
  %21 = const i32 16
  %22 = int.add %18 %21
  memory.guard %memory:0 %22 32
  store.32 %memory:0 %22 %20
  %23 = local.get %6
  %24 = local.get (arg)%3
  memory.guard %memory:0 %24 32
  %25 = load.32 i32 %memory:0 %24
  %26 = const i32 56
  %27 = int.add %23 %26
  memory.guard %memory:0 %27 32
  store.32 %memory:0 %27 %25
  %28 = local.get %6
  %29 = local.get (arg)%5
  %30 = const i32 4
  %31 = int.add %29 %30
  memory.guard %memory:0 %31 64
  %32 = load.64 i64 %memory:0 %31
  %33 = const i32 20
  %34 = int.add %28 %33
  memory.guard %memory:0 %34 64
  store.64 %memory:0 %34 %32
  %35 = local.get %6
  %36 = local.get (arg)%5
  %37 = const i32 12
  %38 = int.add %36 %37
  memory.guard %memory:0 %38 64
  %39 = load.64 i64 %memory:0 %38
  %40 = const i32 28
  %41 = int.add %35 %40
  memory.guard %memory:0 %41 64
  store.64 %memory:0 %41 %39
  %42 = local.get %6
  %43 = local.get (arg)%5
  %44 = const i32 20
  %45 = int.add %43 %44
  memory.guard %memory:0 %45 64
  %46 = load.64 i64 %memory:0 %45
  %47 = const i32 36
  %48 = int.add %42 %47
  memory.guard %memory:0 %48 64
  store.64 %memory:0 %48 %46
  %49 = local.get %6
  %50 = local.get (arg)%5
  %51 = const i32 28
  %52 = int.add %50 %51
  memory.guard %memory:0 %52 32
  %53 = load.32 i32 %memory:0 %52
  %54 = const i32 44
  %55 = int.add %49 %54
  memory.guard %memory:0 %55 32
  store.32 %memory:0 %55 %53
  %56 = local.get %6
  %57 = local.get (arg)%4
  %58 = const i32 48
  %59 = int.add %56 %58
  memory.guard %memory:0 %59 32
  store.32 %memory:0 %59 %57
  %60 = local.get %6
  %61 = local.get (arg)%4
  %62 = const i64 32
  %63 = int.shr.u %61 %62
  %64 = const i32 52
  %65 = int.add %60 %64
  memory.guard %memory:0 %65 32
  store.32 %memory:0 %65 %63
  %66 = local.get %6
  %67 = local.get (arg)%3
  %68 = const i32 4
  %69 = int.add %67 %68
  memory.guard %memory:0 %69 32
  %70 = load.32 i32 %memory:0 %69
  %71 = const i32 60
  %72 = int.add %66 %71
  memory.guard %memory:0 %72 32
  store.32 %memory:0 %72 %70
  %73 = local.get %6
  %74 = local.get (arg)%1
  %75 = local.get (arg)%0
  %76 = local.get (arg)%2
  call %function:25(%73, %74, %75, %76)
  %77 = local.get %6
  %78 = const i32 64
  call %function:46(%77, %78)
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  %79 = local.get %6
  %80 = const i32 64
  %81 = int.add %79 %80
  global.set %global:0%81
  %82 = const i32 0
  ret %82

}

function %function:28 : [i32, i32, i64, i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i64, (arg)%3:i32, (arg)%4:i32, (arg)%5:i32, %6:i32}
#pred = {}
%entry:
  %7 = global.get %global:0
  %8 = const i32 64
  %9 = int.sub %7 %8
  local.set %6 %9
  global.set %global:0%9
  %10 = local.get (arg)%2
  %11 = int.eqz %10
  br.cond %11 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %12 = local.get %6
  %13 = const i64 7719281312240119090
  %14 = const i32 8
  %15 = int.add %12 %14
  memory.guard %memory:0 %15 64
  store.64 %memory:0 %15 %13
  %16 = local.get %6
  %17 = const i64 3684054920433006693
  memory.guard %memory:0 %16 64
  store.64 %memory:0 %16 %17
  %18 = local.get %6
  %19 = local.get (arg)%4
  %20 = const i32 48
  %21 = int.add %18 %20
  memory.guard %memory:0 %21 32
  store.32 %memory:0 %21 %19
  %22 = local.get %6
  %23 = local.get (arg)%5
  memory.guard %memory:0 %23 32
  %24 = load.32 i32 %memory:0 %23
  %25 = const i32 16
  %26 = int.add %22 %25
  memory.guard %memory:0 %26 32
  store.32 %memory:0 %26 %24
  %27 = local.get %6
  %28 = local.get (arg)%3
  memory.guard %memory:0 %28 64
  %29 = load.64 i64 %memory:0 %28
  %30 = const i32 52
  %31 = int.add %27 %30
  memory.guard %memory:0 %31 64
  store.64 %memory:0 %31 %29
  %32 = local.get %6
  %33 = local.get (arg)%5
  %34 = const i32 4
  %35 = int.add %33 %34
  memory.guard %memory:0 %35 64
  %36 = load.64 i64 %memory:0 %35
  %37 = const i32 20
  %38 = int.add %32 %37
  memory.guard %memory:0 %38 64
  store.64 %memory:0 %38 %36
  %39 = local.get %6
  %40 = local.get (arg)%5
  %41 = const i32 12
  %42 = int.add %40 %41
  memory.guard %memory:0 %42 64
  %43 = load.64 i64 %memory:0 %42
  %44 = const i32 28
  %45 = int.add %39 %44
  memory.guard %memory:0 %45 64
  store.64 %memory:0 %45 %43
  %46 = local.get %6
  %47 = local.get (arg)%5
  %48 = const i32 20
  %49 = int.add %47 %48
  memory.guard %memory:0 %49 64
  %50 = load.64 i64 %memory:0 %49
  %51 = const i32 36
  %52 = int.add %46 %51
  memory.guard %memory:0 %52 64
  store.64 %memory:0 %52 %50
  %53 = local.get %6
  %54 = local.get (arg)%5
  %55 = const i32 28
  %56 = int.add %54 %55
  memory.guard %memory:0 %56 32
  %57 = load.32 i32 %memory:0 %56
  %58 = const i32 44
  %59 = int.add %53 %58
  memory.guard %memory:0 %59 32
  store.32 %memory:0 %59 %57
  %60 = local.get %6
  %61 = local.get (arg)%3
  %62 = const i32 8
  %63 = int.add %61 %62
  memory.guard %memory:0 %63 32
  %64 = load.32 i32 %memory:0 %63
  %65 = const i32 60
  %66 = int.add %60 %65
  memory.guard %memory:0 %66 32
  store.32 %memory:0 %66 %64
  %67 = local.get %6
  %68 = local.get (arg)%1
  %69 = local.get (arg)%0
  %70 = local.get (arg)%2
  call %function:25(%67, %68, %69, %70)
  %71 = local.get %6
  %72 = const i32 64
  call %function:46(%71, %72)
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  %73 = local.get %6
  %74 = const i32 64
  %75 = int.add %73 %74
  global.set %global:0%75
  %76 = const i32 0
  ret %76

}

function %function:29 : [i32, i64, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i32, (arg)%3:i32}
#pred = {}
%entry:
  %4 = local.get (arg)%1
  %5 = const i64 4294967296
  %6 = int.lt.u %4 %5
  br.cond %6 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  call %function:43()
  unreachable

#pred = {%entry}
%BB:1:
  %8 = local.get (arg)%0
  %9 = local.get (arg)%1
  %10 = local.get (arg)%2
  %11 = local.get (arg)%3
  %12 = const i32 0
  %13 = const i32 69488
  %14 = int.add %12 %13
  memory.guard %memory:0 %14 32
  %15 = load.32 i32 %memory:0 %14
  %16 = call.indirect %table:0 %15 (%8, %9, %10, %11)
  ret %16

}

function %function:30 : [i32, i32, i64, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i64, (arg)%3:i32, (arg)%4:i32}
#pred = {}
%entry:
  %5 = local.get (arg)%2
  %6 = const i64 4294967296
  %7 = int.lt.u %5 %6
  br.cond %7 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  call %function:43()
  unreachable

#pred = {%entry}
%BB:1:
  %9 = local.get (arg)%0
  %10 = local.get (arg)%1
  %11 = local.get (arg)%2
  %12 = local.get (arg)%3
  %13 = const i64 0
  %14 = local.get (arg)%4
  %15 = const i32 0
  %16 = const i32 69496
  %17 = int.add %15 %16
  memory.guard %memory:0 %17 32
  %18 = load.32 i32 %memory:0 %17
  %19 = call.indirect %table:0 %18 (%9, %10, %11, %12, %13, %14)
  ret %19

}

function %function:31 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 0
  ret %0

}

function %function:32 : [i32] -> [i32] {
{(arg)%0:i32}
#pred = {}
%entry:
  %1 = const i32 0
  %2 = local.get (arg)%0
  %3 = const i32 77988
  %4 = int.add %1 %3
  memory.guard %memory:0 %4 32
  store.32 %memory:0 %4 %2
  %5 = const i32 0
  ret %5

}

function %function:33 : [] -> [] {
{%0:i32}
#pred = {}
%entry:
  %1 = const i32 0
  %2 = const i32 77988
  %3 = int.add %1 %2
  memory.guard %memory:0 %3 32
  %4 = load.32 i32 %memory:0 %3
  br.cond %4 %BB:2 %BB:0

#pred = {%entry}
%BB:0:
  %5 = const i32 0
  %6 = const i32 69504
  %7 = const i32 77988
  %8 = int.add %5 %7
  memory.guard %memory:0 %8 32
  store.32 %memory:0 %8 %6
  call %function:33()
  %9 = const i32 0
  %10 = const i32 77988
  %11 = int.add %9 %10
  memory.guard %memory:0 %11 32
  %12 = load.32 i32 %memory:0 %11
  %13 = const i32 8
  %14 = int.add %12 %13
  memory.guard %memory:0 %14 32
  %15 = load.32 i32 %memory:0 %14
  local.set %0 %15
  %16 = int.eqz %15
  br.cond %16 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  %17 = local.get %0
  call.indirect %table:0 %17 ()
  br %BB:2

#pred = {%BB:1, %BB:0, %entry}
%BB:2:
  ret

}

function %function:34 : [] -> [] {
{%0:i32}
#pred = {}
%entry:
  call %function:33()
  %1 = const i32 0
  %2 = const i32 77988
  %3 = int.add %1 %2
  memory.guard %memory:0 %3 32
  %4 = load.32 i32 %memory:0 %3
  %5 = const i32 8
  %6 = int.add %4 %5
  memory.guard %memory:0 %6 32
  %7 = load.32 i32 %memory:0 %6
  local.set %0 %7
  %8 = int.eqz %7
  br.cond %8 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %9 = local.get %0
  call.indirect %table:0 %9 ()
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  ret

}

function %function:35 : [i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32}
#pred = {}
%entry:
  call %function:33()
  %2 = local.get (arg)%1
  %3 = int.eqz %2
  br.cond %3 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %4 = local.get (arg)%0
  %5 = local.get (arg)%1
  %6 = const i32 0
  %7 = const i32 77988
  %8 = int.add %6 %7
  memory.guard %memory:0 %8 32
  %9 = load.32 i32 %memory:0 %8
  %10 = const i32 16
  %11 = int.add %9 %10
  memory.guard %memory:0 %11 32
  %12 = load.32 i32 %memory:0 %11
  call.indirect %table:0 %12 (%4, %5)
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  ret

}

function %function:36 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 0
  ret %0

}

function %function:37 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = call %function:36()
  ret %0

}

function %function:38 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 0
  ret %0

}

function %function:39 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 0
  ret %0

}

function %function:40 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 0
  ret %0

}

function %function:41 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 0
  ret %0

}

function %function:42 : [] -> [i32] {
{%0:i32, %1:i32, %2:i32}
#pred = {}
%entry:
  %3 = global.get %global:0
  %4 = const i32 16
  %5 = int.sub %3 %4
  local.set %0 %5
  global.set %global:0%5
  %6 = local.get %0
  %7 = const i32 8
  %8 = int.add %6 %7
  %9 = const i64 0
  memory.guard %memory:0 %8 64
  store.64 %memory:0 %8 %9
  %10 = const i32 0
  %11 = const i32 77996
  %12 = int.add %10 %11
  memory.guard %memory:0 %12 32
  %13 = load.32 i32 %memory:0 %12
  local.set %1 %13
  %14 = const i32 1
  local.set %2 %14
  %15 = const i32 0
  %16 = const i32 1
  %17 = const i32 77996
  %18 = int.add %15 %17
  memory.guard %memory:0 %18 32
  store.32 %memory:0 %18 %16
  %19 = local.get %0
  %20 = const i64 0
  memory.guard %memory:0 %19 64
  store.64 %memory:0 %19 %20
  %21 = local.get %1
  %22 = int.eqz %21
  br.cond %22 %BB:3 %BB:0

#pred = {%entry}
%BB:0:
  br %BB:1

#pred = {%BB:1, %BB:0}
%BB:1:
  %23 = local.get %0
  %24 = const i32 0
  %25 = call %function:62(%23, %24)
  %26 = const i32 0
  %27 = const i32 77996
  %28 = int.add %26 %27
  memory.guard %memory:0 %28 32
  %29 = load.32 i32 %memory:0 %28
  local.set %1 %29
  %30 = const i32 0
  %31 = const i32 1
  %32 = const i32 77996
  %33 = int.add %30 %32
  memory.guard %memory:0 %33 32
  store.32 %memory:0 %33 %31
  %34 = local.get %1
  br.cond %34 %BB:1 %BB:2

#pred = {%BB:1}
%BB:2:
  br %BB:3

#pred = {%BB:2, %entry}
%BB:3:
  %35 = const i32 0
  %36 = const i32 77992
  %37 = int.add %35 %36
  memory.guard %memory:0 %37 32
  %38 = load.32 i32 %memory:0 %37
  br.cond %38 %BB:5 %BB:4

#pred = {%BB:3}
%BB:4:
  %39 = call %function:44()
  call %function:34()
  %40 = call %function:47()
  %41 = call %function:38()
  %42 = call %function:37()
  %43 = call %function:39()
  %44 = call %function:40()
  %45 = call %function:31()
  %46 = call %function:41()
  %47 = const i32 0
  local.set %2 %47
  %48 = const i32 0
  %49 = const i32 1
  %50 = const i32 77992
  %51 = int.add %48 %50
  memory.guard %memory:0 %51 32
  store.32 %memory:0 %51 %49
  br %BB:5

#pred = {%BB:4, %BB:3}
%BB:5:
  %52 = const i32 0
  %53 = const i32 0
  %54 = const i32 77996
  %55 = int.add %52 %54
  memory.guard %memory:0 %55 32
  store.32 %memory:0 %55 %53
  %56 = local.get %0
  %57 = const i32 16
  %58 = int.add %56 %57
  global.set %global:0%58
  %59 = local.get %2
  ret %59

}

function %function:43 : [] -> [] {
{%0:i32, %1:i32}
#pred = {}
%entry:
  %2 = global.get %global:0
  %3 = const i32 16
  %4 = int.sub %2 %3
  local.set %0 %4
  global.set %global:0%4
  %5 = const i32 0
  %6 = const i32 0
  %7 = const i32 77996
  %8 = int.add %5 %7
  memory.guard %memory:0 %8 32
  store.32 %memory:0 %8 %6
  %9 = const i32 0
  %10 = const i32 1
  %11 = const i32 77996
  %12 = int.add %9 %11
  memory.guard %memory:0 %12 32
  store.32 %memory:0 %12 %10
  %13 = local.get %0
  %14 = const i32 8
  %15 = int.add %13 %14
  %16 = const i64 0
  memory.guard %memory:0 %15 64
  store.64 %memory:0 %15 %16
  %17 = local.get %0
  %18 = const i64 0
  memory.guard %memory:0 %17 64
  store.64 %memory:0 %17 %18
  %19 = const i32 1
  br.cond %19 %BB:3 %BB:0

#pred = {%entry}
%BB:0:
  br %BB:1

#pred = {%BB:1, %BB:0}
%BB:1:
  %20 = local.get %0
  %21 = const i32 0
  %22 = call %function:62(%20, %21)
  %23 = const i32 0
  %24 = const i32 77996
  %25 = int.add %23 %24
  memory.guard %memory:0 %25 32
  %26 = load.32 i32 %memory:0 %25
  local.set %1 %26
  %27 = const i32 0
  %28 = const i32 1
  %29 = const i32 77996
  %30 = int.add %27 %29
  memory.guard %memory:0 %30 32
  store.32 %memory:0 %30 %28
  %31 = local.get %1
  br.cond %31 %BB:1 %BB:2

#pred = {%BB:1}
%BB:2:
  br %BB:3

#pred = {%BB:2, %entry}
%BB:3:
  %32 = const i32 0
  %33 = const i32 78000
  %34 = int.add %32 %33
  memory.guard %memory:0 %34 32
  %35 = load.32 i32 %memory:0 %34
  local.set %0 %35
  %36 = int.eqz %35
  br.cond %36 %BB:5 %BB:4

#pred = {%BB:3}
%BB:4:
  %37 = local.get %0
  call.indirect %table:0 %37 ()
  br %BB:5

#pred = {%BB:4, %BB:3}
%BB:5:
  call %function:65()
  unreachable

}

function %function:44 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 -1
  ret %0

}

function %function:45 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 0
  ret %0

}

function %function:46 : [i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32}
#pred = {}
%entry:
  %2 = local.get (arg)%0
  %3 = local.get (arg)%1
  call %function:96(%2, %3)
  ret

}

function %function:47 : [] -> [i32] {
{%0:i32}
#pred = {}
%entry:
  %1 = const i32 30
  %2 = call %function:104(%1)
  local.set %0 %2
  %3 = const i32 1
  %4 = int.lt.s %2 %3
  br.cond %4 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %5 = const i32 0
  %6 = local.get %0
  %7 = const i32 78004
  %8 = int.add %5 %7
  memory.guard %memory:0 %8 32
  store.32 %memory:0 %8 %6
  br %BB:2

#pred = {%entry}
%BB:1:
  %9 = const i32 0
  %10 = const i32 78004
  %11 = int.add %9 %10
  memory.guard %memory:0 %11 32
  %12 = load.32 i32 %memory:0 %11
  local.set %0 %12
  br %BB:2

#pred = {%BB:1, %BB:0}
%BB:2:
  %13 = local.get %0
  %14 = const i32 15
  %15 = int.gt.u %13 %14
  br.cond %15 %BB:4 %BB:3

#pred = {%BB:2}
%BB:3:
  call %function:43()
  unreachable

#pred = {%BB:2}
%BB:4:
  %17 = const i32 78016
  %18 = const i32 16
  call %function:35(%17, %18)
  %19 = const i32 0
  ret %19

}

function %function:48 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 66272
  ret %0

}

function %function:49 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = call %function:109()
  ret %0

}

function %function:50 : [] -> [] {
{}
#pred = {}
%entry:
  ret

}

function %function:51 : [i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32}
#pred = {}
%entry:
  %2 = local.get (arg)%0
  %3 = local.get (arg)%1
  call %function:106(%2, %3)
  ret

}

function %function:52 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 0
  ret %0

}

function %function:53 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 66282
  ret %0

}

function %function:54 : [] -> [i32] {
{%0:i32, %1:i32}
#pred = {}
%entry:
  %2 = const i32 0
  %3 = const i32 78036
  %4 = int.add %2 %3
  memory.guard %memory:0 %4 32
  %5 = load.32 i32 %memory:0 %4
  local.set %0 %5
  br.cond %5 %BB:4 %BB:0

#pred = {%entry}
%BB:0:
  %6 = const i32 0
  %7 = const i32 78032
  %8 = int.add %6 %7
  memory.guard %memory:0 %8 32
  %9 = load.32 i32 %memory:0 %8
  br.cond %9 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  call %function:55()
  br %BB:2

#pred = {%BB:1, %BB:0}
%BB:2:
  %10 = const i32 78072
  %11 = const i64 512
  %12 = const i32 78584
  %13 = const i32 78040
  %14 = call %function:29(%10, %11, %12, %13)
  br.cond %14 %BB:5 %BB:3

#pred = {%BB:2}
%BB:3:
  %15 = const i32 0
  %16 = const i32 480
  %17 = const i32 78036
  %18 = int.add %15 %17
  memory.guard %memory:0 %18 32
  store.32 %memory:0 %18 %16
  %19 = const i32 0
  %20 = const i32 0
  %21 = const i32 78040
  %22 = int.add %20 %21
  memory.guard %memory:0 %22 8
  %23 = load.8 i32 %memory:0 %22
  %24 = const i32 0
  %25 = const i32 78552
  %26 = int.add %24 %25
  memory.guard %memory:0 %26 8
  %27 = load.8 i32 %memory:0 %26
  %28 = int.xor %23 %27
  %29 = const i32 78040
  %30 = int.add %19 %29
  memory.guard %memory:0 %30 8
  store.8 %memory:0 %30 %28
  %31 = const i32 0
  %32 = const i32 0
  %33 = const i32 78041
  %34 = int.add %32 %33
  memory.guard %memory:0 %34 8
  %35 = load.8 i32 %memory:0 %34
  %36 = const i32 0
  %37 = const i32 78553
  %38 = int.add %36 %37
  memory.guard %memory:0 %38 8
  %39 = load.8 i32 %memory:0 %38
  %40 = int.xor %35 %39
  %41 = const i32 78041
  %42 = int.add %31 %41
  memory.guard %memory:0 %42 8
  store.8 %memory:0 %42 %40
  %43 = const i32 0
  %44 = const i32 0
  %45 = const i32 78042
  %46 = int.add %44 %45
  memory.guard %memory:0 %46 8
  %47 = load.8 i32 %memory:0 %46
  %48 = const i32 0
  %49 = const i32 78554
  %50 = int.add %48 %49
  memory.guard %memory:0 %50 8
  %51 = load.8 i32 %memory:0 %50
  %52 = int.xor %47 %51
  %53 = const i32 78042
  %54 = int.add %43 %53
  memory.guard %memory:0 %54 8
  store.8 %memory:0 %54 %52
  %55 = const i32 0
  %56 = const i32 0
  %57 = const i32 78043
  %58 = int.add %56 %57
  memory.guard %memory:0 %58 8
  %59 = load.8 i32 %memory:0 %58
  %60 = const i32 0
  %61 = const i32 78555
  %62 = int.add %60 %61
  memory.guard %memory:0 %62 8
  %63 = load.8 i32 %memory:0 %62
  %64 = int.xor %59 %63
  %65 = const i32 78043
  %66 = int.add %55 %65
  memory.guard %memory:0 %66 8
  store.8 %memory:0 %66 %64
  %67 = const i32 0
  %68 = const i32 0
  %69 = const i32 78044
  %70 = int.add %68 %69
  memory.guard %memory:0 %70 8
  %71 = load.8 i32 %memory:0 %70
  %72 = const i32 0
  %73 = const i32 78556
  %74 = int.add %72 %73
  memory.guard %memory:0 %74 8
  %75 = load.8 i32 %memory:0 %74
  %76 = int.xor %71 %75
  %77 = const i32 78044
  %78 = int.add %67 %77
  memory.guard %memory:0 %78 8
  store.8 %memory:0 %78 %76
  %79 = const i32 0
  %80 = const i32 0
  %81 = const i32 78045
  %82 = int.add %80 %81
  memory.guard %memory:0 %82 8
  %83 = load.8 i32 %memory:0 %82
  %84 = const i32 0
  %85 = const i32 78557
  %86 = int.add %84 %85
  memory.guard %memory:0 %86 8
  %87 = load.8 i32 %memory:0 %86
  %88 = int.xor %83 %87
  %89 = const i32 78045
  %90 = int.add %79 %89
  memory.guard %memory:0 %90 8
  store.8 %memory:0 %90 %88
  %91 = const i32 0
  %92 = const i32 0
  %93 = const i32 78046
  %94 = int.add %92 %93
  memory.guard %memory:0 %94 8
  %95 = load.8 i32 %memory:0 %94
  %96 = const i32 0
  %97 = const i32 78558
  %98 = int.add %96 %97
  memory.guard %memory:0 %98 8
  %99 = load.8 i32 %memory:0 %98
  %100 = int.xor %95 %99
  %101 = const i32 78046
  %102 = int.add %91 %101
  memory.guard %memory:0 %102 8
  store.8 %memory:0 %102 %100
  %103 = const i32 0
  %104 = const i32 0
  %105 = const i32 78047
  %106 = int.add %104 %105
  memory.guard %memory:0 %106 8
  %107 = load.8 i32 %memory:0 %106
  %108 = const i32 0
  %109 = const i32 78559
  %110 = int.add %108 %109
  memory.guard %memory:0 %110 8
  %111 = load.8 i32 %memory:0 %110
  %112 = int.xor %107 %111
  %113 = const i32 78047
  %114 = int.add %103 %113
  memory.guard %memory:0 %114 8
  store.8 %memory:0 %114 %112
  %115 = const i32 0
  %116 = const i32 0
  %117 = const i32 78048
  %118 = int.add %116 %117
  memory.guard %memory:0 %118 8
  %119 = load.8 i32 %memory:0 %118
  %120 = const i32 0
  %121 = const i32 78560
  %122 = int.add %120 %121
  memory.guard %memory:0 %122 8
  %123 = load.8 i32 %memory:0 %122
  %124 = int.xor %119 %123
  %125 = const i32 78048
  %126 = int.add %115 %125
  memory.guard %memory:0 %126 8
  store.8 %memory:0 %126 %124
  %127 = const i32 0
  %128 = const i32 0
  %129 = const i32 78049
  %130 = int.add %128 %129
  memory.guard %memory:0 %130 8
  %131 = load.8 i32 %memory:0 %130
  %132 = const i32 0
  %133 = const i32 78561
  %134 = int.add %132 %133
  memory.guard %memory:0 %134 8
  %135 = load.8 i32 %memory:0 %134
  %136 = int.xor %131 %135
  %137 = const i32 78049
  %138 = int.add %127 %137
  memory.guard %memory:0 %138 8
  store.8 %memory:0 %138 %136
  %139 = const i32 0
  %140 = const i32 0
  %141 = const i32 78050
  %142 = int.add %140 %141
  memory.guard %memory:0 %142 8
  %143 = load.8 i32 %memory:0 %142
  %144 = const i32 0
  %145 = const i32 78562
  %146 = int.add %144 %145
  memory.guard %memory:0 %146 8
  %147 = load.8 i32 %memory:0 %146
  %148 = int.xor %143 %147
  %149 = const i32 78050
  %150 = int.add %139 %149
  memory.guard %memory:0 %150 8
  store.8 %memory:0 %150 %148
  %151 = const i32 0
  %152 = const i32 0
  %153 = const i32 78051
  %154 = int.add %152 %153
  memory.guard %memory:0 %154 8
  %155 = load.8 i32 %memory:0 %154
  %156 = const i32 0
  %157 = const i32 78563
  %158 = int.add %156 %157
  memory.guard %memory:0 %158 8
  %159 = load.8 i32 %memory:0 %158
  %160 = int.xor %155 %159
  %161 = const i32 78051
  %162 = int.add %151 %161
  memory.guard %memory:0 %162 8
  store.8 %memory:0 %162 %160
  %163 = const i32 0
  %164 = const i32 0
  %165 = const i32 78052
  %166 = int.add %164 %165
  memory.guard %memory:0 %166 8
  %167 = load.8 i32 %memory:0 %166
  %168 = const i32 0
  %169 = const i32 78564
  %170 = int.add %168 %169
  memory.guard %memory:0 %170 8
  %171 = load.8 i32 %memory:0 %170
  %172 = int.xor %167 %171
  %173 = const i32 78052
  %174 = int.add %163 %173
  memory.guard %memory:0 %174 8
  store.8 %memory:0 %174 %172
  %175 = const i32 0
  %176 = const i32 0
  %177 = const i32 78053
  %178 = int.add %176 %177
  memory.guard %memory:0 %178 8
  %179 = load.8 i32 %memory:0 %178
  %180 = const i32 0
  %181 = const i32 78565
  %182 = int.add %180 %181
  memory.guard %memory:0 %182 8
  %183 = load.8 i32 %memory:0 %182
  %184 = int.xor %179 %183
  %185 = const i32 78053
  %186 = int.add %175 %185
  memory.guard %memory:0 %186 8
  store.8 %memory:0 %186 %184
  %187 = const i32 0
  %188 = const i32 0
  %189 = const i32 78054
  %190 = int.add %188 %189
  memory.guard %memory:0 %190 8
  %191 = load.8 i32 %memory:0 %190
  %192 = const i32 0
  %193 = const i32 78566
  %194 = int.add %192 %193
  memory.guard %memory:0 %194 8
  %195 = load.8 i32 %memory:0 %194
  %196 = int.xor %191 %195
  %197 = const i32 78054
  %198 = int.add %187 %197
  memory.guard %memory:0 %198 8
  store.8 %memory:0 %198 %196
  %199 = const i32 0
  %200 = const i32 0
  %201 = const i32 78055
  %202 = int.add %200 %201
  memory.guard %memory:0 %202 8
  %203 = load.8 i32 %memory:0 %202
  %204 = const i32 0
  %205 = const i32 78567
  %206 = int.add %204 %205
  memory.guard %memory:0 %206 8
  %207 = load.8 i32 %memory:0 %206
  %208 = int.xor %203 %207
  %209 = const i32 78055
  %210 = int.add %199 %209
  memory.guard %memory:0 %210 8
  store.8 %memory:0 %210 %208
  %211 = const i32 0
  %212 = const i32 0
  %213 = const i32 78056
  %214 = int.add %212 %213
  memory.guard %memory:0 %214 8
  %215 = load.8 i32 %memory:0 %214
  %216 = const i32 0
  %217 = const i32 78568
  %218 = int.add %216 %217
  memory.guard %memory:0 %218 8
  %219 = load.8 i32 %memory:0 %218
  %220 = int.xor %215 %219
  %221 = const i32 78056
  %222 = int.add %211 %221
  memory.guard %memory:0 %222 8
  store.8 %memory:0 %222 %220
  %223 = const i32 0
  %224 = const i32 0
  %225 = const i32 78057
  %226 = int.add %224 %225
  memory.guard %memory:0 %226 8
  %227 = load.8 i32 %memory:0 %226
  %228 = const i32 0
  %229 = const i32 78569
  %230 = int.add %228 %229
  memory.guard %memory:0 %230 8
  %231 = load.8 i32 %memory:0 %230
  %232 = int.xor %227 %231
  %233 = const i32 78057
  %234 = int.add %223 %233
  memory.guard %memory:0 %234 8
  store.8 %memory:0 %234 %232
  %235 = const i32 0
  %236 = const i32 0
  %237 = const i32 78058
  %238 = int.add %236 %237
  memory.guard %memory:0 %238 8
  %239 = load.8 i32 %memory:0 %238
  %240 = const i32 0
  %241 = const i32 78570
  %242 = int.add %240 %241
  memory.guard %memory:0 %242 8
  %243 = load.8 i32 %memory:0 %242
  %244 = int.xor %239 %243
  %245 = const i32 78058
  %246 = int.add %235 %245
  memory.guard %memory:0 %246 8
  store.8 %memory:0 %246 %244
  %247 = const i32 0
  %248 = const i32 0
  %249 = const i32 78059
  %250 = int.add %248 %249
  memory.guard %memory:0 %250 8
  %251 = load.8 i32 %memory:0 %250
  %252 = const i32 0
  %253 = const i32 78571
  %254 = int.add %252 %253
  memory.guard %memory:0 %254 8
  %255 = load.8 i32 %memory:0 %254
  %256 = int.xor %251 %255
  %257 = const i32 78059
  %258 = int.add %247 %257
  memory.guard %memory:0 %258 8
  store.8 %memory:0 %258 %256
  %259 = const i32 0
  %260 = const i32 0
  %261 = const i32 78060
  %262 = int.add %260 %261
  memory.guard %memory:0 %262 8
  %263 = load.8 i32 %memory:0 %262
  %264 = const i32 0
  %265 = const i32 78572
  %266 = int.add %264 %265
  memory.guard %memory:0 %266 8
  %267 = load.8 i32 %memory:0 %266
  %268 = int.xor %263 %267
  %269 = const i32 78060
  %270 = int.add %259 %269
  memory.guard %memory:0 %270 8
  store.8 %memory:0 %270 %268
  %271 = const i32 0
  %272 = const i32 0
  %273 = const i32 78061
  %274 = int.add %272 %273
  memory.guard %memory:0 %274 8
  %275 = load.8 i32 %memory:0 %274
  %276 = const i32 0
  %277 = const i32 78573
  %278 = int.add %276 %277
  memory.guard %memory:0 %278 8
  %279 = load.8 i32 %memory:0 %278
  %280 = int.xor %275 %279
  %281 = const i32 78061
  %282 = int.add %271 %281
  memory.guard %memory:0 %282 8
  store.8 %memory:0 %282 %280
  %283 = const i32 0
  %284 = const i32 0
  %285 = const i32 78062
  %286 = int.add %284 %285
  memory.guard %memory:0 %286 8
  %287 = load.8 i32 %memory:0 %286
  %288 = const i32 0
  %289 = const i32 78574
  %290 = int.add %288 %289
  memory.guard %memory:0 %290 8
  %291 = load.8 i32 %memory:0 %290
  %292 = int.xor %287 %291
  %293 = const i32 78062
  %294 = int.add %283 %293
  memory.guard %memory:0 %294 8
  store.8 %memory:0 %294 %292
  %295 = const i32 0
  %296 = const i32 0
  %297 = const i32 78063
  %298 = int.add %296 %297
  memory.guard %memory:0 %298 8
  %299 = load.8 i32 %memory:0 %298
  %300 = const i32 0
  %301 = const i32 78575
  %302 = int.add %300 %301
  memory.guard %memory:0 %302 8
  %303 = load.8 i32 %memory:0 %302
  %304 = int.xor %299 %303
  %305 = const i32 78063
  %306 = int.add %295 %305
  memory.guard %memory:0 %306 8
  store.8 %memory:0 %306 %304
  %307 = const i32 0
  %308 = const i32 0
  %309 = const i32 78064
  %310 = int.add %308 %309
  memory.guard %memory:0 %310 8
  %311 = load.8 i32 %memory:0 %310
  %312 = const i32 0
  %313 = const i32 78576
  %314 = int.add %312 %313
  memory.guard %memory:0 %314 8
  %315 = load.8 i32 %memory:0 %314
  %316 = int.xor %311 %315
  %317 = const i32 78064
  %318 = int.add %307 %317
  memory.guard %memory:0 %318 8
  store.8 %memory:0 %318 %316
  %319 = const i32 0
  %320 = const i32 0
  %321 = const i32 78065
  %322 = int.add %320 %321
  memory.guard %memory:0 %322 8
  %323 = load.8 i32 %memory:0 %322
  %324 = const i32 0
  %325 = const i32 78577
  %326 = int.add %324 %325
  memory.guard %memory:0 %326 8
  %327 = load.8 i32 %memory:0 %326
  %328 = int.xor %323 %327
  %329 = const i32 78065
  %330 = int.add %319 %329
  memory.guard %memory:0 %330 8
  store.8 %memory:0 %330 %328
  %331 = const i32 0
  %332 = const i32 0
  %333 = const i32 78066
  %334 = int.add %332 %333
  memory.guard %memory:0 %334 8
  %335 = load.8 i32 %memory:0 %334
  %336 = const i32 0
  %337 = const i32 78578
  %338 = int.add %336 %337
  memory.guard %memory:0 %338 8
  %339 = load.8 i32 %memory:0 %338
  %340 = int.xor %335 %339
  %341 = const i32 78066
  %342 = int.add %331 %341
  memory.guard %memory:0 %342 8
  store.8 %memory:0 %342 %340
  %343 = const i32 0
  %344 = const i32 0
  %345 = const i32 78067
  %346 = int.add %344 %345
  memory.guard %memory:0 %346 8
  %347 = load.8 i32 %memory:0 %346
  %348 = const i32 0
  %349 = const i32 78579
  %350 = int.add %348 %349
  memory.guard %memory:0 %350 8
  %351 = load.8 i32 %memory:0 %350
  %352 = int.xor %347 %351
  %353 = const i32 78067
  %354 = int.add %343 %353
  memory.guard %memory:0 %354 8
  store.8 %memory:0 %354 %352
  %355 = const i32 0
  %356 = const i32 0
  %357 = const i32 78068
  %358 = int.add %356 %357
  memory.guard %memory:0 %358 8
  %359 = load.8 i32 %memory:0 %358
  %360 = const i32 0
  %361 = const i32 78580
  %362 = int.add %360 %361
  memory.guard %memory:0 %362 8
  %363 = load.8 i32 %memory:0 %362
  %364 = int.xor %359 %363
  %365 = const i32 78068
  %366 = int.add %355 %365
  memory.guard %memory:0 %366 8
  store.8 %memory:0 %366 %364
  %367 = const i32 0
  %368 = const i32 0
  %369 = const i32 78069
  %370 = int.add %368 %369
  memory.guard %memory:0 %370 8
  %371 = load.8 i32 %memory:0 %370
  %372 = const i32 0
  %373 = const i32 78581
  %374 = int.add %372 %373
  memory.guard %memory:0 %374 8
  %375 = load.8 i32 %memory:0 %374
  %376 = int.xor %371 %375
  %377 = const i32 78069
  %378 = int.add %367 %377
  memory.guard %memory:0 %378 8
  store.8 %memory:0 %378 %376
  %379 = const i32 0
  %380 = const i32 0
  %381 = const i32 78070
  %382 = int.add %380 %381
  memory.guard %memory:0 %382 8
  %383 = load.8 i32 %memory:0 %382
  %384 = const i32 0
  %385 = const i32 78582
  %386 = int.add %384 %385
  memory.guard %memory:0 %386 8
  %387 = load.8 i32 %memory:0 %386
  %388 = int.xor %383 %387
  %389 = const i32 78070
  %390 = int.add %379 %389
  memory.guard %memory:0 %390 8
  store.8 %memory:0 %390 %388
  %391 = const i32 0
  %392 = const i32 0
  %393 = const i32 78071
  %394 = int.add %392 %393
  memory.guard %memory:0 %394 8
  %395 = load.8 i32 %memory:0 %394
  %396 = const i32 0
  %397 = const i32 78583
  %398 = int.add %396 %397
  memory.guard %memory:0 %398 8
  %399 = load.8 i32 %memory:0 %398
  %400 = int.xor %395 %399
  %401 = const i32 78071
  %402 = int.add %391 %401
  memory.guard %memory:0 %402 8
  store.8 %memory:0 %402 %400
  %403 = const i32 0
  %404 = const i64 0
  %405 = const i32 78576
  %406 = int.add %403 %405
  memory.guard %memory:0 %406 64
  store.64 %memory:0 %406 %404
  %407 = const i32 0
  %408 = const i64 0
  %409 = const i32 78568
  %410 = int.add %407 %409
  memory.guard %memory:0 %410 64
  store.64 %memory:0 %410 %408
  %411 = const i32 0
  %412 = const i64 0
  %413 = const i32 78560
  %414 = int.add %411 %413
  memory.guard %memory:0 %414 64
  store.64 %memory:0 %414 %412
  %415 = const i32 0
  %416 = const i64 0
  %417 = const i32 78552
  %418 = int.add %415 %417
  memory.guard %memory:0 %418 64
  store.64 %memory:0 %418 %416
  %419 = const i32 0
  %420 = const i32 0
  %421 = const i32 78584
  %422 = int.add %420 %421
  memory.guard %memory:0 %422 64
  %423 = load.64 i64 %memory:0 %422
  %424 = const i64 1
  %425 = int.add %423 %424
  %426 = const i32 78584
  %427 = int.add %419 %426
  memory.guard %memory:0 %427 64
  store.64 %memory:0 %427 %425
  %428 = const i32 0
  %429 = const i32 78036
  %430 = int.add %428 %429
  memory.guard %memory:0 %430 32
  %431 = load.32 i32 %memory:0 %430
  local.set %0 %431
  br %BB:4

#pred = {%BB:3, %entry}
%BB:4:
  %432 = const i32 0
  %433 = local.get %0
  %434 = const i32 -4
  %435 = int.add %433 %434
  %436 = const i32 78036
  %437 = int.add %432 %436
  memory.guard %memory:0 %437 32
  store.32 %memory:0 %437 %435
  %438 = local.get %0
  %439 = const i32 78068
  %440 = int.add %438 %439
  local.set %0 %440
  memory.guard %memory:0 %440 32
  %441 = load.32 i32 %memory:0 %440
  local.set %1 %441
  %442 = local.get %0
  %443 = const i32 0
  memory.guard %memory:0 %442 32
  store.32 %memory:0 %442 %443
  %444 = local.get %1
  ret %444

#pred = {%BB:2}
%BB:5:
  %446 = const i32 66291
  %447 = const i32 66300
  %448 = const i32 604
  %449 = const i32 66351
  call %function:70(%446, %447, %448, %449)
  unreachable

}

function %function:55 : [] -> [] {
{%0:i32, %1:i64, %2:i32}
#pred = {}
%entry:
  %3 = global.get %global:0
  %4 = const i32 16
  %5 = int.sub %3 %4
  local.set %0 %5
  global.set %global:0%5
  %6 = local.get %0
  %7 = const i32 0
  %8 = call %function:64(%6, %7)
  br.cond %8 %BB:8 %BB:0

#pred = {%entry}
%BB:0:
  %9 = const i32 0
  %10 = local.get %0
  memory.guard %memory:0 %10 64
  %11 = load.64 i64 %memory:0 %10
  %12 = const i64 1000000
  %13 = int.mul %11 %12
  %14 = local.get %0
  %15 = const i32 8
  %16 = int.add %14 %15
  memory.guard %memory:0 %16 64
  %17 = load.64 i64 %memory:0 %16
  %18 = int.add %13 %17
  local.set %1 %18
  %19 = const i32 78584
  %20 = int.add %9 %19
  memory.guard %memory:0 %20 64
  store.64 %memory:0 %20 %18
  %21 = local.get %1
  %22 = const i64 0
  %23 = int.eq %21 %22
  br.cond %23 %BB:9 %BB:1

#pred = {%BB:0}
%BB:1:
  %24 = const i32 78072
  %25 = const i32 0
  %26 = const i32 512
  %27 = call %function:97(%24, %25, %26)
  %28 = const i32 0
  %29 = const i32 0
  %30 = const i32 78036
  %31 = int.add %28 %30
  memory.guard %memory:0 %31 32
  store.32 %memory:0 %31 %29
  %32 = const i32 0
  %33 = const i32 78592
  %34 = int.add %32 %33
  memory.guard %memory:0 %34 8
  %35 = load.8 i32 %memory:0 %34
  br.cond %35 %BB:5 %BB:2

#pred = {%BB:1}
%BB:2:
  %36 = const i32 0
  %37 = const i32 79096
  %38 = int.add %36 %37
  memory.guard %memory:0 %38 32
  %39 = load.32 i32 %memory:0 %38
  local.set %2 %39
  %40 = call %function:45()
  %41 = const i32 0
  %42 = const i32 0
  %43 = const i32 78596
  %44 = int.add %41 %43
  memory.guard %memory:0 %44 8
  store.8 %memory:0 %44 %42
  %45 = local.get %0
  %46 = const i32 16
  %47 = call %function:67(%45, %46)
  br.cond %47 %BB:4 %BB:3

#pred = {%BB:2}
%BB:3:
  %48 = const i32 0
  %49 = local.get %2
  %50 = const i32 79096
  %51 = int.add %48 %50
  memory.guard %memory:0 %51 32
  store.32 %memory:0 %51 %49
  %52 = const i32 0
  %53 = const i32 1
  %54 = const i32 78596
  %55 = int.add %52 %54
  memory.guard %memory:0 %55 8
  store.8 %memory:0 %55 %53
  br %BB:4

#pred = {%BB:3, %BB:2}
%BB:4:
  %56 = const i32 0
  %57 = const i32 1
  %58 = const i32 78592
  %59 = int.add %56 %58
  memory.guard %memory:0 %59 8
  store.8 %memory:0 %59 %57
  br %BB:5

#pred = {%BB:4, %BB:1}
%BB:5:
  %60 = const i32 0
  %61 = const i32 78596
  %62 = int.add %60 %61
  memory.guard %memory:0 %62 8
  %63 = load.8 i32 %memory:0 %62
  %64 = int.eqz %63
  br.cond %64 %BB:10 %BB:6

#pred = {%BB:5}
%BB:6:
  %65 = const i32 78040
  %66 = const i32 32
  %67 = call %function:67(%65, %66)
  %68 = int.eqz %67
  br.cond %68 %BB:10 %BB:7

#pred = {%BB:6}
%BB:7:
  br %BB:8

#pred = {%BB:7, %entry}
%BB:8:
  call %function:43()
  unreachable

#pred = {%BB:0}
%BB:9:
  %70 = const i32 66379
  %71 = const i32 66300
  %72 = const i32 398
  %73 = const i32 66409
  call %function:70(%70, %71, %72, %73)
  unreachable

#pred = {%BB:6, %BB:5}
%BB:10:
  %75 = const i32 0
  %76 = const i32 1
  %77 = const i32 78032
  %78 = int.add %75 %77
  memory.guard %memory:0 %78 32
  store.32 %memory:0 %78 %76
  %79 = local.get %0
  %80 = const i32 16
  %81 = int.add %79 %80
  global.set %global:0%81
  ret

}

function %function:56 : [i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32}
#pred = {}
%entry:
  %2 = const i32 0
  %3 = const i32 78032
  %4 = int.add %2 %3
  memory.guard %memory:0 %4 32
  %5 = load.32 i32 %memory:0 %4
  br.cond %5 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  call %function:55()
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  %6 = local.get (arg)%0
  %7 = local.get (arg)%1
  %8 = cast.u i64 %7
  %9 = const i32 78584
  %10 = const i32 78040
  %11 = call %function:29(%6, %8, %9, %10)
  br.cond %11 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %12 = const i32 0
  %13 = const i32 0
  %14 = const i32 78040
  %15 = int.add %13 %14
  memory.guard %memory:0 %15 8
  %16 = load.8 i32 %memory:0 %15
  %17 = local.get (arg)%1
  %18 = int.xor %16 %17
  %19 = const i32 78040
  %20 = int.add %12 %19
  memory.guard %memory:0 %20 8
  store.8 %memory:0 %20 %18
  %21 = const i32 0
  %22 = const i32 0
  %23 = const i32 78041
  %24 = int.add %22 %23
  memory.guard %memory:0 %24 8
  %25 = load.8 i32 %memory:0 %24
  %26 = local.get (arg)%1
  %27 = const i32 8
  %28 = int.shr.u %26 %27
  %29 = int.xor %25 %28
  %30 = const i32 78041
  %31 = int.add %21 %30
  memory.guard %memory:0 %31 8
  store.8 %memory:0 %31 %29
  %32 = const i32 0
  %33 = const i32 0
  %34 = const i32 78042
  %35 = int.add %33 %34
  memory.guard %memory:0 %35 8
  %36 = load.8 i32 %memory:0 %35
  %37 = local.get (arg)%1
  %38 = const i32 16
  %39 = int.shr.u %37 %38
  %40 = int.xor %36 %39
  %41 = const i32 78042
  %42 = int.add %32 %41
  memory.guard %memory:0 %42 8
  store.8 %memory:0 %42 %40
  %43 = const i32 0
  %44 = const i32 0
  %45 = const i32 78043
  %46 = int.add %44 %45
  memory.guard %memory:0 %46 8
  %47 = load.8 i32 %memory:0 %46
  %48 = local.get (arg)%1
  %49 = const i32 24
  %50 = int.shr.u %48 %49
  %51 = int.xor %47 %50
  %52 = const i32 78043
  %53 = int.add %43 %52
  memory.guard %memory:0 %53 8
  store.8 %memory:0 %53 %51
  %54 = const i32 0
  %55 = const i32 0
  %56 = const i32 78584
  %57 = int.add %55 %56
  memory.guard %memory:0 %57 64
  %58 = load.64 i64 %memory:0 %57
  %59 = const i64 1
  %60 = int.add %58 %59
  %61 = const i32 78584
  %62 = int.add %54 %61
  memory.guard %memory:0 %62 64
  store.64 %memory:0 %62 %60
  %63 = const i32 78040
  %64 = const i32 78040
  %65 = const i64 32
  %66 = const i32 78584
  %67 = const i32 78040
  %68 = call %function:30(%63, %64, %65, %66, %67)
  ret

#pred = {%BB:1}
%BB:3:
  %70 = const i32 66291
  %71 = const i32 66300
  %72 = const i32 572
  %73 = const i32 66442
  call %function:70(%70, %71, %72, %73)
  unreachable

}

function %function:57 : [] -> [i32] {
{%0:i32}
#pred = {}
%entry:
  %1 = const i32 0
  %2 = const i32 78596
  %3 = int.add %1 %2
  memory.guard %memory:0 %3 8
  %4 = load.8 i32 %memory:0 %3
  local.set %0 %4
  %5 = const i32 78032
  %6 = const i32 560
  call %function:46(%5, %6)
  %7 = const i32 0
  %8 = local.get %0
  %9 = const i32 -1
  %10 = int.xor %8 %9
  %11 = const i32 1
  %12 = int.and %10 %11
  %13 = int.sub %7 %12
  ret %13

}

function %function:58 : [i32] -> [i32] {
{(arg)%0:i32}
#pred = {}
%entry:
  %1 = local.get (arg)%0
  %2 = call %function:59(%1)
  ret %2

}

function %function:59 : [i32] -> [i32] {
{(arg)%0:i32, %1:i32, %2:i32, %3:i32, %4:i32, %5:i32, %6:i32, %7:i32, %8:i32, %9:i32, %10:i32, %11:i32}
#pred = {}
%entry:
  %12 = global.get %global:0
  %13 = const i32 16
  %14 = int.sub %12 %13
  local.set %1 %14
  global.set %global:0%14
  %15 = const i32 0
  %16 = const i32 78624
  %17 = int.add %15 %16
  memory.guard %memory:0 %17 32
  %18 = load.32 i32 %memory:0 %17
  br.cond %18 %BB:6 %BB:0

#pred = {%entry}
%BB:0:
  %19 = const i32 0
  %20 = call %function:66(%19)
  %21 = const i32 80732
  %22 = int.sub %20 %21
  local.set %2 %22
  %23 = const i32 89
  %24 = int.lt.u %22 %23
  br.cond %24 %BB:6 %BB:1

#pred = {%BB:0}
%BB:1:
  %25 = const i32 0
  local.set %3 %25
  %26 = const i32 0
  %27 = const i32 79072
  %28 = int.add %26 %27
  memory.guard %memory:0 %28 32
  %29 = load.32 i32 %memory:0 %28
  local.set %4 %29
  br.cond %29 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %30 = const i32 0
  %31 = const i64 -1
  %32 = const i32 79084
  %33 = int.add %30 %32
  memory.guard %memory:0 %33 64
  store.64 %memory:0 %33 %31
  %34 = const i32 0
  %35 = const i64 281474976776192
  %36 = const i32 79076
  %37 = int.add %34 %36
  memory.guard %memory:0 %37 64
  store.64 %memory:0 %37 %35
  %38 = const i32 0
  %39 = local.get %1
  %40 = const i32 8
  %41 = int.add %39 %40
  %42 = const i32 -16
  %43 = int.and %41 %42
  %44 = const i32 1431655768
  %45 = int.xor %43 %44
  local.set %4 %45
  %46 = const i32 79072
  %47 = int.add %38 %46
  memory.guard %memory:0 %47 32
  store.32 %memory:0 %47 %45
  %48 = const i32 0
  %49 = const i32 0
  %50 = const i32 79092
  %51 = int.add %48 %50
  memory.guard %memory:0 %51 32
  store.32 %memory:0 %51 %49
  %52 = const i32 0
  %53 = const i32 0
  %54 = const i32 79044
  %55 = int.add %52 %54
  memory.guard %memory:0 %55 32
  store.32 %memory:0 %55 %53
  br %BB:3

#pred = {%BB:2, %BB:1}
%BB:3:
  %56 = const i32 0
  %57 = local.get %2
  %58 = const i32 79052
  %59 = int.add %56 %58
  memory.guard %memory:0 %59 32
  store.32 %memory:0 %59 %57
  %60 = const i32 0
  %61 = const i32 80732
  %62 = const i32 79048
  %63 = int.add %60 %62
  memory.guard %memory:0 %63 32
  store.32 %memory:0 %63 %61
  %64 = const i32 0
  %65 = const i32 80732
  %66 = const i32 78616
  %67 = int.add %64 %66
  memory.guard %memory:0 %67 32
  store.32 %memory:0 %67 %65
  %68 = const i32 0
  %69 = local.get %4
  %70 = const i32 78636
  %71 = int.add %68 %70
  memory.guard %memory:0 %71 32
  store.32 %memory:0 %71 %69
  %72 = const i32 0
  %73 = const i32 -1
  %74 = const i32 78632
  %75 = int.add %72 %74
  memory.guard %memory:0 %75 32
  store.32 %memory:0 %75 %73
  br %BB:4

#pred = {%BB:4, %BB:3}
%BB:4:
  %76 = local.get %3
  %77 = const i32 78648
  %78 = int.add %76 %77
  %79 = local.get %3
  %80 = const i32 78640
  %81 = int.add %79 %80
  local.set %4 %81
  memory.guard %memory:0 %78 32
  store.32 %memory:0 %78 %81
  %82 = local.get %3
  %83 = const i32 78652
  %84 = int.add %82 %83
  %85 = local.get %4
  memory.guard %memory:0 %84 32
  store.32 %memory:0 %84 %85
  %86 = local.get %3
  %87 = const i32 8
  %88 = int.add %86 %87
  local.set %3 %88
  %89 = const i32 256
  %90 = int.ne %88 %89
  br.cond %90 %BB:4 %BB:5

#pred = {%BB:4}
%BB:5:
  %91 = const i32 0
  %92 = const i32 80740
  %93 = int.sub %91 %92
  %94 = const i32 15
  %95 = int.and %93 %94
  %96 = const i32 0
  %97 = const i32 80740
  %98 = const i32 15
  %99 = int.and %97 %98
  %100 = select %99 %95 %96
  local.set %3 %100
  %101 = const i32 80736
  %102 = int.add %100 %101
  %103 = local.get %2
  %104 = local.get %3
  %105 = int.sub %103 %104
  %106 = const i32 -56
  %107 = int.add %105 %106
  local.set %4 %107
  %108 = const i32 1
  %109 = int.or %107 %108
  memory.guard %memory:0 %102 32
  store.32 %memory:0 %102 %109
  %110 = const i32 0
  %111 = const i32 0
  %112 = const i32 79088
  %113 = int.add %111 %112
  memory.guard %memory:0 %113 32
  %114 = load.32 i32 %memory:0 %113
  %115 = const i32 78628
  %116 = int.add %110 %115
  memory.guard %memory:0 %116 32
  store.32 %memory:0 %116 %114
  %117 = const i32 0
  %118 = local.get %3
  %119 = const i32 80732
  %120 = int.add %118 %119
  %121 = const i32 78624
  %122 = int.add %117 %121
  memory.guard %memory:0 %122 32
  store.32 %memory:0 %122 %120
  %123 = const i32 0
  %124 = local.get %4
  %125 = const i32 78612
  %126 = int.add %123 %125
  memory.guard %memory:0 %126 32
  store.32 %memory:0 %126 %124
  %127 = local.get %2
  %128 = const i32 80680
  %129 = int.add %127 %128
  %130 = const i32 56
  memory.guard %memory:0 %129 32
  store.32 %memory:0 %129 %130
  br %BB:6

#pred = {%BB:5, %BB:0, %entry}
%BB:6:
  %131 = local.get (arg)%0
  %132 = const i32 236
  %133 = int.gt.u %131 %132
  br.cond %133 %BB:40 %BB:7

#pred = {%BB:6}
%BB:7:
  %134 = const i32 0
  %135 = const i32 78600
  %136 = int.add %134 %135
  memory.guard %memory:0 %136 32
  %137 = load.32 i32 %memory:0 %136
  local.set %5 %137
  %138 = const i32 16
  %139 = local.get (arg)%0
  %140 = const i32 19
  %141 = int.add %139 %140
  %142 = const i32 -16
  %143 = int.and %141 %142
  %144 = local.get (arg)%0
  %145 = const i32 11
  %146 = int.lt.u %144 %145
  %147 = select %146 %138 %143
  local.set %2 %147
  %148 = const i32 3
  %149 = int.shr.u %147 %148
  local.set %4 %149
  %150 = int.shr.u %137 %149
  local.set %3 %150
  %151 = const i32 3
  %152 = int.and %150 %151
  %153 = int.eqz %152
  br.cond %153 %BB:12 %BB:8

#pred = {%BB:7}
%BB:8:
  %154 = local.get %3
  %155 = const i32 1
  %156 = int.and %154 %155
  %157 = local.get %4
  %158 = int.or %156 %157
  %159 = const i32 1
  %160 = int.xor %158 %159
  local.set %2 %160
  %161 = const i32 3
  %162 = int.shl %160 %161
  local.set %6 %162
  %163 = const i32 78648
  %164 = int.add %162 %163
  memory.guard %memory:0 %164 32
  %165 = load.32 i32 %memory:0 %164
  local.set %4 %165
  %166 = const i32 8
  %167 = int.add %165 %166
  local.set %3 %167
  %168 = local.get %4
  %169 = const i32 8
  %170 = int.add %168 %169
  memory.guard %memory:0 %170 32
  %171 = load.32 i32 %memory:0 %170
  local.set (arg)%0 %171
  %172 = local.get %6
  %173 = const i32 78640
  %174 = int.add %172 %173
  local.set %6 %174
  %175 = int.ne %171 %174
  br.cond %175 %BB:10 %BB:9

#pred = {%BB:8}
%BB:9:
  %176 = const i32 0
  %177 = local.get %5
  %178 = const i32 -2
  %179 = local.get %2
  %180 = int.rotl %178 %179
  %181 = int.and %177 %180
  %182 = const i32 78600
  %183 = int.add %176 %182
  memory.guard %memory:0 %183 32
  store.32 %memory:0 %183 %181
  br %BB:11

#pred = {%BB:8}
%BB:10:
  %184 = const i32 0
  %185 = const i32 78616
  %186 = int.add %184 %185
  memory.guard %memory:0 %186 32
  %187 = local.get %6
  %188 = local.get (arg)%0
  %189 = const i32 8
  %190 = int.add %187 %189
  memory.guard %memory:0 %190 32
  store.32 %memory:0 %190 %188
  %191 = local.get (arg)%0
  %192 = local.get %6
  %193 = const i32 12
  %194 = int.add %191 %193
  memory.guard %memory:0 %194 32
  store.32 %memory:0 %194 %192
  br %BB:11

#pred = {%BB:10, %BB:9}
%BB:11:
  %195 = local.get %4
  %196 = local.get %2
  %197 = const i32 3
  %198 = int.shl %196 %197
  local.set (arg)%0 %198
  %199 = const i32 3
  %200 = int.or %198 %199
  %201 = const i32 4
  %202 = int.add %195 %201
  memory.guard %memory:0 %202 32
  store.32 %memory:0 %202 %200
  %203 = local.get %4
  %204 = local.get (arg)%0
  %205 = int.add %203 %204
  local.set %4 %205
  %206 = local.get %4
  %207 = const i32 4
  %208 = int.add %206 %207
  memory.guard %memory:0 %208 32
  %209 = load.32 i32 %memory:0 %208
  %210 = const i32 1
  %211 = int.or %209 %210
  %212 = const i32 4
  %213 = int.add %205 %212
  memory.guard %memory:0 %213 32
  store.32 %memory:0 %213 %211
  br %BB:286

#pred = {%BB:7}
%BB:12:
  %214 = local.get %2
  %215 = const i32 0
  %216 = const i32 78608
  %217 = int.add %215 %216
  memory.guard %memory:0 %217 32
  %218 = load.32 i32 %memory:0 %217
  local.set %7 %218
  %219 = int.le.u %214 %218
  br.cond %219 %BB:76 %BB:13

#pred = {%BB:12}
%BB:13:
  %220 = local.get %3
  %221 = int.eqz %220
  br.cond %221 %BB:23 %BB:14

#pred = {%BB:13}
%BB:14:
  %222 = local.get %3
  %223 = local.get %4
  %224 = int.shl %222 %223
  %225 = const i32 2
  %226 = local.get %4
  %227 = int.shl %225 %226
  local.set %3 %227
  %228 = const i32 0
  %229 = local.get %3
  %230 = int.sub %228 %229
  %231 = int.or %227 %230
  %232 = int.and %224 %231
  local.set %3 %232
  %233 = const i32 0
  %234 = local.get %3
  %235 = int.sub %233 %234
  %236 = int.and %232 %235
  %237 = const i32 -1
  %238 = int.add %236 %237
  local.set %3 %238
  %239 = local.get %3
  %240 = const i32 12
  %241 = int.shr.u %239 %240
  %242 = const i32 16
  %243 = int.and %241 %242
  local.set %3 %243
  %244 = int.shr.u %238 %243
  local.set %4 %244
  %245 = const i32 5
  %246 = int.shr.u %244 %245
  %247 = const i32 8
  %248 = int.and %246 %247
  local.set (arg)%0 %248
  %249 = local.get %3
  %250 = int.or %248 %249
  %251 = local.get %4
  %252 = local.get (arg)%0
  %253 = int.shr.u %251 %252
  local.set %3 %253
  %254 = const i32 2
  %255 = int.shr.u %253 %254
  %256 = const i32 4
  %257 = int.and %255 %256
  local.set %4 %257
  %258 = int.or %250 %257
  %259 = local.get %3
  %260 = local.get %4
  %261 = int.shr.u %259 %260
  local.set %3 %261
  %262 = const i32 1
  %263 = int.shr.u %261 %262
  %264 = const i32 2
  %265 = int.and %263 %264
  local.set %4 %265
  %266 = int.or %258 %265
  %267 = local.get %3
  %268 = local.get %4
  %269 = int.shr.u %267 %268
  local.set %3 %269
  %270 = const i32 1
  %271 = int.shr.u %269 %270
  %272 = const i32 1
  %273 = int.and %271 %272
  local.set %4 %273
  %274 = int.or %266 %273
  %275 = local.get %3
  %276 = local.get %4
  %277 = int.shr.u %275 %276
  %278 = int.add %274 %277
  local.set (arg)%0 %278
  %279 = const i32 3
  %280 = int.shl %278 %279
  local.set %6 %280
  %281 = const i32 78648
  %282 = int.add %280 %281
  memory.guard %memory:0 %282 32
  %283 = load.32 i32 %memory:0 %282
  local.set %4 %283
  %284 = const i32 8
  %285 = int.add %283 %284
  memory.guard %memory:0 %285 32
  %286 = load.32 i32 %memory:0 %285
  local.set %3 %286
  %287 = local.get %6
  %288 = const i32 78640
  %289 = int.add %287 %288
  local.set %6 %289
  %290 = int.ne %286 %289
  br.cond %290 %BB:16 %BB:15

#pred = {%BB:14}
%BB:15:
  %291 = const i32 0
  %292 = local.get %5
  %293 = const i32 -2
  %294 = local.get (arg)%0
  %295 = int.rotl %293 %294
  %296 = int.and %292 %295
  local.set %5 %296
  %297 = const i32 78600
  %298 = int.add %291 %297
  memory.guard %memory:0 %298 32
  store.32 %memory:0 %298 %296
  br %BB:17

#pred = {%BB:14}
%BB:16:
  %299 = const i32 0
  %300 = const i32 78616
  %301 = int.add %299 %300
  memory.guard %memory:0 %301 32
  %302 = local.get %6
  %303 = local.get %3
  %304 = const i32 8
  %305 = int.add %302 %304
  memory.guard %memory:0 %305 32
  store.32 %memory:0 %305 %303
  %306 = local.get %3
  %307 = local.get %6
  %308 = const i32 12
  %309 = int.add %306 %308
  memory.guard %memory:0 %309 32
  store.32 %memory:0 %309 %307
  br %BB:17

#pred = {%BB:16, %BB:15}
%BB:17:
  %310 = local.get %4
  %311 = const i32 8
  %312 = int.add %310 %311
  local.set %3 %312
  %313 = local.get %4
  %314 = local.get %2
  %315 = const i32 3
  %316 = int.or %314 %315
  %317 = const i32 4
  %318 = int.add %313 %317
  memory.guard %memory:0 %318 32
  store.32 %memory:0 %318 %316
  %319 = local.get %4
  %320 = local.get (arg)%0
  %321 = const i32 3
  %322 = int.shl %320 %321
  local.set (arg)%0 %322
  %323 = int.add %319 %322
  %324 = local.get (arg)%0
  %325 = local.get %2
  %326 = int.sub %324 %325
  local.set (arg)%0 %326
  memory.guard %memory:0 %323 32
  store.32 %memory:0 %323 %326
  %327 = local.get %4
  %328 = local.get %2
  %329 = int.add %327 %328
  local.set %6 %329
  %330 = local.get (arg)%0
  %331 = const i32 1
  %332 = int.or %330 %331
  %333 = const i32 4
  %334 = int.add %329 %333
  memory.guard %memory:0 %334 32
  store.32 %memory:0 %334 %332
  %335 = local.get %7
  %336 = int.eqz %335
  br.cond %336 %BB:22 %BB:18

#pred = {%BB:17}
%BB:18:
  %337 = local.get %7
  %338 = const i32 3
  %339 = int.shr.u %337 %338
  local.set %8 %339
  %340 = const i32 3
  %341 = int.shl %339 %340
  %342 = const i32 78640
  %343 = int.add %341 %342
  local.set %2 %343
  %344 = const i32 0
  %345 = const i32 78620
  %346 = int.add %344 %345
  memory.guard %memory:0 %346 32
  %347 = load.32 i32 %memory:0 %346
  local.set %4 %347
  %348 = local.get %5
  %349 = const i32 1
  %350 = local.get %8
  %351 = int.shl %349 %350
  local.set %8 %351
  %352 = int.and %348 %351
  br.cond %352 %BB:20 %BB:19

#pred = {%BB:18}
%BB:19:
  %353 = const i32 0
  %354 = local.get %5
  %355 = local.get %8
  %356 = int.or %354 %355
  %357 = const i32 78600
  %358 = int.add %353 %357
  memory.guard %memory:0 %358 32
  store.32 %memory:0 %358 %356
  %359 = local.get %2
  local.set %8 %359
  br %BB:21

#pred = {%BB:18}
%BB:20:
  %360 = local.get %2
  %361 = const i32 8
  %362 = int.add %360 %361
  memory.guard %memory:0 %362 32
  %363 = load.32 i32 %memory:0 %362
  local.set %8 %363
  br %BB:21

#pred = {%BB:20, %BB:19}
%BB:21:
  %364 = local.get %8
  %365 = local.get %4
  %366 = const i32 12
  %367 = int.add %364 %366
  memory.guard %memory:0 %367 32
  store.32 %memory:0 %367 %365
  %368 = local.get %2
  %369 = local.get %4
  %370 = const i32 8
  %371 = int.add %368 %370
  memory.guard %memory:0 %371 32
  store.32 %memory:0 %371 %369
  %372 = local.get %4
  %373 = local.get %2
  %374 = const i32 12
  %375 = int.add %372 %374
  memory.guard %memory:0 %375 32
  store.32 %memory:0 %375 %373
  %376 = local.get %4
  %377 = local.get %8
  %378 = const i32 8
  %379 = int.add %376 %378
  memory.guard %memory:0 %379 32
  store.32 %memory:0 %379 %377
  br %BB:22

#pred = {%BB:21, %BB:17}
%BB:22:
  %380 = const i32 0
  %381 = local.get %6
  %382 = const i32 78620
  %383 = int.add %380 %382
  memory.guard %memory:0 %383 32
  store.32 %memory:0 %383 %381
  %384 = const i32 0
  %385 = local.get (arg)%0
  %386 = const i32 78608
  %387 = int.add %384 %386
  memory.guard %memory:0 %387 32
  store.32 %memory:0 %387 %385
  br %BB:286

#pred = {%BB:13}
%BB:23:
  %388 = const i32 0
  %389 = const i32 78604
  %390 = int.add %388 %389
  memory.guard %memory:0 %390 32
  %391 = load.32 i32 %memory:0 %390
  local.set %9 %391
  %392 = int.eqz %391
  br.cond %392 %BB:76 %BB:24

#pred = {%BB:23}
%BB:24:
  %393 = local.get %9
  %394 = const i32 0
  %395 = local.get %9
  %396 = int.sub %394 %395
  %397 = int.and %393 %396
  %398 = const i32 -1
  %399 = int.add %397 %398
  local.set %3 %399
  %400 = local.get %3
  %401 = const i32 12
  %402 = int.shr.u %400 %401
  %403 = const i32 16
  %404 = int.and %402 %403
  local.set %3 %404
  %405 = int.shr.u %399 %404
  local.set %4 %405
  %406 = const i32 5
  %407 = int.shr.u %405 %406
  %408 = const i32 8
  %409 = int.and %407 %408
  local.set (arg)%0 %409
  %410 = local.get %3
  %411 = int.or %409 %410
  %412 = local.get %4
  %413 = local.get (arg)%0
  %414 = int.shr.u %412 %413
  local.set %3 %414
  %415 = const i32 2
  %416 = int.shr.u %414 %415
  %417 = const i32 4
  %418 = int.and %416 %417
  local.set %4 %418
  %419 = int.or %411 %418
  %420 = local.get %3
  %421 = local.get %4
  %422 = int.shr.u %420 %421
  local.set %3 %422
  %423 = const i32 1
  %424 = int.shr.u %422 %423
  %425 = const i32 2
  %426 = int.and %424 %425
  local.set %4 %426
  %427 = int.or %419 %426
  %428 = local.get %3
  %429 = local.get %4
  %430 = int.shr.u %428 %429
  local.set %3 %430
  %431 = const i32 1
  %432 = int.shr.u %430 %431
  %433 = const i32 1
  %434 = int.and %432 %433
  local.set %4 %434
  %435 = int.or %427 %434
  %436 = local.get %3
  %437 = local.get %4
  %438 = int.shr.u %436 %437
  %439 = int.add %435 %438
  %440 = const i32 2
  %441 = int.shl %439 %440
  %442 = const i32 78904
  %443 = int.add %441 %442
  memory.guard %memory:0 %443 32
  %444 = load.32 i32 %memory:0 %443
  local.set %6 %444
  %445 = const i32 4
  %446 = int.add %444 %445
  memory.guard %memory:0 %446 32
  %447 = load.32 i32 %memory:0 %446
  %448 = const i32 -8
  %449 = int.and %447 %448
  %450 = local.get %2
  %451 = int.sub %449 %450
  local.set %4 %451
  %452 = local.get %6
  local.set (arg)%0 %452
  br %BB:25

#pred = {%BB:28, %BB:24}
%BB:25:
  %453 = local.get (arg)%0
  %454 = const i32 16
  %455 = int.add %453 %454
  memory.guard %memory:0 %455 32
  %456 = load.32 i32 %memory:0 %455
  local.set %3 %456
  br.cond %456 %BB:28 %BB:26

#pred = {%BB:25}
%BB:26:
  %457 = local.get (arg)%0
  %458 = const i32 20
  %459 = int.add %457 %458
  memory.guard %memory:0 %459 32
  %460 = load.32 i32 %memory:0 %459
  local.set %3 %460
  %461 = int.eqz %460
  br.cond %461 %BB:29 %BB:27

#pred = {%BB:26}
%BB:27:
  br %BB:28

#pred = {%BB:27, %BB:25}
%BB:28:
  %462 = local.get %3
  %463 = const i32 4
  %464 = int.add %462 %463
  memory.guard %memory:0 %464 32
  %465 = load.32 i32 %memory:0 %464
  %466 = const i32 -8
  %467 = int.and %465 %466
  %468 = local.get %2
  %469 = int.sub %467 %468
  local.set (arg)%0 %469
  %470 = local.get %4
  %471 = local.get (arg)%0
  %472 = local.get %4
  %473 = int.lt.u %471 %472
  local.set (arg)%0 %473
  %474 = select %473 %469 %470
  local.set %4 %474
  %475 = local.get %3
  %476 = local.get %6
  %477 = local.get (arg)%0
  %478 = select %477 %475 %476
  local.set %6 %478
  %479 = local.get %3
  local.set (arg)%0 %479
  br %BB:25

#pred = {%BB:26}
%BB:29:
  %480 = local.get %6
  %481 = const i32 24
  %482 = int.add %480 %481
  memory.guard %memory:0 %482 32
  %483 = load.32 i32 %memory:0 %482
  local.set %10 %483
  %484 = local.get %6
  %485 = const i32 12
  %486 = int.add %484 %485
  memory.guard %memory:0 %486 32
  %487 = load.32 i32 %memory:0 %486
  local.set %8 %487
  %488 = local.get %6
  %489 = int.eq %487 %488
  br.cond %489 %BB:33 %BB:30

#pred = {%BB:29}
%BB:30:
  %490 = const i32 0
  %491 = const i32 78616
  %492 = int.add %490 %491
  memory.guard %memory:0 %492 32
  %493 = load.32 i32 %memory:0 %492
  %494 = local.get %6
  %495 = const i32 8
  %496 = int.add %494 %495
  memory.guard %memory:0 %496 32
  %497 = load.32 i32 %memory:0 %496
  local.set %3 %497
  %498 = int.gt.u %493 %497
  br.cond %498 %BB:32 %BB:31

#pred = {%BB:30}
%BB:31:
  %499 = local.get %3
  %500 = const i32 12
  %501 = int.add %499 %500
  memory.guard %memory:0 %501 32
  br %BB:32

#pred = {%BB:31, %BB:30}
%BB:32:
  %502 = local.get %8
  %503 = local.get %3
  %504 = const i32 8
  %505 = int.add %502 %504
  memory.guard %memory:0 %505 32
  store.32 %memory:0 %505 %503
  %506 = local.get %3
  %507 = local.get %8
  %508 = const i32 12
  %509 = int.add %506 %508
  memory.guard %memory:0 %509 32
  store.32 %memory:0 %509 %507
  br %BB:267

#pred = {%BB:29}
%BB:33:
  %510 = local.get %6
  %511 = const i32 20
  %512 = int.add %510 %511
  local.set (arg)%0 %512
  memory.guard %memory:0 %512 32
  %513 = load.32 i32 %memory:0 %512
  local.set %3 %513
  br.cond %513 %BB:36 %BB:34

#pred = {%BB:33}
%BB:34:
  %514 = local.get %6
  %515 = const i32 16
  %516 = int.add %514 %515
  memory.guard %memory:0 %516 32
  %517 = load.32 i32 %memory:0 %516
  local.set %3 %517
  %518 = int.eqz %517
  br.cond %518 %BB:124 %BB:35

#pred = {%BB:34}
%BB:35:
  %519 = local.get %6
  %520 = const i32 16
  %521 = int.add %519 %520
  local.set (arg)%0 %521
  br %BB:36

#pred = {%BB:35, %BB:33}
%BB:36:
  br %BB:37

#pred = {%BB:38, %BB:37, %BB:36}
%BB:37:
  %522 = local.get (arg)%0
  local.set %11 %522
  %523 = local.get %3
  local.set %8 %523
  %524 = const i32 20
  %525 = int.add %523 %524
  local.set (arg)%0 %525
  memory.guard %memory:0 %525 32
  %526 = load.32 i32 %memory:0 %525
  local.set %3 %526
  br.cond %526 %BB:37 %BB:38

#pred = {%BB:37}
%BB:38:
  %527 = local.get %8
  %528 = const i32 16
  %529 = int.add %527 %528
  local.set (arg)%0 %529
  %530 = local.get %8
  %531 = const i32 16
  %532 = int.add %530 %531
  memory.guard %memory:0 %532 32
  %533 = load.32 i32 %memory:0 %532
  local.set %3 %533
  br.cond %533 %BB:37 %BB:39

#pred = {%BB:38}
%BB:39:
  %534 = local.get %11
  %535 = const i32 0
  memory.guard %memory:0 %534 32
  store.32 %memory:0 %534 %535
  br %BB:267

#pred = {%BB:6}
%BB:40:
  %536 = const i32 -1
  local.set %2 %536
  %537 = local.get (arg)%0
  %538 = const i32 -65
  %539 = int.gt.u %537 %538
  br.cond %539 %BB:76 %BB:41

#pred = {%BB:40}
%BB:41:
  %540 = local.get (arg)%0
  %541 = const i32 19
  %542 = int.add %540 %541
  local.set %3 %542
  %543 = const i32 -16
  %544 = int.and %542 %543
  local.set %2 %544
  %545 = const i32 0
  %546 = const i32 78604
  %547 = int.add %545 %546
  memory.guard %memory:0 %547 32
  %548 = load.32 i32 %memory:0 %547
  local.set %7 %548
  %549 = int.eqz %548
  br.cond %549 %BB:76 %BB:42

#pred = {%BB:41}
%BB:42:
  %550 = const i32 0
  local.set %11 %550
  %551 = local.get %3
  %552 = const i32 8
  %553 = int.shr.u %551 %552
  local.set %3 %553
  %554 = int.eqz %553
  br.cond %554 %BB:45 %BB:43

#pred = {%BB:42}
%BB:43:
  %555 = const i32 31
  local.set %11 %555
  %556 = local.get %2
  %557 = const i32 16777215
  %558 = int.gt.u %556 %557
  br.cond %558 %BB:45 %BB:44

#pred = {%BB:43}
%BB:44:
  %559 = local.get %3
  %560 = local.get %3
  %561 = const i32 1048320
  %562 = int.add %560 %561
  %563 = const i32 16
  %564 = int.shr.u %562 %563
  %565 = const i32 8
  %566 = int.and %564 %565
  local.set %4 %566
  %567 = int.shl %559 %566
  local.set %3 %567
  %568 = local.get %3
  %569 = const i32 520192
  %570 = int.add %568 %569
  %571 = const i32 16
  %572 = int.shr.u %570 %571
  %573 = const i32 4
  %574 = int.and %572 %573
  local.set %3 %574
  %575 = int.shl %567 %574
  local.set (arg)%0 %575
  %576 = local.get (arg)%0
  %577 = const i32 245760
  %578 = int.add %576 %577
  %579 = const i32 16
  %580 = int.shr.u %578 %579
  %581 = const i32 2
  %582 = int.and %580 %581
  local.set (arg)%0 %582
  %583 = int.shl %575 %582
  %584 = const i32 15
  %585 = int.shr.u %583 %584
  %586 = local.get %3
  %587 = local.get %4
  %588 = int.or %586 %587
  %589 = local.get (arg)%0
  %590 = int.or %588 %589
  %591 = int.sub %585 %590
  local.set %3 %591
  %592 = const i32 1
  %593 = int.shl %591 %592
  %594 = local.get %2
  %595 = local.get %3
  %596 = const i32 21
  %597 = int.add %595 %596
  %598 = int.shr.u %594 %597
  %599 = const i32 1
  %600 = int.and %598 %599
  %601 = int.or %593 %600
  %602 = const i32 28
  %603 = int.add %601 %602
  local.set %11 %603
  br %BB:45

#pred = {%BB:44, %BB:43, %BB:42}
%BB:45:
  %604 = const i32 0
  %605 = local.get %2
  %606 = int.sub %604 %605
  local.set (arg)%0 %606
  %607 = local.get %11
  %608 = const i32 2
  %609 = int.shl %607 %608
  %610 = const i32 78904
  %611 = int.add %609 %610
  memory.guard %memory:0 %611 32
  %612 = load.32 i32 %memory:0 %611
  local.set %4 %612
  br.cond %612 %BB:47 %BB:46

#pred = {%BB:45}
%BB:46:
  %613 = const i32 0
  local.set %3 %613
  %614 = const i32 0
  local.set %8 %614
  br %BB:53

#pred = {%BB:45}
%BB:47:
  %615 = local.get %2
  %616 = const i32 0
  %617 = const i32 25
  %618 = local.get %11
  %619 = const i32 1
  %620 = int.shr.u %618 %619
  %621 = int.sub %617 %620
  %622 = local.get %11
  %623 = const i32 31
  %624 = int.eq %622 %623
  %625 = select %624 %616 %621
  %626 = int.shl %615 %625
  local.set %6 %626
  %627 = const i32 0
  local.set %3 %627
  %628 = const i32 0
  local.set %8 %628
  br %BB:48

#pred = {%BB:51, %BB:47}
%BB:48:
  %629 = local.get %4
  %630 = const i32 4
  %631 = int.add %629 %630
  memory.guard %memory:0 %631 32
  %632 = load.32 i32 %memory:0 %631
  %633 = const i32 -8
  %634 = int.and %632 %633
  %635 = local.get %2
  %636 = int.sub %634 %635
  local.set %5 %636
  %637 = local.get (arg)%0
  %638 = int.ge.u %636 %637
  br.cond %638 %BB:51 %BB:49

#pred = {%BB:48}
%BB:49:
  %639 = local.get %5
  local.set (arg)%0 %639
  %640 = local.get %4
  local.set %8 %640
  %641 = local.get %5
  br.cond %641 %BB:51 %BB:50

#pred = {%BB:49}
%BB:50:
  %642 = const i32 0
  local.set (arg)%0 %642
  %643 = local.get %4
  local.set %8 %643
  %644 = local.get %4
  local.set %3 %644
  br %BB:58

#pred = {%BB:49, %BB:48}
%BB:51:
  %645 = local.get %3
  %646 = local.get %4
  %647 = const i32 20
  %648 = int.add %646 %647
  memory.guard %memory:0 %648 32
  %649 = load.32 i32 %memory:0 %648
  local.set %5 %649
  %650 = local.get %5
  %651 = local.get %4
  %652 = local.get %6
  %653 = const i32 29
  %654 = int.shr.u %652 %653
  %655 = const i32 4
  %656 = int.and %654 %655
  %657 = int.add %651 %656
  %658 = const i32 16
  %659 = int.add %657 %658
  memory.guard %memory:0 %659 32
  %660 = load.32 i32 %memory:0 %659
  local.set %4 %660
  %661 = int.eq %650 %660
  %662 = select %661 %645 %649
  %663 = local.get %3
  %664 = local.get %5
  %665 = select %664 %662 %663
  local.set %3 %665
  %666 = local.get %6
  %667 = local.get %4
  %668 = const i32 0
  %669 = int.ne %667 %668
  %670 = int.shl %666 %669
  local.set %6 %670
  %671 = local.get %4
  br.cond %671 %BB:48 %BB:52

#pred = {%BB:51}
%BB:52:
  br %BB:53

#pred = {%BB:52, %BB:46}
%BB:53:
  %672 = local.get %3
  %673 = local.get %8
  %674 = int.or %672 %673
  br.cond %674 %BB:56 %BB:54

#pred = {%BB:53}
%BB:54:
  %675 = const i32 2
  %676 = local.get %11
  %677 = int.shl %675 %676
  local.set %3 %677
  %678 = const i32 0
  %679 = local.get %3
  %680 = int.sub %678 %679
  %681 = int.or %677 %680
  %682 = local.get %7
  %683 = int.and %681 %682
  local.set %3 %683
  %684 = int.eqz %683
  br.cond %684 %BB:76 %BB:55

#pred = {%BB:54}
%BB:55:
  %685 = local.get %3
  %686 = const i32 0
  %687 = local.get %3
  %688 = int.sub %686 %687
  %689 = int.and %685 %688
  %690 = const i32 -1
  %691 = int.add %689 %690
  local.set %3 %691
  %692 = local.get %3
  %693 = const i32 12
  %694 = int.shr.u %692 %693
  %695 = const i32 16
  %696 = int.and %694 %695
  local.set %3 %696
  %697 = int.shr.u %691 %696
  local.set %4 %697
  %698 = const i32 5
  %699 = int.shr.u %697 %698
  %700 = const i32 8
  %701 = int.and %699 %700
  local.set %6 %701
  %702 = local.get %3
  %703 = int.or %701 %702
  %704 = local.get %4
  %705 = local.get %6
  %706 = int.shr.u %704 %705
  local.set %3 %706
  %707 = const i32 2
  %708 = int.shr.u %706 %707
  %709 = const i32 4
  %710 = int.and %708 %709
  local.set %4 %710
  %711 = int.or %703 %710
  %712 = local.get %3
  %713 = local.get %4
  %714 = int.shr.u %712 %713
  local.set %3 %714
  %715 = const i32 1
  %716 = int.shr.u %714 %715
  %717 = const i32 2
  %718 = int.and %716 %717
  local.set %4 %718
  %719 = int.or %711 %718
  %720 = local.get %3
  %721 = local.get %4
  %722 = int.shr.u %720 %721
  local.set %3 %722
  %723 = const i32 1
  %724 = int.shr.u %722 %723
  %725 = const i32 1
  %726 = int.and %724 %725
  local.set %4 %726
  %727 = int.or %719 %726
  %728 = local.get %3
  %729 = local.get %4
  %730 = int.shr.u %728 %729
  %731 = int.add %727 %730
  %732 = const i32 2
  %733 = int.shl %731 %732
  %734 = const i32 78904
  %735 = int.add %733 %734
  memory.guard %memory:0 %735 32
  %736 = load.32 i32 %memory:0 %735
  local.set %3 %736
  br %BB:56

#pred = {%BB:55, %BB:53}
%BB:56:
  %737 = local.get %3
  %738 = int.eqz %737
  br.cond %738 %BB:63 %BB:57

#pred = {%BB:56}
%BB:57:
  br %BB:58

#pred = {%BB:57, %BB:50}
%BB:58:
  br %BB:59

#pred = {%BB:61, %BB:58}
%BB:59:
  %739 = local.get %3
  %740 = const i32 4
  %741 = int.add %739 %740
  memory.guard %memory:0 %741 32
  %742 = load.32 i32 %memory:0 %741
  %743 = const i32 -8
  %744 = int.and %742 %743
  %745 = local.get %2
  %746 = int.sub %744 %745
  local.set %5 %746
  %747 = local.get (arg)%0
  %748 = int.lt.u %746 %747
  local.set %6 %748
  %749 = local.get %3
  %750 = const i32 16
  %751 = int.add %749 %750
  memory.guard %memory:0 %751 32
  %752 = load.32 i32 %memory:0 %751
  local.set %4 %752
  br.cond %752 %BB:61 %BB:60

#pred = {%BB:59}
%BB:60:
  %753 = local.get %3
  %754 = const i32 20
  %755 = int.add %753 %754
  memory.guard %memory:0 %755 32
  %756 = load.32 i32 %memory:0 %755
  local.set %4 %756
  br %BB:61

#pred = {%BB:60, %BB:59}
%BB:61:
  %757 = local.get %5
  %758 = local.get (arg)%0
  %759 = local.get %6
  %760 = select %759 %757 %758
  local.set (arg)%0 %760
  %761 = local.get %3
  %762 = local.get %8
  %763 = local.get %6
  %764 = select %763 %761 %762
  local.set %8 %764
  %765 = local.get %4
  local.set %3 %765
  %766 = local.get %4
  br.cond %766 %BB:59 %BB:62

#pred = {%BB:61}
%BB:62:
  br %BB:63

#pred = {%BB:62, %BB:56}
%BB:63:
  %767 = local.get %8
  %768 = int.eqz %767
  br.cond %768 %BB:76 %BB:64

#pred = {%BB:63}
%BB:64:
  %769 = local.get (arg)%0
  %770 = const i32 0
  %771 = const i32 78608
  %772 = int.add %770 %771
  memory.guard %memory:0 %772 32
  %773 = load.32 i32 %memory:0 %772
  %774 = local.get %2
  %775 = int.sub %773 %774
  %776 = int.ge.u %769 %775
  br.cond %776 %BB:76 %BB:65

#pred = {%BB:64}
%BB:65:
  %777 = local.get %8
  %778 = const i32 24
  %779 = int.add %777 %778
  memory.guard %memory:0 %779 32
  %780 = load.32 i32 %memory:0 %779
  local.set %11 %780
  %781 = local.get %8
  %782 = const i32 12
  %783 = int.add %781 %782
  memory.guard %memory:0 %783 32
  %784 = load.32 i32 %memory:0 %783
  local.set %6 %784
  %785 = local.get %8
  %786 = int.eq %784 %785
  br.cond %786 %BB:69 %BB:66

#pred = {%BB:65}
%BB:66:
  %787 = const i32 0
  %788 = const i32 78616
  %789 = int.add %787 %788
  memory.guard %memory:0 %789 32
  %790 = load.32 i32 %memory:0 %789
  %791 = local.get %8
  %792 = const i32 8
  %793 = int.add %791 %792
  memory.guard %memory:0 %793 32
  %794 = load.32 i32 %memory:0 %793
  local.set %3 %794
  %795 = int.gt.u %790 %794
  br.cond %795 %BB:68 %BB:67

#pred = {%BB:66}
%BB:67:
  %796 = local.get %3
  %797 = const i32 12
  %798 = int.add %796 %797
  memory.guard %memory:0 %798 32
  br %BB:68

#pred = {%BB:67, %BB:66}
%BB:68:
  %799 = local.get %6
  %800 = local.get %3
  %801 = const i32 8
  %802 = int.add %799 %801
  memory.guard %memory:0 %802 32
  store.32 %memory:0 %802 %800
  %803 = local.get %3
  %804 = local.get %6
  %805 = const i32 12
  %806 = int.add %803 %805
  memory.guard %memory:0 %806 32
  store.32 %memory:0 %806 %804
  br %BB:238

#pred = {%BB:65}
%BB:69:
  %807 = local.get %8
  %808 = const i32 20
  %809 = int.add %807 %808
  local.set %4 %809
  memory.guard %memory:0 %809 32
  %810 = load.32 i32 %memory:0 %809
  local.set %3 %810
  br.cond %810 %BB:72 %BB:70

#pred = {%BB:69}
%BB:70:
  %811 = local.get %8
  %812 = const i32 16
  %813 = int.add %811 %812
  memory.guard %memory:0 %813 32
  %814 = load.32 i32 %memory:0 %813
  local.set %3 %814
  %815 = int.eqz %814
  br.cond %815 %BB:125 %BB:71

#pred = {%BB:70}
%BB:71:
  %816 = local.get %8
  %817 = const i32 16
  %818 = int.add %816 %817
  local.set %4 %818
  br %BB:72

#pred = {%BB:71, %BB:69}
%BB:72:
  br %BB:73

#pred = {%BB:74, %BB:73, %BB:72}
%BB:73:
  %819 = local.get %4
  local.set %5 %819
  %820 = local.get %3
  local.set %6 %820
  %821 = const i32 20
  %822 = int.add %820 %821
  local.set %4 %822
  memory.guard %memory:0 %822 32
  %823 = load.32 i32 %memory:0 %822
  local.set %3 %823
  br.cond %823 %BB:73 %BB:74

#pred = {%BB:73}
%BB:74:
  %824 = local.get %6
  %825 = const i32 16
  %826 = int.add %824 %825
  local.set %4 %826
  %827 = local.get %6
  %828 = const i32 16
  %829 = int.add %827 %828
  memory.guard %memory:0 %829 32
  %830 = load.32 i32 %memory:0 %829
  local.set %3 %830
  br.cond %830 %BB:73 %BB:75

#pred = {%BB:74}
%BB:75:
  %831 = local.get %5
  %832 = const i32 0
  memory.guard %memory:0 %831 32
  store.32 %memory:0 %831 %832
  br %BB:238

#pred = {%BB:63, %BB:41, %BB:12, %BB:54, %BB:23, %BB:64, %BB:40}
%BB:76:
  %833 = const i32 0
  %834 = const i32 78608
  %835 = int.add %833 %834
  memory.guard %memory:0 %835 32
  %836 = load.32 i32 %memory:0 %835
  local.set %3 %836
  %837 = local.get %2
  %838 = int.lt.u %836 %837
  br.cond %838 %BB:81 %BB:77

#pred = {%BB:76}
%BB:77:
  %839 = const i32 0
  %840 = const i32 78620
  %841 = int.add %839 %840
  memory.guard %memory:0 %841 32
  %842 = load.32 i32 %memory:0 %841
  local.set %4 %842
  %843 = local.get %3
  %844 = local.get %2
  %845 = int.sub %843 %844
  local.set (arg)%0 %845
  %846 = const i32 16
  %847 = int.lt.u %845 %846
  br.cond %847 %BB:79 %BB:78

#pred = {%BB:77}
%BB:78:
  %848 = local.get %4
  %849 = local.get %2
  %850 = int.add %848 %849
  local.set %6 %850
  %851 = local.get (arg)%0
  %852 = const i32 1
  %853 = int.or %851 %852
  %854 = const i32 4
  %855 = int.add %850 %854
  memory.guard %memory:0 %855 32
  store.32 %memory:0 %855 %853
  %856 = const i32 0
  %857 = local.get (arg)%0
  %858 = const i32 78608
  %859 = int.add %856 %858
  memory.guard %memory:0 %859 32
  store.32 %memory:0 %859 %857
  %860 = const i32 0
  %861 = local.get %6
  %862 = const i32 78620
  %863 = int.add %860 %862
  memory.guard %memory:0 %863 32
  store.32 %memory:0 %863 %861
  %864 = local.get %4
  %865 = local.get %3
  %866 = int.add %864 %865
  %867 = local.get (arg)%0
  memory.guard %memory:0 %866 32
  store.32 %memory:0 %866 %867
  %868 = local.get %4
  %869 = local.get %2
  %870 = const i32 3
  %871 = int.or %869 %870
  %872 = const i32 4
  %873 = int.add %868 %872
  memory.guard %memory:0 %873 32
  store.32 %memory:0 %873 %871
  br %BB:80

#pred = {%BB:77}
%BB:79:
  %874 = local.get %4
  %875 = local.get %3
  %876 = const i32 3
  %877 = int.or %875 %876
  %878 = const i32 4
  %879 = int.add %874 %878
  memory.guard %memory:0 %879 32
  store.32 %memory:0 %879 %877
  %880 = local.get %4
  %881 = local.get %3
  %882 = int.add %880 %881
  local.set %3 %882
  %883 = local.get %3
  %884 = const i32 4
  %885 = int.add %883 %884
  memory.guard %memory:0 %885 32
  %886 = load.32 i32 %memory:0 %885
  %887 = const i32 1
  %888 = int.or %886 %887
  %889 = const i32 4
  %890 = int.add %882 %889
  memory.guard %memory:0 %890 32
  store.32 %memory:0 %890 %888
  %891 = const i32 0
  %892 = const i32 0
  %893 = const i32 78620
  %894 = int.add %891 %893
  memory.guard %memory:0 %894 32
  store.32 %memory:0 %894 %892
  %895 = const i32 0
  %896 = const i32 0
  %897 = const i32 78608
  %898 = int.add %895 %897
  memory.guard %memory:0 %898 32
  store.32 %memory:0 %898 %896
  br %BB:80

#pred = {%BB:79, %BB:78}
%BB:80:
  %899 = local.get %4
  %900 = const i32 8
  %901 = int.add %899 %900
  local.set %3 %901
  br %BB:286

#pred = {%BB:76}
%BB:81:
  %902 = const i32 0
  %903 = const i32 78612
  %904 = int.add %902 %903
  memory.guard %memory:0 %904 32
  %905 = load.32 i32 %memory:0 %904
  local.set %6 %905
  %906 = local.get %2
  %907 = int.le.u %905 %906
  br.cond %907 %BB:83 %BB:82

#pred = {%BB:81}
%BB:82:
  %908 = const i32 0
  %909 = const i32 78624
  %910 = int.add %908 %909
  memory.guard %memory:0 %910 32
  %911 = load.32 i32 %memory:0 %910
  local.set %3 %911
  %912 = local.get %2
  %913 = int.add %911 %912
  local.set %4 %913
  %914 = local.get %6
  %915 = local.get %2
  %916 = int.sub %914 %915
  local.set (arg)%0 %916
  %917 = const i32 1
  %918 = int.or %916 %917
  %919 = const i32 4
  %920 = int.add %913 %919
  memory.guard %memory:0 %920 32
  store.32 %memory:0 %920 %918
  %921 = const i32 0
  %922 = local.get (arg)%0
  %923 = const i32 78612
  %924 = int.add %921 %923
  memory.guard %memory:0 %924 32
  store.32 %memory:0 %924 %922
  %925 = const i32 0
  %926 = local.get %4
  %927 = const i32 78624
  %928 = int.add %925 %927
  memory.guard %memory:0 %928 32
  store.32 %memory:0 %928 %926
  %929 = local.get %3
  %930 = local.get %2
  %931 = const i32 3
  %932 = int.or %930 %931
  %933 = const i32 4
  %934 = int.add %929 %933
  memory.guard %memory:0 %934 32
  store.32 %memory:0 %934 %932
  %935 = local.get %3
  %936 = const i32 8
  %937 = int.add %935 %936
  local.set %3 %937
  br %BB:286

#pred = {%BB:81}
%BB:83:
  %938 = const i32 0
  %939 = const i32 79072
  %940 = int.add %938 %939
  memory.guard %memory:0 %940 32
  %941 = load.32 i32 %memory:0 %940
  %942 = int.eqz %941
  br.cond %942 %BB:85 %BB:84

#pred = {%BB:83}
%BB:84:
  %943 = const i32 0
  %944 = const i32 79080
  %945 = int.add %943 %944
  memory.guard %memory:0 %945 32
  %946 = load.32 i32 %memory:0 %945
  local.set %4 %946
  br %BB:86

#pred = {%BB:83}
%BB:85:
  %947 = const i32 0
  %948 = const i64 -1
  %949 = const i32 79084
  %950 = int.add %947 %949
  memory.guard %memory:0 %950 64
  store.64 %memory:0 %950 %948
  %951 = const i32 0
  %952 = const i64 281474976776192
  %953 = const i32 79076
  %954 = int.add %951 %953
  memory.guard %memory:0 %954 64
  store.64 %memory:0 %954 %952
  %955 = const i32 0
  %956 = local.get %1
  %957 = const i32 12
  %958 = int.add %956 %957
  %959 = const i32 -16
  %960 = int.and %958 %959
  %961 = const i32 1431655768
  %962 = int.xor %960 %961
  %963 = const i32 79072
  %964 = int.add %955 %963
  memory.guard %memory:0 %964 32
  store.32 %memory:0 %964 %962
  %965 = const i32 0
  %966 = const i32 0
  %967 = const i32 79092
  %968 = int.add %965 %967
  memory.guard %memory:0 %968 32
  store.32 %memory:0 %968 %966
  %969 = const i32 0
  %970 = const i32 0
  %971 = const i32 79044
  %972 = int.add %969 %971
  memory.guard %memory:0 %972 32
  store.32 %memory:0 %972 %970
  %973 = const i32 65536
  local.set %4 %973
  br %BB:86

#pred = {%BB:85, %BB:84}
%BB:86:
  %974 = const i32 0
  local.set %3 %974
  %975 = local.get %4
  %976 = local.get %2
  %977 = const i32 71
  %978 = int.add %976 %977
  local.set %7 %978
  %979 = int.add %975 %978
  local.set %5 %979
  %980 = const i32 0
  %981 = local.get %4
  %982 = int.sub %980 %981
  local.set %11 %982
  %983 = int.and %979 %982
  local.set %8 %983
  %984 = local.get %2
  %985 = int.gt.u %983 %984
  br.cond %985 %BB:88 %BB:87

#pred = {%BB:86}
%BB:87:
  %986 = const i32 0
  %987 = const i32 48
  %988 = const i32 79096
  %989 = int.add %986 %988
  memory.guard %memory:0 %989 32
  store.32 %memory:0 %989 %987
  br %BB:286

#pred = {%BB:86}
%BB:88:
  %990 = const i32 0
  %991 = const i32 79040
  %992 = int.add %990 %991
  memory.guard %memory:0 %992 32
  %993 = load.32 i32 %memory:0 %992
  local.set %3 %993
  %994 = int.eqz %993
  br.cond %994 %BB:93 %BB:89

#pred = {%BB:88}
%BB:89:
  %995 = const i32 0
  %996 = const i32 79032
  %997 = int.add %995 %996
  memory.guard %memory:0 %997 32
  %998 = load.32 i32 %memory:0 %997
  local.set %4 %998
  %999 = local.get %8
  %1000 = int.add %998 %999
  local.set (arg)%0 %1000
  %1001 = local.get %4
  %1002 = int.le.u %1000 %1001
  br.cond %1002 %BB:92 %BB:90

#pred = {%BB:89}
%BB:90:
  %1003 = local.get (arg)%0
  %1004 = local.get %3
  %1005 = int.le.u %1003 %1004
  br.cond %1005 %BB:93 %BB:91

#pred = {%BB:90}
%BB:91:
  br %BB:92

#pred = {%BB:91, %BB:89}
%BB:92:
  %1006 = const i32 0
  local.set %3 %1006
  %1007 = const i32 0
  %1008 = const i32 48
  %1009 = const i32 79096
  %1010 = int.add %1007 %1009
  memory.guard %memory:0 %1010 32
  store.32 %memory:0 %1010 %1008
  br %BB:286

#pred = {%BB:90, %BB:88}
%BB:93:
  %1011 = const i32 0
  %1012 = const i32 79044
  %1013 = int.add %1011 %1012
  memory.guard %memory:0 %1013 8
  %1014 = load.8 i32 %memory:0 %1013
  %1015 = const i32 4
  %1016 = int.and %1014 %1015
  br.cond %1016 %BB:129 %BB:94

#pred = {%BB:93}
%BB:94:
  %1017 = const i32 0
  %1018 = const i32 78624
  %1019 = int.add %1017 %1018
  memory.guard %memory:0 %1019 32
  %1020 = load.32 i32 %memory:0 %1019
  local.set %4 %1020
  %1021 = int.eqz %1020
  br.cond %1021 %BB:101 %BB:95

#pred = {%BB:94}
%BB:95:
  %1022 = const i32 79048
  local.set %3 %1022
  br %BB:96

#pred = {%BB:99, %BB:95}
%BB:96:
  %1023 = local.get %3
  memory.guard %memory:0 %1023 32
  %1024 = load.32 i32 %memory:0 %1023
  local.set (arg)%0 %1024
  %1025 = local.get %4
  %1026 = int.gt.u %1024 %1025
  br.cond %1026 %BB:99 %BB:97

#pred = {%BB:96}
%BB:97:
  %1027 = local.get (arg)%0
  %1028 = local.get %3
  %1029 = const i32 4
  %1030 = int.add %1028 %1029
  memory.guard %memory:0 %1030 32
  %1031 = load.32 i32 %memory:0 %1030
  %1032 = int.add %1027 %1031
  %1033 = local.get %4
  %1034 = int.gt.u %1032 %1033
  br.cond %1034 %BB:112 %BB:98

#pred = {%BB:97}
%BB:98:
  br %BB:99

#pred = {%BB:98, %BB:96}
%BB:99:
  %1035 = local.get %3
  %1036 = const i32 8
  %1037 = int.add %1035 %1036
  memory.guard %memory:0 %1037 32
  %1038 = load.32 i32 %memory:0 %1037
  local.set %3 %1038
  br.cond %1038 %BB:96 %BB:100

#pred = {%BB:99}
%BB:100:
  br %BB:101

#pred = {%BB:100, %BB:94}
%BB:101:
  %1039 = const i32 0
  %1040 = call %function:66(%1039)
  local.set %6 %1040
  %1041 = const i32 -1
  %1042 = int.eq %1040 %1041
  br.cond %1042 %BB:128 %BB:102

#pred = {%BB:101}
%BB:102:
  %1043 = local.get %8
  local.set %5 %1043
  %1044 = const i32 0
  %1045 = const i32 79076
  %1046 = int.add %1044 %1045
  memory.guard %memory:0 %1046 32
  %1047 = load.32 i32 %memory:0 %1046
  local.set %3 %1047
  %1048 = const i32 -1
  %1049 = int.add %1047 %1048
  local.set %4 %1049
  %1050 = local.get %6
  %1051 = int.and %1049 %1050
  %1052 = int.eqz %1051
  br.cond %1052 %BB:104 %BB:103

#pred = {%BB:102}
%BB:103:
  %1053 = local.get %8
  %1054 = local.get %6
  %1055 = int.sub %1053 %1054
  %1056 = local.get %4
  %1057 = local.get %6
  %1058 = int.add %1056 %1057
  %1059 = const i32 0
  %1060 = local.get %3
  %1061 = int.sub %1059 %1060
  %1062 = int.and %1058 %1061
  %1063 = int.add %1055 %1062
  local.set %5 %1063
  br %BB:104

#pred = {%BB:103, %BB:102}
%BB:104:
  %1064 = local.get %5
  %1065 = local.get %2
  %1066 = int.le.u %1064 %1065
  br.cond %1066 %BB:128 %BB:105

#pred = {%BB:104}
%BB:105:
  %1067 = local.get %5
  %1068 = const i32 2147483646
  %1069 = int.gt.u %1067 %1068
  br.cond %1069 %BB:128 %BB:106

#pred = {%BB:105}
%BB:106:
  %1070 = const i32 0
  %1071 = const i32 79040
  %1072 = int.add %1070 %1071
  memory.guard %memory:0 %1072 32
  %1073 = load.32 i32 %memory:0 %1072
  local.set %3 %1073
  %1074 = int.eqz %1073
  br.cond %1074 %BB:110 %BB:107

#pred = {%BB:106}
%BB:107:
  %1075 = const i32 0
  %1076 = const i32 79032
  %1077 = int.add %1075 %1076
  memory.guard %memory:0 %1077 32
  %1078 = load.32 i32 %memory:0 %1077
  local.set %4 %1078
  %1079 = local.get %5
  %1080 = int.add %1078 %1079
  local.set (arg)%0 %1080
  %1081 = local.get %4
  %1082 = int.le.u %1080 %1081
  br.cond %1082 %BB:128 %BB:108

#pred = {%BB:107}
%BB:108:
  %1083 = local.get (arg)%0
  %1084 = local.get %3
  %1085 = int.gt.u %1083 %1084
  br.cond %1085 %BB:128 %BB:109

#pred = {%BB:108}
%BB:109:
  br %BB:110

#pred = {%BB:109, %BB:106}
%BB:110:
  %1086 = local.get %5
  %1087 = call %function:66(%1086)
  local.set %3 %1087
  %1088 = local.get %6
  %1089 = int.ne %1087 %1088
  br.cond %1089 %BB:115 %BB:111

#pred = {%BB:110}
%BB:111:
  br %BB:135

#pred = {%BB:97}
%BB:112:
  %1090 = local.get %5
  %1091 = local.get %6
  %1092 = int.sub %1090 %1091
  %1093 = local.get %11
  %1094 = int.and %1092 %1093
  local.set %5 %1094
  %1095 = const i32 2147483646
  %1096 = int.gt.u %1094 %1095
  br.cond %1096 %BB:128 %BB:113

#pred = {%BB:112}
%BB:113:
  %1097 = local.get %5
  %1098 = call %function:66(%1097)
  local.set %6 %1098
  %1099 = local.get %3
  memory.guard %memory:0 %1099 32
  %1100 = load.32 i32 %memory:0 %1099
  %1101 = local.get %3
  %1102 = const i32 4
  %1103 = int.add %1101 %1102
  memory.guard %memory:0 %1103 32
  %1104 = load.32 i32 %memory:0 %1103
  %1105 = int.add %1100 %1104
  %1106 = int.eq %1098 %1105
  br.cond %1106 %BB:126 %BB:114

#pred = {%BB:113}
%BB:114:
  %1107 = local.get %6
  local.set %3 %1107
  br %BB:115

#pred = {%BB:114, %BB:110}
%BB:115:
  %1108 = local.get %2
  %1109 = const i32 72
  %1110 = int.add %1108 %1109
  %1111 = local.get %5
  %1112 = int.le.u %1110 %1111
  br.cond %1112 %BB:122 %BB:116

#pred = {%BB:115}
%BB:116:
  %1113 = local.get %3
  %1114 = const i32 -1
  %1115 = int.eq %1113 %1114
  br.cond %1115 %BB:122 %BB:117

#pred = {%BB:116}
%BB:117:
  %1116 = local.get %7
  %1117 = local.get %5
  %1118 = int.sub %1116 %1117
  %1119 = const i32 0
  %1120 = const i32 79080
  %1121 = int.add %1119 %1120
  memory.guard %memory:0 %1121 32
  %1122 = load.32 i32 %memory:0 %1121
  local.set %4 %1122
  %1123 = int.add %1118 %1122
  %1124 = const i32 0
  %1125 = local.get %4
  %1126 = int.sub %1124 %1125
  %1127 = int.and %1123 %1126
  local.set %4 %1127
  %1128 = const i32 2147483646
  %1129 = int.le.u %1127 %1128
  br.cond %1129 %BB:119 %BB:118

#pred = {%BB:117}
%BB:118:
  %1130 = local.get %3
  local.set %6 %1130
  br %BB:135

#pred = {%BB:117}
%BB:119:
  %1131 = local.get %4
  %1132 = call %function:66(%1131)
  %1133 = const i32 -1
  %1134 = int.eq %1132 %1133
  br.cond %1134 %BB:121 %BB:120

#pred = {%BB:119}
%BB:120:
  %1135 = local.get %4
  %1136 = local.get %5
  %1137 = int.add %1135 %1136
  local.set %5 %1137
  %1138 = local.get %3
  local.set %6 %1138
  br %BB:135

#pred = {%BB:119}
%BB:121:
  %1139 = const i32 0
  %1140 = local.get %5
  %1141 = int.sub %1139 %1140
  %1142 = call %function:66(%1141)
  br %BB:128

#pred = {%BB:116, %BB:115}
%BB:122:
  %1143 = local.get %3
  local.set %6 %1143
  %1144 = local.get %3
  %1145 = const i32 -1
  %1146 = int.ne %1144 %1145
  br.cond %1146 %BB:135 %BB:123

#pred = {%BB:122}
%BB:123:
  br %BB:128

#pred = {%BB:34}
%BB:124:
  %1147 = const i32 0
  local.set %8 %1147
  br %BB:267

#pred = {%BB:70}
%BB:125:
  %1148 = const i32 0
  local.set %6 %1148
  br %BB:238

#pred = {%BB:113}
%BB:126:
  %1149 = local.get %6
  %1150 = const i32 -1
  %1151 = int.ne %1149 %1150
  br.cond %1151 %BB:135 %BB:127

#pred = {%BB:126}
%BB:127:
  br %BB:128

#pred = {%BB:105, %BB:107, %BB:108, %BB:121, %BB:112, %BB:104, %BB:101, %BB:127, %BB:123}
%BB:128:
  %1152 = const i32 0
  %1153 = const i32 0
  %1154 = const i32 79044
  %1155 = int.add %1153 %1154
  memory.guard %memory:0 %1155 32
  %1156 = load.32 i32 %memory:0 %1155
  %1157 = const i32 4
  %1158 = int.or %1156 %1157
  %1159 = const i32 79044
  %1160 = int.add %1152 %1159
  memory.guard %memory:0 %1160 32
  store.32 %memory:0 %1160 %1158
  br %BB:129

#pred = {%BB:128, %BB:93}
%BB:129:
  %1161 = local.get %8
  %1162 = const i32 2147483646
  %1163 = int.gt.u %1161 %1162
  br.cond %1163 %BB:237 %BB:130

#pred = {%BB:129}
%BB:130:
  %1164 = local.get %8
  %1165 = call %function:66(%1164)
  local.set %6 %1165
  %1166 = const i32 0
  %1167 = call %function:66(%1166)
  local.set %3 %1167
  %1168 = int.ge.u %1165 %1167
  br.cond %1168 %BB:237 %BB:131

#pred = {%BB:130}
%BB:131:
  %1169 = local.get %6
  %1170 = const i32 -1
  %1171 = int.eq %1169 %1170
  br.cond %1171 %BB:237 %BB:132

#pred = {%BB:131}
%BB:132:
  %1172 = local.get %3
  %1173 = const i32 -1
  %1174 = int.eq %1172 %1173
  br.cond %1174 %BB:237 %BB:133

#pred = {%BB:132}
%BB:133:
  %1175 = local.get %3
  %1176 = local.get %6
  %1177 = int.sub %1175 %1176
  local.set %5 %1177
  %1178 = local.get %2
  %1179 = const i32 56
  %1180 = int.add %1178 %1179
  %1181 = int.le.u %1177 %1180
  br.cond %1181 %BB:237 %BB:134

#pred = {%BB:133}
%BB:134:
  br %BB:135

#pred = {%BB:118, %BB:120, %BB:111, %BB:122, %BB:134, %BB:126}
%BB:135:
  %1182 = const i32 0
  %1183 = const i32 0
  %1184 = const i32 79032
  %1185 = int.add %1183 %1184
  memory.guard %memory:0 %1185 32
  %1186 = load.32 i32 %memory:0 %1185
  %1187 = local.get %5
  %1188 = int.add %1186 %1187
  local.set %3 %1188
  %1189 = const i32 79032
  %1190 = int.add %1182 %1189
  memory.guard %memory:0 %1190 32
  store.32 %memory:0 %1190 %1188
  %1191 = local.get %3
  %1192 = const i32 0
  %1193 = const i32 79036
  %1194 = int.add %1192 %1193
  memory.guard %memory:0 %1194 32
  %1195 = load.32 i32 %memory:0 %1194
  %1196 = int.le.u %1191 %1195
  br.cond %1196 %BB:137 %BB:136

#pred = {%BB:135}
%BB:136:
  %1197 = const i32 0
  %1198 = local.get %3
  %1199 = const i32 79036
  %1200 = int.add %1197 %1199
  memory.guard %memory:0 %1200 32
  store.32 %memory:0 %1200 %1198
  br %BB:137

#pred = {%BB:136, %BB:135}
%BB:137:
  %1201 = const i32 0
  %1202 = const i32 78624
  %1203 = int.add %1201 %1202
  memory.guard %memory:0 %1203 32
  %1204 = load.32 i32 %memory:0 %1203
  local.set %4 %1204
  %1205 = int.eqz %1204
  br.cond %1205 %BB:142 %BB:138

#pred = {%BB:137}
%BB:138:
  %1206 = const i32 79048
  local.set %3 %1206
  br %BB:139

#pred = {%BB:140, %BB:138}
%BB:139:
  %1207 = local.get %6
  %1208 = local.get %3
  memory.guard %memory:0 %1208 32
  %1209 = load.32 i32 %memory:0 %1208
  local.set (arg)%0 %1209
  %1210 = local.get %3
  %1211 = const i32 4
  %1212 = int.add %1210 %1211
  memory.guard %memory:0 %1212 32
  %1213 = load.32 i32 %memory:0 %1212
  local.set %8 %1213
  %1214 = int.add %1209 %1213
  %1215 = int.eq %1207 %1214
  br.cond %1215 %BB:149 %BB:140

#pred = {%BB:139}
%BB:140:
  %1216 = local.get %3
  %1217 = const i32 8
  %1218 = int.add %1216 %1217
  memory.guard %memory:0 %1218 32
  %1219 = load.32 i32 %memory:0 %1218
  local.set %3 %1219
  br.cond %1219 %BB:139 %BB:141

#pred = {%BB:140}
%BB:141:
  br %BB:153

#pred = {%BB:137}
%BB:142:
  %1220 = const i32 0
  %1221 = const i32 78616
  %1222 = int.add %1220 %1221
  memory.guard %memory:0 %1222 32
  %1223 = load.32 i32 %memory:0 %1222
  local.set %3 %1223
  %1224 = int.eqz %1223
  br.cond %1224 %BB:145 %BB:143

#pred = {%BB:142}
%BB:143:
  %1225 = local.get %6
  %1226 = local.get %3
  %1227 = int.ge.u %1225 %1226
  br.cond %1227 %BB:146 %BB:144

#pred = {%BB:143}
%BB:144:
  br %BB:145

#pred = {%BB:144, %BB:142}
%BB:145:
  %1228 = const i32 0
  %1229 = local.get %6
  %1230 = const i32 78616
  %1231 = int.add %1228 %1230
  memory.guard %memory:0 %1231 32
  store.32 %memory:0 %1231 %1229
  br %BB:146

#pred = {%BB:145, %BB:143}
%BB:146:
  %1232 = const i32 0
  local.set %3 %1232
  %1233 = const i32 0
  %1234 = local.get %5
  %1235 = const i32 79052
  %1236 = int.add %1233 %1235
  memory.guard %memory:0 %1236 32
  store.32 %memory:0 %1236 %1234
  %1237 = const i32 0
  %1238 = local.get %6
  %1239 = const i32 79048
  %1240 = int.add %1237 %1239
  memory.guard %memory:0 %1240 32
  store.32 %memory:0 %1240 %1238
  %1241 = const i32 0
  %1242 = const i32 -1
  %1243 = const i32 78632
  %1244 = int.add %1241 %1243
  memory.guard %memory:0 %1244 32
  store.32 %memory:0 %1244 %1242
  %1245 = const i32 0
  %1246 = const i32 0
  %1247 = const i32 79072
  %1248 = int.add %1246 %1247
  memory.guard %memory:0 %1248 32
  %1249 = load.32 i32 %memory:0 %1248
  %1250 = const i32 78636
  %1251 = int.add %1245 %1250
  memory.guard %memory:0 %1251 32
  store.32 %memory:0 %1251 %1249
  %1252 = const i32 0
  %1253 = const i32 0
  %1254 = const i32 79060
  %1255 = int.add %1252 %1254
  memory.guard %memory:0 %1255 32
  store.32 %memory:0 %1255 %1253
  br %BB:147

#pred = {%BB:147, %BB:146}
%BB:147:
  %1256 = local.get %3
  %1257 = const i32 78648
  %1258 = int.add %1256 %1257
  %1259 = local.get %3
  %1260 = const i32 78640
  %1261 = int.add %1259 %1260
  local.set %4 %1261
  memory.guard %memory:0 %1258 32
  store.32 %memory:0 %1258 %1261
  %1262 = local.get %3
  %1263 = const i32 78652
  %1264 = int.add %1262 %1263
  %1265 = local.get %4
  memory.guard %memory:0 %1264 32
  store.32 %memory:0 %1264 %1265
  %1266 = local.get %3
  %1267 = const i32 8
  %1268 = int.add %1266 %1267
  local.set %3 %1268
  %1269 = const i32 256
  %1270 = int.ne %1268 %1269
  br.cond %1270 %BB:147 %BB:148

#pred = {%BB:147}
%BB:148:
  %1271 = local.get %6
  %1272 = const i32 -8
  %1273 = local.get %6
  %1274 = int.sub %1272 %1273
  %1275 = const i32 15
  %1276 = int.and %1274 %1275
  %1277 = const i32 0
  %1278 = local.get %6
  %1279 = const i32 8
  %1280 = int.add %1278 %1279
  %1281 = const i32 15
  %1282 = int.and %1280 %1281
  %1283 = select %1282 %1276 %1277
  local.set %3 %1283
  %1284 = int.add %1271 %1283
  local.set %4 %1284
  %1285 = local.get %5
  %1286 = const i32 -56
  %1287 = int.add %1285 %1286
  local.set (arg)%0 %1287
  %1288 = local.get %3
  %1289 = int.sub %1287 %1288
  local.set %3 %1289
  %1290 = const i32 1
  %1291 = int.or %1289 %1290
  %1292 = const i32 4
  %1293 = int.add %1284 %1292
  memory.guard %memory:0 %1293 32
  store.32 %memory:0 %1293 %1291
  %1294 = const i32 0
  %1295 = const i32 0
  %1296 = const i32 79088
  %1297 = int.add %1295 %1296
  memory.guard %memory:0 %1297 32
  %1298 = load.32 i32 %memory:0 %1297
  %1299 = const i32 78628
  %1300 = int.add %1294 %1299
  memory.guard %memory:0 %1300 32
  store.32 %memory:0 %1300 %1298
  %1301 = const i32 0
  %1302 = local.get %3
  %1303 = const i32 78612
  %1304 = int.add %1301 %1303
  memory.guard %memory:0 %1304 32
  store.32 %memory:0 %1304 %1302
  %1305 = const i32 0
  %1306 = local.get %4
  %1307 = const i32 78624
  %1308 = int.add %1305 %1307
  memory.guard %memory:0 %1308 32
  store.32 %memory:0 %1308 %1306
  %1309 = local.get %6
  %1310 = local.get (arg)%0
  %1311 = int.add %1309 %1310
  %1312 = const i32 56
  %1313 = const i32 4
  %1314 = int.add %1311 %1313
  memory.guard %memory:0 %1314 32
  store.32 %memory:0 %1314 %1312
  br %BB:235

#pred = {%BB:139}
%BB:149:
  %1315 = local.get %3
  %1316 = const i32 12
  %1317 = int.add %1315 %1316
  memory.guard %memory:0 %1317 8
  %1318 = load.8 i32 %memory:0 %1317
  %1319 = const i32 8
  %1320 = int.and %1318 %1319
  br.cond %1320 %BB:153 %BB:150

#pred = {%BB:149}
%BB:150:
  %1321 = local.get %6
  %1322 = local.get %4
  %1323 = int.le.u %1321 %1322
  br.cond %1323 %BB:153 %BB:151

#pred = {%BB:150}
%BB:151:
  %1324 = local.get (arg)%0
  %1325 = local.get %4
  %1326 = int.gt.u %1324 %1325
  br.cond %1326 %BB:153 %BB:152

#pred = {%BB:151}
%BB:152:
  %1327 = local.get %4
  %1328 = const i32 -8
  %1329 = local.get %4
  %1330 = int.sub %1328 %1329
  %1331 = const i32 15
  %1332 = int.and %1330 %1331
  %1333 = const i32 0
  %1334 = local.get %4
  %1335 = const i32 8
  %1336 = int.add %1334 %1335
  %1337 = const i32 15
  %1338 = int.and %1336 %1337
  %1339 = select %1338 %1332 %1333
  local.set (arg)%0 %1339
  %1340 = int.add %1327 %1339
  local.set %6 %1340
  %1341 = const i32 0
  %1342 = const i32 78612
  %1343 = int.add %1341 %1342
  memory.guard %memory:0 %1343 32
  %1344 = load.32 i32 %memory:0 %1343
  %1345 = local.get %5
  %1346 = int.add %1344 %1345
  local.set %11 %1346
  %1347 = local.get (arg)%0
  %1348 = int.sub %1346 %1347
  local.set (arg)%0 %1348
  %1349 = const i32 1
  %1350 = int.or %1348 %1349
  %1351 = const i32 4
  %1352 = int.add %1340 %1351
  memory.guard %memory:0 %1352 32
  store.32 %memory:0 %1352 %1350
  %1353 = local.get %3
  %1354 = local.get %8
  %1355 = local.get %5
  %1356 = int.add %1354 %1355
  %1357 = const i32 4
  %1358 = int.add %1353 %1357
  memory.guard %memory:0 %1358 32
  store.32 %memory:0 %1358 %1356
  %1359 = const i32 0
  %1360 = const i32 0
  %1361 = const i32 79088
  %1362 = int.add %1360 %1361
  memory.guard %memory:0 %1362 32
  %1363 = load.32 i32 %memory:0 %1362
  %1364 = const i32 78628
  %1365 = int.add %1359 %1364
  memory.guard %memory:0 %1365 32
  store.32 %memory:0 %1365 %1363
  %1366 = const i32 0
  %1367 = local.get (arg)%0
  %1368 = const i32 78612
  %1369 = int.add %1366 %1368
  memory.guard %memory:0 %1369 32
  store.32 %memory:0 %1369 %1367
  %1370 = const i32 0
  %1371 = local.get %6
  %1372 = const i32 78624
  %1373 = int.add %1370 %1372
  memory.guard %memory:0 %1373 32
  store.32 %memory:0 %1373 %1371
  %1374 = local.get %4
  %1375 = local.get %11
  %1376 = int.add %1374 %1375
  %1377 = const i32 56
  %1378 = const i32 4
  %1379 = int.add %1376 %1378
  memory.guard %memory:0 %1379 32
  store.32 %memory:0 %1379 %1377
  br %BB:235

#pred = {%BB:151, %BB:150, %BB:149, %BB:141}
%BB:153:
  %1380 = local.get %6
  %1381 = const i32 0
  %1382 = const i32 78616
  %1383 = int.add %1381 %1382
  memory.guard %memory:0 %1383 32
  %1384 = load.32 i32 %memory:0 %1383
  local.set %8 %1384
  %1385 = int.ge.u %1380 %1384
  br.cond %1385 %BB:155 %BB:154

#pred = {%BB:153}
%BB:154:
  %1386 = const i32 0
  %1387 = local.get %6
  %1388 = const i32 78616
  %1389 = int.add %1386 %1388
  memory.guard %memory:0 %1389 32
  store.32 %memory:0 %1389 %1387
  %1390 = local.get %6
  local.set %8 %1390
  br %BB:155

#pred = {%BB:154, %BB:153}
%BB:155:
  %1391 = local.get %6
  %1392 = local.get %5
  %1393 = int.add %1391 %1392
  local.set (arg)%0 %1393
  %1394 = const i32 79048
  local.set %3 %1394
  br %BB:156

#pred = {%BB:157, %BB:155}
%BB:156:
  %1395 = local.get %3
  memory.guard %memory:0 %1395 32
  %1396 = load.32 i32 %memory:0 %1395
  %1397 = local.get (arg)%0
  %1398 = int.eq %1396 %1397
  br.cond %1398 %BB:159 %BB:157

#pred = {%BB:156}
%BB:157:
  %1399 = local.get %3
  %1400 = const i32 8
  %1401 = int.add %1399 %1400
  memory.guard %memory:0 %1401 32
  %1402 = load.32 i32 %memory:0 %1401
  local.set %3 %1402
  br.cond %1402 %BB:156 %BB:158

#pred = {%BB:157}
%BB:158:
  br %BB:161

#pred = {%BB:156}
%BB:159:
  %1403 = local.get %3
  %1404 = const i32 12
  %1405 = int.add %1403 %1404
  memory.guard %memory:0 %1405 8
  %1406 = load.8 i32 %memory:0 %1405
  %1407 = const i32 8
  %1408 = int.and %1406 %1407
  %1409 = int.eqz %1408
  br.cond %1409 %BB:166 %BB:160

#pred = {%BB:159}
%BB:160:
  br %BB:161

#pred = {%BB:160, %BB:158}
%BB:161:
  %1410 = const i32 79048
  local.set %3 %1410
  br %BB:162

#pred = {%BB:165, %BB:161}
%BB:162:
  %1411 = local.get %3
  memory.guard %memory:0 %1411 32
  %1412 = load.32 i32 %memory:0 %1411
  local.set (arg)%0 %1412
  %1413 = local.get %4
  %1414 = int.gt.u %1412 %1413
  br.cond %1414 %BB:165 %BB:163

#pred = {%BB:162}
%BB:163:
  %1415 = local.get (arg)%0
  %1416 = local.get %3
  %1417 = const i32 4
  %1418 = int.add %1416 %1417
  memory.guard %memory:0 %1418 32
  %1419 = load.32 i32 %memory:0 %1418
  %1420 = int.add %1415 %1419
  local.set (arg)%0 %1420
  %1421 = local.get %4
  %1422 = int.gt.u %1420 %1421
  br.cond %1422 %BB:215 %BB:164

#pred = {%BB:163}
%BB:164:
  br %BB:165

#pred = {%BB:164, %BB:162}
%BB:165:
  %1423 = local.get %3
  %1424 = const i32 8
  %1425 = int.add %1423 %1424
  memory.guard %memory:0 %1425 32
  %1426 = load.32 i32 %memory:0 %1425
  local.set %3 %1426
  br %BB:162

#pred = {%BB:159}
%BB:166:
  %1427 = local.get %3
  %1428 = local.get %6
  memory.guard %memory:0 %1427 32
  store.32 %memory:0 %1427 %1428
  %1429 = local.get %3
  %1430 = local.get %3
  %1431 = const i32 4
  %1432 = int.add %1430 %1431
  memory.guard %memory:0 %1432 32
  %1433 = load.32 i32 %memory:0 %1432
  %1434 = local.get %5
  %1435 = int.add %1433 %1434
  %1436 = const i32 4
  %1437 = int.add %1429 %1436
  memory.guard %memory:0 %1437 32
  store.32 %memory:0 %1437 %1435
  %1438 = local.get %6
  %1439 = const i32 -8
  %1440 = local.get %6
  %1441 = int.sub %1439 %1440
  %1442 = const i32 15
  %1443 = int.and %1441 %1442
  %1444 = const i32 0
  %1445 = local.get %6
  %1446 = const i32 8
  %1447 = int.add %1445 %1446
  %1448 = const i32 15
  %1449 = int.and %1447 %1448
  %1450 = select %1449 %1443 %1444
  %1451 = int.add %1438 %1450
  local.set %11 %1451
  %1452 = local.get %2
  %1453 = const i32 3
  %1454 = int.or %1452 %1453
  %1455 = const i32 4
  %1456 = int.add %1451 %1455
  memory.guard %memory:0 %1456 32
  store.32 %memory:0 %1456 %1454
  %1457 = local.get (arg)%0
  %1458 = const i32 -8
  %1459 = local.get (arg)%0
  %1460 = int.sub %1458 %1459
  %1461 = const i32 15
  %1462 = int.and %1460 %1461
  %1463 = const i32 0
  %1464 = local.get (arg)%0
  %1465 = const i32 8
  %1466 = int.add %1464 %1465
  %1467 = const i32 15
  %1468 = int.and %1466 %1467
  %1469 = select %1468 %1462 %1463
  %1470 = int.add %1457 %1469
  local.set %6 %1470
  %1471 = local.get %11
  %1472 = int.sub %1470 %1471
  %1473 = local.get %2
  %1474 = int.sub %1472 %1473
  local.set %3 %1474
  %1475 = local.get %11
  %1476 = local.get %2
  %1477 = int.add %1475 %1476
  local.set (arg)%0 %1477
  %1478 = local.get %4
  %1479 = local.get %6
  %1480 = int.ne %1478 %1479
  br.cond %1480 %BB:168 %BB:167

#pred = {%BB:166}
%BB:167:
  %1481 = const i32 0
  %1482 = local.get (arg)%0
  %1483 = const i32 78624
  %1484 = int.add %1481 %1483
  memory.guard %memory:0 %1484 32
  store.32 %memory:0 %1484 %1482
  %1485 = const i32 0
  %1486 = const i32 0
  %1487 = const i32 78612
  %1488 = int.add %1486 %1487
  memory.guard %memory:0 %1488 32
  %1489 = load.32 i32 %memory:0 %1488
  %1490 = local.get %3
  %1491 = int.add %1489 %1490
  local.set %3 %1491
  %1492 = const i32 78612
  %1493 = int.add %1485 %1492
  memory.guard %memory:0 %1493 32
  store.32 %memory:0 %1493 %1491
  %1494 = local.get (arg)%0
  %1495 = local.get %3
  %1496 = const i32 1
  %1497 = int.or %1495 %1496
  %1498 = const i32 4
  %1499 = int.add %1494 %1498
  memory.guard %memory:0 %1499 32
  store.32 %memory:0 %1499 %1497
  br %BB:233

#pred = {%BB:166}
%BB:168:
  %1500 = const i32 0
  %1501 = const i32 78620
  %1502 = int.add %1500 %1501
  memory.guard %memory:0 %1502 32
  %1503 = load.32 i32 %memory:0 %1502
  %1504 = local.get %6
  %1505 = int.ne %1503 %1504
  br.cond %1505 %BB:170 %BB:169

#pred = {%BB:168}
%BB:169:
  %1506 = const i32 0
  %1507 = local.get (arg)%0
  %1508 = const i32 78620
  %1509 = int.add %1506 %1508
  memory.guard %memory:0 %1509 32
  store.32 %memory:0 %1509 %1507
  %1510 = const i32 0
  %1511 = const i32 0
  %1512 = const i32 78608
  %1513 = int.add %1511 %1512
  memory.guard %memory:0 %1513 32
  %1514 = load.32 i32 %memory:0 %1513
  %1515 = local.get %3
  %1516 = int.add %1514 %1515
  local.set %3 %1516
  %1517 = const i32 78608
  %1518 = int.add %1510 %1517
  memory.guard %memory:0 %1518 32
  store.32 %memory:0 %1518 %1516
  %1519 = local.get (arg)%0
  %1520 = local.get %3
  %1521 = const i32 1
  %1522 = int.or %1520 %1521
  %1523 = const i32 4
  %1524 = int.add %1519 %1523
  memory.guard %memory:0 %1524 32
  store.32 %memory:0 %1524 %1522
  %1525 = local.get (arg)%0
  %1526 = local.get %3
  %1527 = int.add %1525 %1526
  %1528 = local.get %3
  memory.guard %memory:0 %1527 32
  store.32 %memory:0 %1527 %1528
  br %BB:233

#pred = {%BB:168}
%BB:170:
  %1529 = local.get %6
  %1530 = const i32 4
  %1531 = int.add %1529 %1530
  memory.guard %memory:0 %1531 32
  %1532 = load.32 i32 %memory:0 %1531
  local.set %4 %1532
  %1533 = const i32 3
  %1534 = int.and %1532 %1533
  %1535 = const i32 1
  %1536 = int.ne %1534 %1535
  br.cond %1536 %BB:201 %BB:171

#pred = {%BB:170}
%BB:171:
  %1537 = local.get %4
  %1538 = const i32 -8
  %1539 = int.and %1537 %1538
  local.set %7 %1539
  %1540 = local.get %4
  %1541 = const i32 255
  %1542 = int.gt.u %1540 %1541
  br.cond %1542 %BB:179 %BB:172

#pred = {%BB:171}
%BB:172:
  %1543 = local.get %6
  %1544 = const i32 12
  %1545 = int.add %1543 %1544
  memory.guard %memory:0 %1545 32
  %1546 = load.32 i32 %memory:0 %1545
  local.set %2 %1546
  %1547 = local.get %6
  %1548 = const i32 8
  %1549 = int.add %1547 %1548
  memory.guard %memory:0 %1549 32
  %1550 = load.32 i32 %memory:0 %1549
  local.set %5 %1550
  %1551 = local.get %4
  %1552 = const i32 3
  %1553 = int.shr.u %1551 %1552
  local.set %9 %1553
  %1554 = const i32 3
  %1555 = int.shl %1553 %1554
  %1556 = const i32 78640
  %1557 = int.add %1555 %1556
  local.set %4 %1557
  %1558 = int.eq %1550 %1557
  br.cond %1558 %BB:174 %BB:173

#pred = {%BB:172}
%BB:173:
  br %BB:174

#pred = {%BB:173, %BB:172}
%BB:174:
  %1559 = local.get %2
  %1560 = local.get %5
  %1561 = int.ne %1559 %1560
  br.cond %1561 %BB:176 %BB:175

#pred = {%BB:174}
%BB:175:
  %1562 = const i32 0
  %1563 = const i32 0
  %1564 = const i32 78600
  %1565 = int.add %1563 %1564
  memory.guard %memory:0 %1565 32
  %1566 = load.32 i32 %memory:0 %1565
  %1567 = const i32 -2
  %1568 = local.get %9
  %1569 = int.rotl %1567 %1568
  %1570 = int.and %1566 %1569
  %1571 = const i32 78600
  %1572 = int.add %1562 %1571
  memory.guard %memory:0 %1572 32
  store.32 %memory:0 %1572 %1570
  br %BB:200

#pred = {%BB:174}
%BB:176:
  %1573 = local.get %2
  %1574 = local.get %4
  %1575 = int.eq %1573 %1574
  br.cond %1575 %BB:178 %BB:177

#pred = {%BB:176}
%BB:177:
  br %BB:178

#pred = {%BB:177, %BB:176}
%BB:178:
  %1576 = local.get %2
  %1577 = local.get %5
  %1578 = const i32 8
  %1579 = int.add %1576 %1578
  memory.guard %memory:0 %1579 32
  store.32 %memory:0 %1579 %1577
  %1580 = local.get %5
  %1581 = local.get %2
  %1582 = const i32 12
  %1583 = int.add %1580 %1582
  memory.guard %memory:0 %1583 32
  store.32 %memory:0 %1583 %1581
  br %BB:200

#pred = {%BB:171}
%BB:179:
  %1584 = local.get %6
  %1585 = const i32 24
  %1586 = int.add %1584 %1585
  memory.guard %memory:0 %1586 32
  %1587 = load.32 i32 %memory:0 %1586
  local.set %9 %1587
  %1588 = local.get %6
  %1589 = const i32 12
  %1590 = int.add %1588 %1589
  memory.guard %memory:0 %1590 32
  %1591 = load.32 i32 %memory:0 %1590
  local.set %5 %1591
  %1592 = local.get %6
  %1593 = int.eq %1591 %1592
  br.cond %1593 %BB:183 %BB:180

#pred = {%BB:179}
%BB:180:
  %1594 = local.get %8
  %1595 = local.get %6
  %1596 = const i32 8
  %1597 = int.add %1595 %1596
  memory.guard %memory:0 %1597 32
  %1598 = load.32 i32 %memory:0 %1597
  local.set %4 %1598
  %1599 = int.gt.u %1594 %1598
  br.cond %1599 %BB:182 %BB:181

#pred = {%BB:180}
%BB:181:
  %1600 = local.get %4
  %1601 = const i32 12
  %1602 = int.add %1600 %1601
  memory.guard %memory:0 %1602 32
  br %BB:182

#pred = {%BB:181, %BB:180}
%BB:182:
  %1603 = local.get %5
  %1604 = local.get %4
  %1605 = const i32 8
  %1606 = int.add %1603 %1605
  memory.guard %memory:0 %1606 32
  store.32 %memory:0 %1606 %1604
  %1607 = local.get %4
  %1608 = local.get %5
  %1609 = const i32 12
  %1610 = int.add %1607 %1609
  memory.guard %memory:0 %1610 32
  store.32 %memory:0 %1610 %1608
  br %BB:190

#pred = {%BB:179}
%BB:183:
  %1611 = local.get %6
  %1612 = const i32 20
  %1613 = int.add %1611 %1612
  local.set %4 %1613
  memory.guard %memory:0 %1613 32
  %1614 = load.32 i32 %memory:0 %1613
  local.set %2 %1614
  br.cond %1614 %BB:186 %BB:184

#pred = {%BB:183}
%BB:184:
  %1615 = local.get %6
  %1616 = const i32 16
  %1617 = int.add %1615 %1616
  local.set %4 %1617
  memory.guard %memory:0 %1617 32
  %1618 = load.32 i32 %memory:0 %1617
  local.set %2 %1618
  br.cond %1618 %BB:186 %BB:185

#pred = {%BB:184}
%BB:185:
  %1619 = const i32 0
  local.set %5 %1619
  br %BB:190

#pred = {%BB:184, %BB:183}
%BB:186:
  br %BB:187

#pred = {%BB:188, %BB:187, %BB:186}
%BB:187:
  %1620 = local.get %4
  local.set %8 %1620
  %1621 = local.get %2
  local.set %5 %1621
  %1622 = const i32 20
  %1623 = int.add %1621 %1622
  local.set %4 %1623
  memory.guard %memory:0 %1623 32
  %1624 = load.32 i32 %memory:0 %1623
  local.set %2 %1624
  br.cond %1624 %BB:187 %BB:188

#pred = {%BB:187}
%BB:188:
  %1625 = local.get %5
  %1626 = const i32 16
  %1627 = int.add %1625 %1626
  local.set %4 %1627
  %1628 = local.get %5
  %1629 = const i32 16
  %1630 = int.add %1628 %1629
  memory.guard %memory:0 %1630 32
  %1631 = load.32 i32 %memory:0 %1630
  local.set %2 %1631
  br.cond %1631 %BB:187 %BB:189

#pred = {%BB:188}
%BB:189:
  %1632 = local.get %8
  %1633 = const i32 0
  memory.guard %memory:0 %1632 32
  store.32 %memory:0 %1632 %1633
  br %BB:190

#pred = {%BB:189, %BB:185, %BB:182}
%BB:190:
  %1634 = local.get %9
  %1635 = int.eqz %1634
  br.cond %1635 %BB:200 %BB:191

#pred = {%BB:190}
%BB:191:
  %1636 = local.get %6
  %1637 = const i32 28
  %1638 = int.add %1636 %1637
  memory.guard %memory:0 %1638 32
  %1639 = load.32 i32 %memory:0 %1638
  local.set %2 %1639
  %1640 = const i32 2
  %1641 = int.shl %1639 %1640
  %1642 = const i32 78904
  %1643 = int.add %1641 %1642
  local.set %4 %1643
  memory.guard %memory:0 %1643 32
  %1644 = load.32 i32 %memory:0 %1643
  %1645 = local.get %6
  %1646 = int.ne %1644 %1645
  br.cond %1646 %BB:194 %BB:192

#pred = {%BB:191}
%BB:192:
  %1647 = local.get %4
  %1648 = local.get %5
  memory.guard %memory:0 %1647 32
  store.32 %memory:0 %1647 %1648
  %1649 = local.get %5
  br.cond %1649 %BB:196 %BB:193

#pred = {%BB:192}
%BB:193:
  %1650 = const i32 0
  %1651 = const i32 0
  %1652 = const i32 78604
  %1653 = int.add %1651 %1652
  memory.guard %memory:0 %1653 32
  %1654 = load.32 i32 %memory:0 %1653
  %1655 = const i32 -2
  %1656 = local.get %2
  %1657 = int.rotl %1655 %1656
  %1658 = int.and %1654 %1657
  %1659 = const i32 78604
  %1660 = int.add %1650 %1659
  memory.guard %memory:0 %1660 32
  store.32 %memory:0 %1660 %1658
  br %BB:200

#pred = {%BB:191}
%BB:194:
  %1661 = local.get %9
  %1662 = const i32 16
  %1663 = const i32 20
  %1664 = local.get %9
  %1665 = const i32 16
  %1666 = int.add %1664 %1665
  memory.guard %memory:0 %1666 32
  %1667 = load.32 i32 %memory:0 %1666
  %1668 = local.get %6
  %1669 = int.eq %1667 %1668
  %1670 = select %1669 %1662 %1663
  %1671 = int.add %1661 %1670
  %1672 = local.get %5
  memory.guard %memory:0 %1671 32
  store.32 %memory:0 %1671 %1672
  %1673 = local.get %5
  %1674 = int.eqz %1673
  br.cond %1674 %BB:200 %BB:195

#pred = {%BB:194}
%BB:195:
  br %BB:196

#pred = {%BB:195, %BB:192}
%BB:196:
  %1675 = local.get %5
  %1676 = local.get %9
  %1677 = const i32 24
  %1678 = int.add %1675 %1677
  memory.guard %memory:0 %1678 32
  store.32 %memory:0 %1678 %1676
  %1679 = local.get %6
  %1680 = const i32 16
  %1681 = int.add %1679 %1680
  memory.guard %memory:0 %1681 32
  %1682 = load.32 i32 %memory:0 %1681
  local.set %4 %1682
  %1683 = int.eqz %1682
  br.cond %1683 %BB:198 %BB:197

#pred = {%BB:196}
%BB:197:
  %1684 = local.get %5
  %1685 = local.get %4
  %1686 = const i32 16
  %1687 = int.add %1684 %1686
  memory.guard %memory:0 %1687 32
  store.32 %memory:0 %1687 %1685
  %1688 = local.get %4
  %1689 = local.get %5
  %1690 = const i32 24
  %1691 = int.add %1688 %1690
  memory.guard %memory:0 %1691 32
  store.32 %memory:0 %1691 %1689
  br %BB:198

#pred = {%BB:197, %BB:196}
%BB:198:
  %1692 = local.get %6
  %1693 = const i32 20
  %1694 = int.add %1692 %1693
  memory.guard %memory:0 %1694 32
  %1695 = load.32 i32 %memory:0 %1694
  local.set %4 %1695
  %1696 = int.eqz %1695
  br.cond %1696 %BB:200 %BB:199

#pred = {%BB:198}
%BB:199:
  %1697 = local.get %5
  %1698 = const i32 20
  %1699 = int.add %1697 %1698
  %1700 = local.get %4
  memory.guard %memory:0 %1699 32
  store.32 %memory:0 %1699 %1700
  %1701 = local.get %4
  %1702 = local.get %5
  %1703 = const i32 24
  %1704 = int.add %1701 %1703
  memory.guard %memory:0 %1704 32
  store.32 %memory:0 %1704 %1702
  br %BB:200

#pred = {%BB:198, %BB:199, %BB:194, %BB:175, %BB:193, %BB:178, %BB:190}
%BB:200:
  %1705 = local.get %7
  %1706 = local.get %3
  %1707 = int.add %1705 %1706
  local.set %3 %1707
  %1708 = local.get %6
  %1709 = local.get %7
  %1710 = int.add %1708 %1709
  local.set %6 %1710
  br %BB:201

#pred = {%BB:200, %BB:170}
%BB:201:
  %1711 = local.get %6
  %1712 = local.get %6
  %1713 = const i32 4
  %1714 = int.add %1712 %1713
  memory.guard %memory:0 %1714 32
  %1715 = load.32 i32 %memory:0 %1714
  %1716 = const i32 -2
  %1717 = int.and %1715 %1716
  %1718 = const i32 4
  %1719 = int.add %1711 %1718
  memory.guard %memory:0 %1719 32
  store.32 %memory:0 %1719 %1717
  %1720 = local.get (arg)%0
  %1721 = local.get %3
  %1722 = int.add %1720 %1721
  %1723 = local.get %3
  memory.guard %memory:0 %1722 32
  store.32 %memory:0 %1722 %1723
  %1724 = local.get (arg)%0
  %1725 = local.get %3
  %1726 = const i32 1
  %1727 = int.or %1725 %1726
  %1728 = const i32 4
  %1729 = int.add %1724 %1728
  memory.guard %memory:0 %1729 32
  store.32 %memory:0 %1729 %1727
  %1730 = local.get %3
  %1731 = const i32 255
  %1732 = int.gt.u %1730 %1731
  br.cond %1732 %BB:206 %BB:202

#pred = {%BB:201}
%BB:202:
  %1733 = local.get %3
  %1734 = const i32 3
  %1735 = int.shr.u %1733 %1734
  local.set %4 %1735
  %1736 = const i32 3
  %1737 = int.shl %1735 %1736
  %1738 = const i32 78640
  %1739 = int.add %1737 %1738
  local.set %3 %1739
  %1740 = const i32 0
  %1741 = const i32 78600
  %1742 = int.add %1740 %1741
  memory.guard %memory:0 %1742 32
  %1743 = load.32 i32 %memory:0 %1742
  local.set %2 %1743
  %1744 = const i32 1
  %1745 = local.get %4
  %1746 = int.shl %1744 %1745
  local.set %4 %1746
  %1747 = int.and %1743 %1746
  br.cond %1747 %BB:204 %BB:203

#pred = {%BB:202}
%BB:203:
  %1748 = const i32 0
  %1749 = local.get %2
  %1750 = local.get %4
  %1751 = int.or %1749 %1750
  %1752 = const i32 78600
  %1753 = int.add %1748 %1752
  memory.guard %memory:0 %1753 32
  store.32 %memory:0 %1753 %1751
  %1754 = local.get %3
  local.set %4 %1754
  br %BB:205

#pred = {%BB:202}
%BB:204:
  %1755 = local.get %3
  %1756 = const i32 8
  %1757 = int.add %1755 %1756
  memory.guard %memory:0 %1757 32
  %1758 = load.32 i32 %memory:0 %1757
  local.set %4 %1758
  br %BB:205

#pred = {%BB:204, %BB:203}
%BB:205:
  %1759 = local.get %4
  %1760 = local.get (arg)%0
  %1761 = const i32 12
  %1762 = int.add %1759 %1761
  memory.guard %memory:0 %1762 32
  store.32 %memory:0 %1762 %1760
  %1763 = local.get %3
  %1764 = local.get (arg)%0
  %1765 = const i32 8
  %1766 = int.add %1763 %1765
  memory.guard %memory:0 %1766 32
  store.32 %memory:0 %1766 %1764
  %1767 = local.get (arg)%0
  %1768 = local.get %3
  %1769 = const i32 12
  %1770 = int.add %1767 %1769
  memory.guard %memory:0 %1770 32
  store.32 %memory:0 %1770 %1768
  %1771 = local.get (arg)%0
  %1772 = local.get %4
  %1773 = const i32 8
  %1774 = int.add %1771 %1773
  memory.guard %memory:0 %1774 32
  store.32 %memory:0 %1774 %1772
  br %BB:233

#pred = {%BB:201}
%BB:206:
  %1775 = const i32 0
  local.set %4 %1775
  %1776 = local.get %3
  %1777 = const i32 8
  %1778 = int.shr.u %1776 %1777
  local.set %2 %1778
  %1779 = int.eqz %1778
  br.cond %1779 %BB:209 %BB:207

#pred = {%BB:206}
%BB:207:
  %1780 = const i32 31
  local.set %4 %1780
  %1781 = local.get %3
  %1782 = const i32 16777215
  %1783 = int.gt.u %1781 %1782
  br.cond %1783 %BB:209 %BB:208

#pred = {%BB:207}
%BB:208:
  %1784 = local.get %2
  %1785 = local.get %2
  %1786 = const i32 1048320
  %1787 = int.add %1785 %1786
  %1788 = const i32 16
  %1789 = int.shr.u %1787 %1788
  %1790 = const i32 8
  %1791 = int.and %1789 %1790
  local.set %4 %1791
  %1792 = int.shl %1784 %1791
  local.set %2 %1792
  %1793 = local.get %2
  %1794 = const i32 520192
  %1795 = int.add %1793 %1794
  %1796 = const i32 16
  %1797 = int.shr.u %1795 %1796
  %1798 = const i32 4
  %1799 = int.and %1797 %1798
  local.set %2 %1799
  %1800 = int.shl %1792 %1799
  local.set %6 %1800
  %1801 = local.get %6
  %1802 = const i32 245760
  %1803 = int.add %1801 %1802
  %1804 = const i32 16
  %1805 = int.shr.u %1803 %1804
  %1806 = const i32 2
  %1807 = int.and %1805 %1806
  local.set %6 %1807
  %1808 = int.shl %1800 %1807
  %1809 = const i32 15
  %1810 = int.shr.u %1808 %1809
  %1811 = local.get %2
  %1812 = local.get %4
  %1813 = int.or %1811 %1812
  %1814 = local.get %6
  %1815 = int.or %1813 %1814
  %1816 = int.sub %1810 %1815
  local.set %4 %1816
  %1817 = const i32 1
  %1818 = int.shl %1816 %1817
  %1819 = local.get %3
  %1820 = local.get %4
  %1821 = const i32 21
  %1822 = int.add %1820 %1821
  %1823 = int.shr.u %1819 %1822
  %1824 = const i32 1
  %1825 = int.and %1823 %1824
  %1826 = int.or %1818 %1825
  %1827 = const i32 28
  %1828 = int.add %1826 %1827
  local.set %4 %1828
  br %BB:209

#pred = {%BB:208, %BB:207, %BB:206}
%BB:209:
  %1829 = local.get (arg)%0
  %1830 = local.get %4
  %1831 = const i32 28
  %1832 = int.add %1829 %1831
  memory.guard %memory:0 %1832 32
  store.32 %memory:0 %1832 %1830
  %1833 = local.get (arg)%0
  %1834 = const i64 0
  %1835 = const i32 16
  %1836 = int.add %1833 %1835
  memory.guard %memory:0 %1836 64
  store.64 %memory:0 %1836 %1834
  %1837 = local.get %4
  %1838 = const i32 2
  %1839 = int.shl %1837 %1838
  %1840 = const i32 78904
  %1841 = int.add %1839 %1840
  local.set %2 %1841
  %1842 = const i32 0
  %1843 = const i32 78604
  %1844 = int.add %1842 %1843
  memory.guard %memory:0 %1844 32
  %1845 = load.32 i32 %memory:0 %1844
  local.set %6 %1845
  %1846 = const i32 1
  %1847 = local.get %4
  %1848 = int.shl %1846 %1847
  local.set %8 %1848
  %1849 = int.and %1845 %1848
  br.cond %1849 %BB:211 %BB:210

#pred = {%BB:209}
%BB:210:
  %1850 = local.get %2
  %1851 = local.get (arg)%0
  memory.guard %memory:0 %1850 32
  store.32 %memory:0 %1850 %1851
  %1852 = const i32 0
  %1853 = local.get %6
  %1854 = local.get %8
  %1855 = int.or %1853 %1854
  %1856 = const i32 78604
  %1857 = int.add %1852 %1856
  memory.guard %memory:0 %1857 32
  store.32 %memory:0 %1857 %1855
  %1858 = local.get (arg)%0
  %1859 = local.get %2
  %1860 = const i32 24
  %1861 = int.add %1858 %1860
  memory.guard %memory:0 %1861 32
  store.32 %memory:0 %1861 %1859
  %1862 = local.get (arg)%0
  %1863 = local.get (arg)%0
  %1864 = const i32 8
  %1865 = int.add %1862 %1864
  memory.guard %memory:0 %1865 32
  store.32 %memory:0 %1865 %1863
  %1866 = local.get (arg)%0
  %1867 = local.get (arg)%0
  %1868 = const i32 12
  %1869 = int.add %1866 %1868
  memory.guard %memory:0 %1869 32
  store.32 %memory:0 %1869 %1867
  br %BB:233

#pred = {%BB:209}
%BB:211:
  %1870 = local.get %3
  %1871 = const i32 0
  %1872 = const i32 25
  %1873 = local.get %4
  %1874 = const i32 1
  %1875 = int.shr.u %1873 %1874
  %1876 = int.sub %1872 %1875
  %1877 = local.get %4
  %1878 = const i32 31
  %1879 = int.eq %1877 %1878
  %1880 = select %1879 %1871 %1876
  %1881 = int.shl %1870 %1880
  local.set %4 %1881
  %1882 = local.get %2
  memory.guard %memory:0 %1882 32
  %1883 = load.32 i32 %memory:0 %1882
  local.set %6 %1883
  br %BB:212

#pred = {%BB:213, %BB:211}
%BB:212:
  %1884 = local.get %6
  local.set %2 %1884
  %1885 = const i32 4
  %1886 = int.add %1884 %1885
  memory.guard %memory:0 %1886 32
  %1887 = load.32 i32 %memory:0 %1886
  %1888 = const i32 -8
  %1889 = int.and %1887 %1888
  %1890 = local.get %3
  %1891 = int.eq %1889 %1890
  br.cond %1891 %BB:232 %BB:213

#pred = {%BB:212}
%BB:213:
  %1892 = local.get %4
  %1893 = const i32 29
  %1894 = int.shr.u %1892 %1893
  local.set %6 %1894
  %1895 = local.get %4
  %1896 = const i32 1
  %1897 = int.shl %1895 %1896
  local.set %4 %1897
  %1898 = local.get %2
  %1899 = local.get %6
  %1900 = const i32 4
  %1901 = int.and %1899 %1900
  %1902 = int.add %1898 %1901
  %1903 = const i32 16
  %1904 = int.add %1902 %1903
  local.set %8 %1904
  memory.guard %memory:0 %1904 32
  %1905 = load.32 i32 %memory:0 %1904
  local.set %6 %1905
  br.cond %1905 %BB:212 %BB:214

#pred = {%BB:213}
%BB:214:
  %1906 = local.get %8
  %1907 = local.get (arg)%0
  memory.guard %memory:0 %1906 32
  store.32 %memory:0 %1906 %1907
  %1908 = local.get (arg)%0
  %1909 = local.get %2
  %1910 = const i32 24
  %1911 = int.add %1908 %1910
  memory.guard %memory:0 %1911 32
  store.32 %memory:0 %1911 %1909
  %1912 = local.get (arg)%0
  %1913 = local.get (arg)%0
  %1914 = const i32 12
  %1915 = int.add %1912 %1914
  memory.guard %memory:0 %1915 32
  store.32 %memory:0 %1915 %1913
  %1916 = local.get (arg)%0
  %1917 = local.get (arg)%0
  %1918 = const i32 8
  %1919 = int.add %1916 %1918
  memory.guard %memory:0 %1919 32
  store.32 %memory:0 %1919 %1917
  br %BB:233

#pred = {%BB:163}
%BB:215:
  %1920 = local.get %6
  %1921 = const i32 -8
  %1922 = local.get %6
  %1923 = int.sub %1921 %1922
  %1924 = const i32 15
  %1925 = int.and %1923 %1924
  %1926 = const i32 0
  %1927 = local.get %6
  %1928 = const i32 8
  %1929 = int.add %1927 %1928
  %1930 = const i32 15
  %1931 = int.and %1929 %1930
  %1932 = select %1931 %1925 %1926
  local.set %3 %1932
  %1933 = int.add %1920 %1932
  local.set %11 %1933
  %1934 = local.get %5
  %1935 = const i32 -56
  %1936 = int.add %1934 %1935
  local.set %8 %1936
  %1937 = local.get %3
  %1938 = int.sub %1936 %1937
  local.set %3 %1938
  %1939 = const i32 1
  %1940 = int.or %1938 %1939
  %1941 = const i32 4
  %1942 = int.add %1933 %1941
  memory.guard %memory:0 %1942 32
  store.32 %memory:0 %1942 %1940
  %1943 = local.get %6
  %1944 = local.get %8
  %1945 = int.add %1943 %1944
  %1946 = const i32 56
  %1947 = const i32 4
  %1948 = int.add %1945 %1947
  memory.guard %memory:0 %1948 32
  store.32 %memory:0 %1948 %1946
  %1949 = local.get %4
  %1950 = local.get (arg)%0
  %1951 = const i32 55
  %1952 = local.get (arg)%0
  %1953 = int.sub %1951 %1952
  %1954 = const i32 15
  %1955 = int.and %1953 %1954
  %1956 = const i32 0
  %1957 = local.get (arg)%0
  %1958 = const i32 -55
  %1959 = int.add %1957 %1958
  %1960 = const i32 15
  %1961 = int.and %1959 %1960
  %1962 = select %1961 %1955 %1956
  %1963 = int.add %1950 %1962
  %1964 = const i32 -63
  %1965 = int.add %1963 %1964
  local.set %8 %1965
  %1966 = local.get %8
  %1967 = local.get %4
  %1968 = const i32 16
  %1969 = int.add %1967 %1968
  %1970 = int.lt.u %1966 %1969
  %1971 = select %1970 %1949 %1965
  local.set %8 %1971
  %1972 = const i32 35
  %1973 = const i32 4
  %1974 = int.add %1971 %1973
  memory.guard %memory:0 %1974 32
  store.32 %memory:0 %1974 %1972
  %1975 = const i32 0
  %1976 = const i32 0
  %1977 = const i32 79088
  %1978 = int.add %1976 %1977
  memory.guard %memory:0 %1978 32
  %1979 = load.32 i32 %memory:0 %1978
  %1980 = const i32 78628
  %1981 = int.add %1975 %1980
  memory.guard %memory:0 %1981 32
  store.32 %memory:0 %1981 %1979
  %1982 = const i32 0
  %1983 = local.get %3
  %1984 = const i32 78612
  %1985 = int.add %1982 %1984
  memory.guard %memory:0 %1985 32
  store.32 %memory:0 %1985 %1983
  %1986 = const i32 0
  %1987 = local.get %11
  %1988 = const i32 78624
  %1989 = int.add %1986 %1988
  memory.guard %memory:0 %1989 32
  store.32 %memory:0 %1989 %1987
  %1990 = local.get %8
  %1991 = const i32 16
  %1992 = int.add %1990 %1991
  %1993 = const i32 0
  %1994 = const i32 79056
  %1995 = int.add %1993 %1994
  memory.guard %memory:0 %1995 64
  %1996 = load.64 i64 %memory:0 %1995
  memory.guard %memory:0 %1992 64
  store.64 %memory:0 %1992 %1996
  %1997 = local.get %8
  %1998 = const i32 0
  %1999 = const i32 79048
  %2000 = int.add %1998 %1999
  memory.guard %memory:0 %2000 64
  %2001 = load.64 i64 %memory:0 %2000
  %2002 = const i32 8
  %2003 = int.add %1997 %2002
  memory.guard %memory:0 %2003 64
  store.64 %memory:0 %2003 %2001
  %2004 = const i32 0
  %2005 = local.get %8
  %2006 = const i32 8
  %2007 = int.add %2005 %2006
  %2008 = const i32 79056
  %2009 = int.add %2004 %2008
  memory.guard %memory:0 %2009 32
  store.32 %memory:0 %2009 %2007
  %2010 = const i32 0
  %2011 = local.get %5
  %2012 = const i32 79052
  %2013 = int.add %2010 %2012
  memory.guard %memory:0 %2013 32
  store.32 %memory:0 %2013 %2011
  %2014 = const i32 0
  %2015 = local.get %6
  %2016 = const i32 79048
  %2017 = int.add %2014 %2016
  memory.guard %memory:0 %2017 32
  store.32 %memory:0 %2017 %2015
  %2018 = const i32 0
  %2019 = const i32 0
  %2020 = const i32 79060
  %2021 = int.add %2018 %2020
  memory.guard %memory:0 %2021 32
  store.32 %memory:0 %2021 %2019
  %2022 = local.get %8
  %2023 = const i32 36
  %2024 = int.add %2022 %2023
  local.set %3 %2024
  br %BB:216

#pred = {%BB:216, %BB:215}
%BB:216:
  %2025 = local.get %3
  %2026 = const i32 7
  memory.guard %memory:0 %2025 32
  store.32 %memory:0 %2025 %2026
  %2027 = local.get (arg)%0
  %2028 = local.get %3
  %2029 = const i32 4
  %2030 = int.add %2028 %2029
  local.set %3 %2030
  %2031 = int.gt.u %2027 %2030
  br.cond %2031 %BB:216 %BB:217

#pred = {%BB:216}
%BB:217:
  %2032 = local.get %8
  %2033 = local.get %4
  %2034 = int.eq %2032 %2033
  br.cond %2034 %BB:235 %BB:218

#pred = {%BB:217}
%BB:218:
  %2035 = local.get %8
  %2036 = local.get %8
  %2037 = const i32 4
  %2038 = int.add %2036 %2037
  memory.guard %memory:0 %2038 32
  %2039 = load.32 i32 %memory:0 %2038
  %2040 = const i32 -2
  %2041 = int.and %2039 %2040
  %2042 = const i32 4
  %2043 = int.add %2035 %2042
  memory.guard %memory:0 %2043 32
  store.32 %memory:0 %2043 %2041
  %2044 = local.get %8
  %2045 = local.get %8
  %2046 = local.get %4
  %2047 = int.sub %2045 %2046
  local.set %5 %2047
  memory.guard %memory:0 %2044 32
  store.32 %memory:0 %2044 %2047
  %2048 = local.get %4
  %2049 = local.get %5
  %2050 = const i32 1
  %2051 = int.or %2049 %2050
  %2052 = const i32 4
  %2053 = int.add %2048 %2052
  memory.guard %memory:0 %2053 32
  store.32 %memory:0 %2053 %2051
  %2054 = local.get %5
  %2055 = const i32 255
  %2056 = int.gt.u %2054 %2055
  br.cond %2056 %BB:223 %BB:219

#pred = {%BB:218}
%BB:219:
  %2057 = local.get %5
  %2058 = const i32 3
  %2059 = int.shr.u %2057 %2058
  local.set (arg)%0 %2059
  %2060 = const i32 3
  %2061 = int.shl %2059 %2060
  %2062 = const i32 78640
  %2063 = int.add %2061 %2062
  local.set %3 %2063
  %2064 = const i32 0
  %2065 = const i32 78600
  %2066 = int.add %2064 %2065
  memory.guard %memory:0 %2066 32
  %2067 = load.32 i32 %memory:0 %2066
  local.set %6 %2067
  %2068 = const i32 1
  %2069 = local.get (arg)%0
  %2070 = int.shl %2068 %2069
  local.set (arg)%0 %2070
  %2071 = int.and %2067 %2070
  br.cond %2071 %BB:221 %BB:220

#pred = {%BB:219}
%BB:220:
  %2072 = const i32 0
  %2073 = local.get %6
  %2074 = local.get (arg)%0
  %2075 = int.or %2073 %2074
  %2076 = const i32 78600
  %2077 = int.add %2072 %2076
  memory.guard %memory:0 %2077 32
  store.32 %memory:0 %2077 %2075
  %2078 = local.get %3
  local.set (arg)%0 %2078
  br %BB:222

#pred = {%BB:219}
%BB:221:
  %2079 = local.get %3
  %2080 = const i32 8
  %2081 = int.add %2079 %2080
  memory.guard %memory:0 %2081 32
  %2082 = load.32 i32 %memory:0 %2081
  local.set (arg)%0 %2082
  br %BB:222

#pred = {%BB:221, %BB:220}
%BB:222:
  %2083 = local.get (arg)%0
  %2084 = local.get %4
  %2085 = const i32 12
  %2086 = int.add %2083 %2085
  memory.guard %memory:0 %2086 32
  store.32 %memory:0 %2086 %2084
  %2087 = local.get %3
  %2088 = local.get %4
  %2089 = const i32 8
  %2090 = int.add %2087 %2089
  memory.guard %memory:0 %2090 32
  store.32 %memory:0 %2090 %2088
  %2091 = local.get %4
  %2092 = local.get %3
  %2093 = const i32 12
  %2094 = int.add %2091 %2093
  memory.guard %memory:0 %2094 32
  store.32 %memory:0 %2094 %2092
  %2095 = local.get %4
  %2096 = local.get (arg)%0
  %2097 = const i32 8
  %2098 = int.add %2095 %2097
  memory.guard %memory:0 %2098 32
  store.32 %memory:0 %2098 %2096
  br %BB:235

#pred = {%BB:218}
%BB:223:
  %2099 = const i32 0
  local.set %3 %2099
  %2100 = local.get %5
  %2101 = const i32 8
  %2102 = int.shr.u %2100 %2101
  local.set (arg)%0 %2102
  %2103 = int.eqz %2102
  br.cond %2103 %BB:226 %BB:224

#pred = {%BB:223}
%BB:224:
  %2104 = const i32 31
  local.set %3 %2104
  %2105 = local.get %5
  %2106 = const i32 16777215
  %2107 = int.gt.u %2105 %2106
  br.cond %2107 %BB:226 %BB:225

#pred = {%BB:224}
%BB:225:
  %2108 = local.get (arg)%0
  %2109 = local.get (arg)%0
  %2110 = const i32 1048320
  %2111 = int.add %2109 %2110
  %2112 = const i32 16
  %2113 = int.shr.u %2111 %2112
  %2114 = const i32 8
  %2115 = int.and %2113 %2114
  local.set %3 %2115
  %2116 = int.shl %2108 %2115
  local.set (arg)%0 %2116
  %2117 = local.get (arg)%0
  %2118 = const i32 520192
  %2119 = int.add %2117 %2118
  %2120 = const i32 16
  %2121 = int.shr.u %2119 %2120
  %2122 = const i32 4
  %2123 = int.and %2121 %2122
  local.set (arg)%0 %2123
  %2124 = int.shl %2116 %2123
  local.set %6 %2124
  %2125 = local.get %6
  %2126 = const i32 245760
  %2127 = int.add %2125 %2126
  %2128 = const i32 16
  %2129 = int.shr.u %2127 %2128
  %2130 = const i32 2
  %2131 = int.and %2129 %2130
  local.set %6 %2131
  %2132 = int.shl %2124 %2131
  %2133 = const i32 15
  %2134 = int.shr.u %2132 %2133
  %2135 = local.get (arg)%0
  %2136 = local.get %3
  %2137 = int.or %2135 %2136
  %2138 = local.get %6
  %2139 = int.or %2137 %2138
  %2140 = int.sub %2134 %2139
  local.set %3 %2140
  %2141 = const i32 1
  %2142 = int.shl %2140 %2141
  %2143 = local.get %5
  %2144 = local.get %3
  %2145 = const i32 21
  %2146 = int.add %2144 %2145
  %2147 = int.shr.u %2143 %2146
  %2148 = const i32 1
  %2149 = int.and %2147 %2148
  %2150 = int.or %2142 %2149
  %2151 = const i32 28
  %2152 = int.add %2150 %2151
  local.set %3 %2152
  br %BB:226

#pred = {%BB:225, %BB:224, %BB:223}
%BB:226:
  %2153 = local.get %4
  %2154 = const i64 0
  %2155 = const i32 16
  %2156 = int.add %2153 %2155
  memory.guard %memory:0 %2156 64
  store.64 %memory:0 %2156 %2154
  %2157 = local.get %4
  %2158 = const i32 28
  %2159 = int.add %2157 %2158
  %2160 = local.get %3
  memory.guard %memory:0 %2159 32
  store.32 %memory:0 %2159 %2160
  %2161 = local.get %3
  %2162 = const i32 2
  %2163 = int.shl %2161 %2162
  %2164 = const i32 78904
  %2165 = int.add %2163 %2164
  local.set (arg)%0 %2165
  %2166 = const i32 0
  %2167 = const i32 78604
  %2168 = int.add %2166 %2167
  memory.guard %memory:0 %2168 32
  %2169 = load.32 i32 %memory:0 %2168
  local.set %6 %2169
  %2170 = const i32 1
  %2171 = local.get %3
  %2172 = int.shl %2170 %2171
  local.set %8 %2172
  %2173 = int.and %2169 %2172
  br.cond %2173 %BB:228 %BB:227

#pred = {%BB:226}
%BB:227:
  %2174 = local.get (arg)%0
  %2175 = local.get %4
  memory.guard %memory:0 %2174 32
  store.32 %memory:0 %2174 %2175
  %2176 = const i32 0
  %2177 = local.get %6
  %2178 = local.get %8
  %2179 = int.or %2177 %2178
  %2180 = const i32 78604
  %2181 = int.add %2176 %2180
  memory.guard %memory:0 %2181 32
  store.32 %memory:0 %2181 %2179
  %2182 = local.get %4
  %2183 = const i32 24
  %2184 = int.add %2182 %2183
  %2185 = local.get (arg)%0
  memory.guard %memory:0 %2184 32
  store.32 %memory:0 %2184 %2185
  %2186 = local.get %4
  %2187 = local.get %4
  %2188 = const i32 8
  %2189 = int.add %2186 %2188
  memory.guard %memory:0 %2189 32
  store.32 %memory:0 %2189 %2187
  %2190 = local.get %4
  %2191 = local.get %4
  %2192 = const i32 12
  %2193 = int.add %2190 %2192
  memory.guard %memory:0 %2193 32
  store.32 %memory:0 %2193 %2191
  br %BB:235

#pred = {%BB:226}
%BB:228:
  %2194 = local.get %5
  %2195 = const i32 0
  %2196 = const i32 25
  %2197 = local.get %3
  %2198 = const i32 1
  %2199 = int.shr.u %2197 %2198
  %2200 = int.sub %2196 %2199
  %2201 = local.get %3
  %2202 = const i32 31
  %2203 = int.eq %2201 %2202
  %2204 = select %2203 %2195 %2200
  %2205 = int.shl %2194 %2204
  local.set %3 %2205
  %2206 = local.get (arg)%0
  memory.guard %memory:0 %2206 32
  %2207 = load.32 i32 %memory:0 %2206
  local.set %6 %2207
  br %BB:229

#pred = {%BB:230, %BB:228}
%BB:229:
  %2208 = local.get %6
  local.set (arg)%0 %2208
  %2209 = const i32 4
  %2210 = int.add %2208 %2209
  memory.guard %memory:0 %2210 32
  %2211 = load.32 i32 %memory:0 %2210
  %2212 = const i32 -8
  %2213 = int.and %2211 %2212
  %2214 = local.get %5
  %2215 = int.eq %2213 %2214
  br.cond %2215 %BB:234 %BB:230

#pred = {%BB:229}
%BB:230:
  %2216 = local.get %3
  %2217 = const i32 29
  %2218 = int.shr.u %2216 %2217
  local.set %6 %2218
  %2219 = local.get %3
  %2220 = const i32 1
  %2221 = int.shl %2219 %2220
  local.set %3 %2221
  %2222 = local.get (arg)%0
  %2223 = local.get %6
  %2224 = const i32 4
  %2225 = int.and %2223 %2224
  %2226 = int.add %2222 %2225
  %2227 = const i32 16
  %2228 = int.add %2226 %2227
  local.set %8 %2228
  memory.guard %memory:0 %2228 32
  %2229 = load.32 i32 %memory:0 %2228
  local.set %6 %2229
  br.cond %2229 %BB:229 %BB:231

#pred = {%BB:230}
%BB:231:
  %2230 = local.get %8
  %2231 = local.get %4
  memory.guard %memory:0 %2230 32
  store.32 %memory:0 %2230 %2231
  %2232 = local.get %4
  %2233 = const i32 24
  %2234 = int.add %2232 %2233
  %2235 = local.get (arg)%0
  memory.guard %memory:0 %2234 32
  store.32 %memory:0 %2234 %2235
  %2236 = local.get %4
  %2237 = local.get %4
  %2238 = const i32 12
  %2239 = int.add %2236 %2238
  memory.guard %memory:0 %2239 32
  store.32 %memory:0 %2239 %2237
  %2240 = local.get %4
  %2241 = local.get %4
  %2242 = const i32 8
  %2243 = int.add %2240 %2242
  memory.guard %memory:0 %2243 32
  store.32 %memory:0 %2243 %2241
  br %BB:235

#pred = {%BB:212}
%BB:232:
  %2244 = local.get %2
  %2245 = const i32 8
  %2246 = int.add %2244 %2245
  memory.guard %memory:0 %2246 32
  %2247 = load.32 i32 %memory:0 %2246
  local.set %3 %2247
  %2248 = local.get %2
  %2249 = local.get (arg)%0
  %2250 = const i32 8
  %2251 = int.add %2248 %2250
  memory.guard %memory:0 %2251 32
  store.32 %memory:0 %2251 %2249
  %2252 = local.get %3
  %2253 = local.get (arg)%0
  %2254 = const i32 12
  %2255 = int.add %2252 %2254
  memory.guard %memory:0 %2255 32
  store.32 %memory:0 %2255 %2253
  %2256 = local.get (arg)%0
  %2257 = const i32 0
  %2258 = const i32 24
  %2259 = int.add %2256 %2258
  memory.guard %memory:0 %2259 32
  store.32 %memory:0 %2259 %2257
  %2260 = local.get (arg)%0
  %2261 = local.get %3
  %2262 = const i32 8
  %2263 = int.add %2260 %2262
  memory.guard %memory:0 %2263 32
  store.32 %memory:0 %2263 %2261
  %2264 = local.get (arg)%0
  %2265 = local.get %2
  %2266 = const i32 12
  %2267 = int.add %2264 %2266
  memory.guard %memory:0 %2267 32
  store.32 %memory:0 %2267 %2265
  br %BB:233

#pred = {%BB:169, %BB:210, %BB:167, %BB:232, %BB:214, %BB:205}
%BB:233:
  %2268 = local.get %11
  %2269 = const i32 8
  %2270 = int.add %2268 %2269
  local.set %3 %2270
  br %BB:286

#pred = {%BB:229}
%BB:234:
  %2271 = local.get (arg)%0
  %2272 = const i32 8
  %2273 = int.add %2271 %2272
  memory.guard %memory:0 %2273 32
  %2274 = load.32 i32 %memory:0 %2273
  local.set %3 %2274
  %2275 = local.get (arg)%0
  %2276 = local.get %4
  %2277 = const i32 8
  %2278 = int.add %2275 %2277
  memory.guard %memory:0 %2278 32
  store.32 %memory:0 %2278 %2276
  %2279 = local.get %3
  %2280 = local.get %4
  %2281 = const i32 12
  %2282 = int.add %2279 %2281
  memory.guard %memory:0 %2282 32
  store.32 %memory:0 %2282 %2280
  %2283 = local.get %4
  %2284 = const i32 24
  %2285 = int.add %2283 %2284
  %2286 = const i32 0
  memory.guard %memory:0 %2285 32
  store.32 %memory:0 %2285 %2286
  %2287 = local.get %4
  %2288 = local.get %3
  %2289 = const i32 8
  %2290 = int.add %2287 %2289
  memory.guard %memory:0 %2290 32
  store.32 %memory:0 %2290 %2288
  %2291 = local.get %4
  %2292 = local.get (arg)%0
  %2293 = const i32 12
  %2294 = int.add %2291 %2293
  memory.guard %memory:0 %2294 32
  store.32 %memory:0 %2294 %2292
  br %BB:235

#pred = {%BB:152, %BB:148, %BB:222, %BB:234, %BB:217, %BB:227, %BB:231}
%BB:235:
  %2295 = const i32 0
  %2296 = const i32 78612
  %2297 = int.add %2295 %2296
  memory.guard %memory:0 %2297 32
  %2298 = load.32 i32 %memory:0 %2297
  local.set %3 %2298
  %2299 = local.get %2
  %2300 = int.le.u %2298 %2299
  br.cond %2300 %BB:237 %BB:236

#pred = {%BB:235}
%BB:236:
  %2301 = const i32 0
  %2302 = const i32 78624
  %2303 = int.add %2301 %2302
  memory.guard %memory:0 %2303 32
  %2304 = load.32 i32 %memory:0 %2303
  local.set %4 %2304
  %2305 = local.get %2
  %2306 = int.add %2304 %2305
  local.set (arg)%0 %2306
  %2307 = local.get %3
  %2308 = local.get %2
  %2309 = int.sub %2307 %2308
  local.set %3 %2309
  %2310 = const i32 1
  %2311 = int.or %2309 %2310
  %2312 = const i32 4
  %2313 = int.add %2306 %2312
  memory.guard %memory:0 %2313 32
  store.32 %memory:0 %2313 %2311
  %2314 = const i32 0
  %2315 = local.get %3
  %2316 = const i32 78612
  %2317 = int.add %2314 %2316
  memory.guard %memory:0 %2317 32
  store.32 %memory:0 %2317 %2315
  %2318 = const i32 0
  %2319 = local.get (arg)%0
  %2320 = const i32 78624
  %2321 = int.add %2318 %2320
  memory.guard %memory:0 %2321 32
  store.32 %memory:0 %2321 %2319
  %2322 = local.get %4
  %2323 = local.get %2
  %2324 = const i32 3
  %2325 = int.or %2323 %2324
  %2326 = const i32 4
  %2327 = int.add %2322 %2326
  memory.guard %memory:0 %2327 32
  store.32 %memory:0 %2327 %2325
  %2328 = local.get %4
  %2329 = const i32 8
  %2330 = int.add %2328 %2329
  local.set %3 %2330
  br %BB:286

#pred = {%BB:133, %BB:131, %BB:235, %BB:130, %BB:132, %BB:129}
%BB:237:
  %2331 = const i32 0
  local.set %3 %2331
  %2332 = const i32 0
  %2333 = const i32 48
  %2334 = const i32 79096
  %2335 = int.add %2332 %2334
  memory.guard %memory:0 %2335 32
  store.32 %memory:0 %2335 %2333
  br %BB:286

#pred = {%BB:125, %BB:75, %BB:68}
%BB:238:
  %2336 = local.get %11
  %2337 = int.eqz %2336
  br.cond %2337 %BB:248 %BB:239

#pred = {%BB:238}
%BB:239:
  %2338 = local.get %8
  %2339 = local.get %8
  %2340 = const i32 28
  %2341 = int.add %2339 %2340
  memory.guard %memory:0 %2341 32
  %2342 = load.32 i32 %memory:0 %2341
  local.set %4 %2342
  %2343 = const i32 2
  %2344 = int.shl %2342 %2343
  %2345 = const i32 78904
  %2346 = int.add %2344 %2345
  local.set %3 %2346
  memory.guard %memory:0 %2346 32
  %2347 = load.32 i32 %memory:0 %2346
  %2348 = int.ne %2338 %2347
  br.cond %2348 %BB:242 %BB:240

#pred = {%BB:239}
%BB:240:
  %2349 = local.get %3
  %2350 = local.get %6
  memory.guard %memory:0 %2349 32
  store.32 %memory:0 %2349 %2350
  %2351 = local.get %6
  br.cond %2351 %BB:244 %BB:241

#pred = {%BB:240}
%BB:241:
  %2352 = const i32 0
  %2353 = local.get %7
  %2354 = const i32 -2
  %2355 = local.get %4
  %2356 = int.rotl %2354 %2355
  %2357 = int.and %2353 %2356
  local.set %7 %2357
  %2358 = const i32 78604
  %2359 = int.add %2352 %2358
  memory.guard %memory:0 %2359 32
  store.32 %memory:0 %2359 %2357
  br %BB:248

#pred = {%BB:239}
%BB:242:
  %2360 = local.get %11
  %2361 = const i32 16
  %2362 = const i32 20
  %2363 = local.get %11
  %2364 = const i32 16
  %2365 = int.add %2363 %2364
  memory.guard %memory:0 %2365 32
  %2366 = load.32 i32 %memory:0 %2365
  %2367 = local.get %8
  %2368 = int.eq %2366 %2367
  %2369 = select %2368 %2361 %2362
  %2370 = int.add %2360 %2369
  %2371 = local.get %6
  memory.guard %memory:0 %2370 32
  store.32 %memory:0 %2370 %2371
  %2372 = local.get %6
  %2373 = int.eqz %2372
  br.cond %2373 %BB:248 %BB:243

#pred = {%BB:242}
%BB:243:
  br %BB:244

#pred = {%BB:243, %BB:240}
%BB:244:
  %2374 = local.get %6
  %2375 = local.get %11
  %2376 = const i32 24
  %2377 = int.add %2374 %2376
  memory.guard %memory:0 %2377 32
  store.32 %memory:0 %2377 %2375
  %2378 = local.get %8
  %2379 = const i32 16
  %2380 = int.add %2378 %2379
  memory.guard %memory:0 %2380 32
  %2381 = load.32 i32 %memory:0 %2380
  local.set %3 %2381
  %2382 = int.eqz %2381
  br.cond %2382 %BB:246 %BB:245

#pred = {%BB:244}
%BB:245:
  %2383 = local.get %6
  %2384 = local.get %3
  %2385 = const i32 16
  %2386 = int.add %2383 %2385
  memory.guard %memory:0 %2386 32
  store.32 %memory:0 %2386 %2384
  %2387 = local.get %3
  %2388 = local.get %6
  %2389 = const i32 24
  %2390 = int.add %2387 %2389
  memory.guard %memory:0 %2390 32
  store.32 %memory:0 %2390 %2388
  br %BB:246

#pred = {%BB:245, %BB:244}
%BB:246:
  %2391 = local.get %8
  %2392 = const i32 20
  %2393 = int.add %2391 %2392
  memory.guard %memory:0 %2393 32
  %2394 = load.32 i32 %memory:0 %2393
  local.set %3 %2394
  %2395 = int.eqz %2394
  br.cond %2395 %BB:248 %BB:247

#pred = {%BB:246}
%BB:247:
  %2396 = local.get %6
  %2397 = const i32 20
  %2398 = int.add %2396 %2397
  %2399 = local.get %3
  memory.guard %memory:0 %2398 32
  store.32 %memory:0 %2398 %2399
  %2400 = local.get %3
  %2401 = local.get %6
  %2402 = const i32 24
  %2403 = int.add %2400 %2402
  memory.guard %memory:0 %2403 32
  store.32 %memory:0 %2403 %2401
  br %BB:248

#pred = {%BB:238, %BB:241, %BB:242, %BB:246, %BB:247}
%BB:248:
  %2404 = local.get (arg)%0
  %2405 = const i32 15
  %2406 = int.gt.u %2404 %2405
  br.cond %2406 %BB:250 %BB:249

#pred = {%BB:248}
%BB:249:
  %2407 = local.get %8
  %2408 = local.get (arg)%0
  %2409 = local.get %2
  %2410 = int.add %2408 %2409
  local.set %3 %2410
  %2411 = const i32 3
  %2412 = int.or %2410 %2411
  %2413 = const i32 4
  %2414 = int.add %2407 %2413
  memory.guard %memory:0 %2414 32
  store.32 %memory:0 %2414 %2412
  %2415 = local.get %8
  %2416 = local.get %3
  %2417 = int.add %2415 %2416
  local.set %3 %2417
  %2418 = local.get %3
  %2419 = const i32 4
  %2420 = int.add %2418 %2419
  memory.guard %memory:0 %2420 32
  %2421 = load.32 i32 %memory:0 %2420
  %2422 = const i32 1
  %2423 = int.or %2421 %2422
  %2424 = const i32 4
  %2425 = int.add %2417 %2424
  memory.guard %memory:0 %2425 32
  store.32 %memory:0 %2425 %2423
  br %BB:266

#pred = {%BB:248}
%BB:250:
  %2426 = local.get %8
  %2427 = local.get %2
  %2428 = int.add %2426 %2427
  local.set %6 %2428
  %2429 = local.get (arg)%0
  %2430 = const i32 1
  %2431 = int.or %2429 %2430
  %2432 = const i32 4
  %2433 = int.add %2428 %2432
  memory.guard %memory:0 %2433 32
  store.32 %memory:0 %2433 %2431
  %2434 = local.get %8
  %2435 = local.get %2
  %2436 = const i32 3
  %2437 = int.or %2435 %2436
  %2438 = const i32 4
  %2439 = int.add %2434 %2438
  memory.guard %memory:0 %2439 32
  store.32 %memory:0 %2439 %2437
  %2440 = local.get %6
  %2441 = local.get (arg)%0
  %2442 = int.add %2440 %2441
  %2443 = local.get (arg)%0
  memory.guard %memory:0 %2442 32
  store.32 %memory:0 %2442 %2443
  %2444 = local.get (arg)%0
  %2445 = const i32 255
  %2446 = int.gt.u %2444 %2445
  br.cond %2446 %BB:255 %BB:251

#pred = {%BB:250}
%BB:251:
  %2447 = local.get (arg)%0
  %2448 = const i32 3
  %2449 = int.shr.u %2447 %2448
  local.set %4 %2449
  %2450 = const i32 3
  %2451 = int.shl %2449 %2450
  %2452 = const i32 78640
  %2453 = int.add %2451 %2452
  local.set %3 %2453
  %2454 = const i32 0
  %2455 = const i32 78600
  %2456 = int.add %2454 %2455
  memory.guard %memory:0 %2456 32
  %2457 = load.32 i32 %memory:0 %2456
  local.set (arg)%0 %2457
  %2458 = const i32 1
  %2459 = local.get %4
  %2460 = int.shl %2458 %2459
  local.set %4 %2460
  %2461 = int.and %2457 %2460
  br.cond %2461 %BB:253 %BB:252

#pred = {%BB:251}
%BB:252:
  %2462 = const i32 0
  %2463 = local.get (arg)%0
  %2464 = local.get %4
  %2465 = int.or %2463 %2464
  %2466 = const i32 78600
  %2467 = int.add %2462 %2466
  memory.guard %memory:0 %2467 32
  store.32 %memory:0 %2467 %2465
  %2468 = local.get %3
  local.set %4 %2468
  br %BB:254

#pred = {%BB:251}
%BB:253:
  %2469 = local.get %3
  %2470 = const i32 8
  %2471 = int.add %2469 %2470
  memory.guard %memory:0 %2471 32
  %2472 = load.32 i32 %memory:0 %2471
  local.set %4 %2472
  br %BB:254

#pred = {%BB:253, %BB:252}
%BB:254:
  %2473 = local.get %4
  %2474 = local.get %6
  %2475 = const i32 12
  %2476 = int.add %2473 %2475
  memory.guard %memory:0 %2476 32
  store.32 %memory:0 %2476 %2474
  %2477 = local.get %3
  %2478 = local.get %6
  %2479 = const i32 8
  %2480 = int.add %2477 %2479
  memory.guard %memory:0 %2480 32
  store.32 %memory:0 %2480 %2478
  %2481 = local.get %6
  %2482 = local.get %3
  %2483 = const i32 12
  %2484 = int.add %2481 %2483
  memory.guard %memory:0 %2484 32
  store.32 %memory:0 %2484 %2482
  %2485 = local.get %6
  %2486 = local.get %4
  %2487 = const i32 8
  %2488 = int.add %2485 %2487
  memory.guard %memory:0 %2488 32
  store.32 %memory:0 %2488 %2486
  br %BB:266

#pred = {%BB:250}
%BB:255:
  %2489 = local.get (arg)%0
  %2490 = const i32 8
  %2491 = int.shr.u %2489 %2490
  local.set %4 %2491
  br.cond %2491 %BB:257 %BB:256

#pred = {%BB:255}
%BB:256:
  %2492 = const i32 0
  local.set %3 %2492
  br %BB:259

#pred = {%BB:255}
%BB:257:
  %2493 = const i32 31
  local.set %3 %2493
  %2494 = local.get (arg)%0
  %2495 = const i32 16777215
  %2496 = int.gt.u %2494 %2495
  br.cond %2496 %BB:259 %BB:258

#pred = {%BB:257}
%BB:258:
  %2497 = local.get %4
  %2498 = local.get %4
  %2499 = const i32 1048320
  %2500 = int.add %2498 %2499
  %2501 = const i32 16
  %2502 = int.shr.u %2500 %2501
  %2503 = const i32 8
  %2504 = int.and %2502 %2503
  local.set %3 %2504
  %2505 = int.shl %2497 %2504
  local.set %4 %2505
  %2506 = local.get %4
  %2507 = const i32 520192
  %2508 = int.add %2506 %2507
  %2509 = const i32 16
  %2510 = int.shr.u %2508 %2509
  %2511 = const i32 4
  %2512 = int.and %2510 %2511
  local.set %4 %2512
  %2513 = int.shl %2505 %2512
  local.set %2 %2513
  %2514 = local.get %2
  %2515 = const i32 245760
  %2516 = int.add %2514 %2515
  %2517 = const i32 16
  %2518 = int.shr.u %2516 %2517
  %2519 = const i32 2
  %2520 = int.and %2518 %2519
  local.set %2 %2520
  %2521 = int.shl %2513 %2520
  %2522 = const i32 15
  %2523 = int.shr.u %2521 %2522
  %2524 = local.get %4
  %2525 = local.get %3
  %2526 = int.or %2524 %2525
  %2527 = local.get %2
  %2528 = int.or %2526 %2527
  %2529 = int.sub %2523 %2528
  local.set %3 %2529
  %2530 = const i32 1
  %2531 = int.shl %2529 %2530
  %2532 = local.get (arg)%0
  %2533 = local.get %3
  %2534 = const i32 21
  %2535 = int.add %2533 %2534
  %2536 = int.shr.u %2532 %2535
  %2537 = const i32 1
  %2538 = int.and %2536 %2537
  %2539 = int.or %2531 %2538
  %2540 = const i32 28
  %2541 = int.add %2539 %2540
  local.set %3 %2541
  br %BB:259

#pred = {%BB:258, %BB:257, %BB:256}
%BB:259:
  %2542 = local.get %6
  %2543 = local.get %3
  %2544 = const i32 28
  %2545 = int.add %2542 %2544
  memory.guard %memory:0 %2545 32
  store.32 %memory:0 %2545 %2543
  %2546 = local.get %6
  %2547 = const i64 0
  %2548 = const i32 16
  %2549 = int.add %2546 %2548
  memory.guard %memory:0 %2549 64
  store.64 %memory:0 %2549 %2547
  %2550 = local.get %3
  %2551 = const i32 2
  %2552 = int.shl %2550 %2551
  %2553 = const i32 78904
  %2554 = int.add %2552 %2553
  local.set %4 %2554
  %2555 = local.get %7
  %2556 = const i32 1
  %2557 = local.get %3
  %2558 = int.shl %2556 %2557
  local.set %2 %2558
  %2559 = int.and %2555 %2558
  br.cond %2559 %BB:261 %BB:260

#pred = {%BB:259}
%BB:260:
  %2560 = local.get %4
  %2561 = local.get %6
  memory.guard %memory:0 %2560 32
  store.32 %memory:0 %2560 %2561
  %2562 = const i32 0
  %2563 = local.get %7
  %2564 = local.get %2
  %2565 = int.or %2563 %2564
  %2566 = const i32 78604
  %2567 = int.add %2562 %2566
  memory.guard %memory:0 %2567 32
  store.32 %memory:0 %2567 %2565
  %2568 = local.get %6
  %2569 = local.get %4
  %2570 = const i32 24
  %2571 = int.add %2568 %2570
  memory.guard %memory:0 %2571 32
  store.32 %memory:0 %2571 %2569
  %2572 = local.get %6
  %2573 = local.get %6
  %2574 = const i32 8
  %2575 = int.add %2572 %2574
  memory.guard %memory:0 %2575 32
  store.32 %memory:0 %2575 %2573
  %2576 = local.get %6
  %2577 = local.get %6
  %2578 = const i32 12
  %2579 = int.add %2576 %2578
  memory.guard %memory:0 %2579 32
  store.32 %memory:0 %2579 %2577
  br %BB:266

#pred = {%BB:259}
%BB:261:
  %2580 = local.get (arg)%0
  %2581 = const i32 0
  %2582 = const i32 25
  %2583 = local.get %3
  %2584 = const i32 1
  %2585 = int.shr.u %2583 %2584
  %2586 = int.sub %2582 %2585
  %2587 = local.get %3
  %2588 = const i32 31
  %2589 = int.eq %2587 %2588
  %2590 = select %2589 %2581 %2586
  %2591 = int.shl %2580 %2590
  local.set %3 %2591
  %2592 = local.get %4
  memory.guard %memory:0 %2592 32
  %2593 = load.32 i32 %memory:0 %2592
  local.set %2 %2593
  br %BB:262

#pred = {%BB:263, %BB:261}
%BB:262:
  %2594 = local.get %2
  local.set %4 %2594
  %2595 = const i32 4
  %2596 = int.add %2594 %2595
  memory.guard %memory:0 %2596 32
  %2597 = load.32 i32 %memory:0 %2596
  %2598 = const i32 -8
  %2599 = int.and %2597 %2598
  %2600 = local.get (arg)%0
  %2601 = int.eq %2599 %2600
  br.cond %2601 %BB:265 %BB:263

#pred = {%BB:262}
%BB:263:
  %2602 = local.get %3
  %2603 = const i32 29
  %2604 = int.shr.u %2602 %2603
  local.set %2 %2604
  %2605 = local.get %3
  %2606 = const i32 1
  %2607 = int.shl %2605 %2606
  local.set %3 %2607
  %2608 = local.get %4
  %2609 = local.get %2
  %2610 = const i32 4
  %2611 = int.and %2609 %2610
  %2612 = int.add %2608 %2611
  %2613 = const i32 16
  %2614 = int.add %2612 %2613
  local.set %5 %2614
  memory.guard %memory:0 %2614 32
  %2615 = load.32 i32 %memory:0 %2614
  local.set %2 %2615
  br.cond %2615 %BB:262 %BB:264

#pred = {%BB:263}
%BB:264:
  %2616 = local.get %5
  %2617 = local.get %6
  memory.guard %memory:0 %2616 32
  store.32 %memory:0 %2616 %2617
  %2618 = local.get %6
  %2619 = local.get %4
  %2620 = const i32 24
  %2621 = int.add %2618 %2620
  memory.guard %memory:0 %2621 32
  store.32 %memory:0 %2621 %2619
  %2622 = local.get %6
  %2623 = local.get %6
  %2624 = const i32 12
  %2625 = int.add %2622 %2624
  memory.guard %memory:0 %2625 32
  store.32 %memory:0 %2625 %2623
  %2626 = local.get %6
  %2627 = local.get %6
  %2628 = const i32 8
  %2629 = int.add %2626 %2628
  memory.guard %memory:0 %2629 32
  store.32 %memory:0 %2629 %2627
  br %BB:266

#pred = {%BB:262}
%BB:265:
  %2630 = local.get %4
  %2631 = const i32 8
  %2632 = int.add %2630 %2631
  memory.guard %memory:0 %2632 32
  %2633 = load.32 i32 %memory:0 %2632
  local.set %3 %2633
  %2634 = local.get %4
  %2635 = local.get %6
  %2636 = const i32 8
  %2637 = int.add %2634 %2636
  memory.guard %memory:0 %2637 32
  store.32 %memory:0 %2637 %2635
  %2638 = local.get %3
  %2639 = local.get %6
  %2640 = const i32 12
  %2641 = int.add %2638 %2640
  memory.guard %memory:0 %2641 32
  store.32 %memory:0 %2641 %2639
  %2642 = local.get %6
  %2643 = const i32 0
  %2644 = const i32 24
  %2645 = int.add %2642 %2644
  memory.guard %memory:0 %2645 32
  store.32 %memory:0 %2645 %2643
  %2646 = local.get %6
  %2647 = local.get %3
  %2648 = const i32 8
  %2649 = int.add %2646 %2648
  memory.guard %memory:0 %2649 32
  store.32 %memory:0 %2649 %2647
  %2650 = local.get %6
  %2651 = local.get %4
  %2652 = const i32 12
  %2653 = int.add %2650 %2652
  memory.guard %memory:0 %2653 32
  store.32 %memory:0 %2653 %2651
  br %BB:266

#pred = {%BB:265, %BB:260, %BB:249, %BB:254, %BB:264}
%BB:266:
  %2654 = local.get %8
  %2655 = const i32 8
  %2656 = int.add %2654 %2655
  local.set %3 %2656
  br %BB:286

#pred = {%BB:124, %BB:39, %BB:32}
%BB:267:
  %2657 = local.get %10
  %2658 = int.eqz %2657
  br.cond %2658 %BB:277 %BB:268

#pred = {%BB:267}
%BB:268:
  %2659 = local.get %6
  %2660 = local.get %6
  %2661 = const i32 28
  %2662 = int.add %2660 %2661
  memory.guard %memory:0 %2662 32
  %2663 = load.32 i32 %memory:0 %2662
  local.set (arg)%0 %2663
  %2664 = const i32 2
  %2665 = int.shl %2663 %2664
  %2666 = const i32 78904
  %2667 = int.add %2665 %2666
  local.set %3 %2667
  memory.guard %memory:0 %2667 32
  %2668 = load.32 i32 %memory:0 %2667
  %2669 = int.ne %2659 %2668
  br.cond %2669 %BB:271 %BB:269

#pred = {%BB:268}
%BB:269:
  %2670 = local.get %3
  %2671 = local.get %8
  memory.guard %memory:0 %2670 32
  store.32 %memory:0 %2670 %2671
  %2672 = local.get %8
  br.cond %2672 %BB:273 %BB:270

#pred = {%BB:269}
%BB:270:
  %2673 = const i32 0
  %2674 = local.get %9
  %2675 = const i32 -2
  %2676 = local.get (arg)%0
  %2677 = int.rotl %2675 %2676
  %2678 = int.and %2674 %2677
  %2679 = const i32 78604
  %2680 = int.add %2673 %2679
  memory.guard %memory:0 %2680 32
  store.32 %memory:0 %2680 %2678
  br %BB:277

#pred = {%BB:268}
%BB:271:
  %2681 = local.get %10
  %2682 = const i32 16
  %2683 = const i32 20
  %2684 = local.get %10
  %2685 = const i32 16
  %2686 = int.add %2684 %2685
  memory.guard %memory:0 %2686 32
  %2687 = load.32 i32 %memory:0 %2686
  %2688 = local.get %6
  %2689 = int.eq %2687 %2688
  %2690 = select %2689 %2682 %2683
  %2691 = int.add %2681 %2690
  %2692 = local.get %8
  memory.guard %memory:0 %2691 32
  store.32 %memory:0 %2691 %2692
  %2693 = local.get %8
  %2694 = int.eqz %2693
  br.cond %2694 %BB:277 %BB:272

#pred = {%BB:271}
%BB:272:
  br %BB:273

#pred = {%BB:272, %BB:269}
%BB:273:
  %2695 = local.get %8
  %2696 = local.get %10
  %2697 = const i32 24
  %2698 = int.add %2695 %2697
  memory.guard %memory:0 %2698 32
  store.32 %memory:0 %2698 %2696
  %2699 = local.get %6
  %2700 = const i32 16
  %2701 = int.add %2699 %2700
  memory.guard %memory:0 %2701 32
  %2702 = load.32 i32 %memory:0 %2701
  local.set %3 %2702
  %2703 = int.eqz %2702
  br.cond %2703 %BB:275 %BB:274

#pred = {%BB:273}
%BB:274:
  %2704 = local.get %8
  %2705 = local.get %3
  %2706 = const i32 16
  %2707 = int.add %2704 %2706
  memory.guard %memory:0 %2707 32
  store.32 %memory:0 %2707 %2705
  %2708 = local.get %3
  %2709 = local.get %8
  %2710 = const i32 24
  %2711 = int.add %2708 %2710
  memory.guard %memory:0 %2711 32
  store.32 %memory:0 %2711 %2709
  br %BB:275

#pred = {%BB:274, %BB:273}
%BB:275:
  %2712 = local.get %6
  %2713 = const i32 20
  %2714 = int.add %2712 %2713
  memory.guard %memory:0 %2714 32
  %2715 = load.32 i32 %memory:0 %2714
  local.set %3 %2715
  %2716 = int.eqz %2715
  br.cond %2716 %BB:277 %BB:276

#pred = {%BB:275}
%BB:276:
  %2717 = local.get %8
  %2718 = const i32 20
  %2719 = int.add %2717 %2718
  %2720 = local.get %3
  memory.guard %memory:0 %2719 32
  store.32 %memory:0 %2719 %2720
  %2721 = local.get %3
  %2722 = local.get %8
  %2723 = const i32 24
  %2724 = int.add %2721 %2723
  memory.guard %memory:0 %2724 32
  store.32 %memory:0 %2724 %2722
  br %BB:277

#pred = {%BB:267, %BB:276, %BB:275, %BB:270, %BB:271}
%BB:277:
  %2725 = local.get %4
  %2726 = const i32 15
  %2727 = int.gt.u %2725 %2726
  br.cond %2727 %BB:279 %BB:278

#pred = {%BB:277}
%BB:278:
  %2728 = local.get %6
  %2729 = local.get %4
  %2730 = local.get %2
  %2731 = int.add %2729 %2730
  local.set %3 %2731
  %2732 = const i32 3
  %2733 = int.or %2731 %2732
  %2734 = const i32 4
  %2735 = int.add %2728 %2734
  memory.guard %memory:0 %2735 32
  store.32 %memory:0 %2735 %2733
  %2736 = local.get %6
  %2737 = local.get %3
  %2738 = int.add %2736 %2737
  local.set %3 %2738
  %2739 = local.get %3
  %2740 = const i32 4
  %2741 = int.add %2739 %2740
  memory.guard %memory:0 %2741 32
  %2742 = load.32 i32 %memory:0 %2741
  %2743 = const i32 1
  %2744 = int.or %2742 %2743
  %2745 = const i32 4
  %2746 = int.add %2738 %2745
  memory.guard %memory:0 %2746 32
  store.32 %memory:0 %2746 %2744
  br %BB:285

#pred = {%BB:277}
%BB:279:
  %2747 = local.get %6
  %2748 = local.get %2
  %2749 = int.add %2747 %2748
  local.set (arg)%0 %2749
  %2750 = local.get %4
  %2751 = const i32 1
  %2752 = int.or %2750 %2751
  %2753 = const i32 4
  %2754 = int.add %2749 %2753
  memory.guard %memory:0 %2754 32
  store.32 %memory:0 %2754 %2752
  %2755 = local.get %6
  %2756 = local.get %2
  %2757 = const i32 3
  %2758 = int.or %2756 %2757
  %2759 = const i32 4
  %2760 = int.add %2755 %2759
  memory.guard %memory:0 %2760 32
  store.32 %memory:0 %2760 %2758
  %2761 = local.get (arg)%0
  %2762 = local.get %4
  %2763 = int.add %2761 %2762
  %2764 = local.get %4
  memory.guard %memory:0 %2763 32
  store.32 %memory:0 %2763 %2764
  %2765 = local.get %7
  %2766 = int.eqz %2765
  br.cond %2766 %BB:284 %BB:280

#pred = {%BB:279}
%BB:280:
  %2767 = local.get %7
  %2768 = const i32 3
  %2769 = int.shr.u %2767 %2768
  local.set %8 %2769
  %2770 = const i32 3
  %2771 = int.shl %2769 %2770
  %2772 = const i32 78640
  %2773 = int.add %2771 %2772
  local.set %2 %2773
  %2774 = const i32 0
  %2775 = const i32 78620
  %2776 = int.add %2774 %2775
  memory.guard %memory:0 %2776 32
  %2777 = load.32 i32 %memory:0 %2776
  local.set %3 %2777
  %2778 = const i32 1
  %2779 = local.get %8
  %2780 = int.shl %2778 %2779
  local.set %8 %2780
  %2781 = local.get %5
  %2782 = int.and %2780 %2781
  br.cond %2782 %BB:282 %BB:281

#pred = {%BB:280}
%BB:281:
  %2783 = const i32 0
  %2784 = local.get %8
  %2785 = local.get %5
  %2786 = int.or %2784 %2785
  %2787 = const i32 78600
  %2788 = int.add %2783 %2787
  memory.guard %memory:0 %2788 32
  store.32 %memory:0 %2788 %2786
  %2789 = local.get %2
  local.set %8 %2789
  br %BB:283

#pred = {%BB:280}
%BB:282:
  %2790 = local.get %2
  %2791 = const i32 8
  %2792 = int.add %2790 %2791
  memory.guard %memory:0 %2792 32
  %2793 = load.32 i32 %memory:0 %2792
  local.set %8 %2793
  br %BB:283

#pred = {%BB:282, %BB:281}
%BB:283:
  %2794 = local.get %8
  %2795 = local.get %3
  %2796 = const i32 12
  %2797 = int.add %2794 %2796
  memory.guard %memory:0 %2797 32
  store.32 %memory:0 %2797 %2795
  %2798 = local.get %2
  %2799 = local.get %3
  %2800 = const i32 8
  %2801 = int.add %2798 %2800
  memory.guard %memory:0 %2801 32
  store.32 %memory:0 %2801 %2799
  %2802 = local.get %3
  %2803 = local.get %2
  %2804 = const i32 12
  %2805 = int.add %2802 %2804
  memory.guard %memory:0 %2805 32
  store.32 %memory:0 %2805 %2803
  %2806 = local.get %3
  %2807 = local.get %8
  %2808 = const i32 8
  %2809 = int.add %2806 %2808
  memory.guard %memory:0 %2809 32
  store.32 %memory:0 %2809 %2807
  br %BB:284

#pred = {%BB:283, %BB:279}
%BB:284:
  %2810 = const i32 0
  %2811 = local.get (arg)%0
  %2812 = const i32 78620
  %2813 = int.add %2810 %2812
  memory.guard %memory:0 %2813 32
  store.32 %memory:0 %2813 %2811
  %2814 = const i32 0
  %2815 = local.get %4
  %2816 = const i32 78608
  %2817 = int.add %2814 %2816
  memory.guard %memory:0 %2817 32
  store.32 %memory:0 %2817 %2815
  br %BB:285

#pred = {%BB:284, %BB:278}
%BB:285:
  %2818 = local.get %6
  %2819 = const i32 8
  %2820 = int.add %2818 %2819
  local.set %3 %2820
  br %BB:286

#pred = {%BB:82, %BB:237, %BB:266, %BB:233, %BB:11, %BB:236, %BB:87, %BB:92, %BB:80, %BB:22, %BB:285}
%BB:286:
  %2821 = local.get %1
  %2822 = const i32 16
  %2823 = int.add %2821 %2822
  global.set %global:0%2823
  %2824 = local.get %3
  ret %2824

}

function %function:60 : [i32] -> [] {
{(arg)%0:i32}
#pred = {}
%entry:
  %1 = local.get (arg)%0
  call %function:61(%1)
  ret

}

function %function:61 : [i32] -> [] {
{(arg)%0:i32, %1:i32, %2:i32, %3:i32, %4:i32, %5:i32, %6:i32, %7:i32}
#pred = {}
%entry:
  %8 = local.get (arg)%0
  %9 = int.eqz %8
  br.cond %9 %BB:94 %BB:0

#pred = {%entry}
%BB:0:
  %10 = local.get (arg)%0
  %11 = const i32 -8
  %12 = int.add %10 %11
  local.set %1 %12
  %13 = local.get (arg)%0
  %14 = const i32 -4
  %15 = int.add %13 %14
  memory.guard %memory:0 %15 32
  %16 = load.32 i32 %memory:0 %15
  local.set %2 %16
  %17 = const i32 -8
  %18 = int.and %16 %17
  local.set (arg)%0 %18
  %19 = int.add %12 %18
  local.set %3 %19
  %20 = local.get %2
  %21 = const i32 1
  %22 = int.and %20 %21
  br.cond %22 %BB:35 %BB:1

#pred = {%BB:0}
%BB:1:
  %23 = local.get %2
  %24 = const i32 3
  %25 = int.and %23 %24
  %26 = int.eqz %25
  br.cond %26 %BB:94 %BB:2

#pred = {%BB:1}
%BB:2:
  %27 = local.get %1
  %28 = local.get %1
  memory.guard %memory:0 %28 32
  %29 = load.32 i32 %memory:0 %28
  local.set %2 %29
  %30 = int.sub %27 %29
  local.set %1 %30
  %31 = const i32 0
  %32 = const i32 78616
  %33 = int.add %31 %32
  memory.guard %memory:0 %33 32
  %34 = load.32 i32 %memory:0 %33
  local.set %4 %34
  %35 = int.lt.u %30 %34
  br.cond %35 %BB:94 %BB:3

#pred = {%BB:2}
%BB:3:
  %36 = local.get %2
  %37 = local.get (arg)%0
  %38 = int.add %36 %37
  local.set (arg)%0 %38
  %39 = const i32 0
  %40 = const i32 78620
  %41 = int.add %39 %40
  memory.guard %memory:0 %41 32
  %42 = load.32 i32 %memory:0 %41
  %43 = local.get %1
  %44 = int.eq %42 %43
  br.cond %44 %BB:33 %BB:4

#pred = {%BB:3}
%BB:4:
  %45 = local.get %2
  %46 = const i32 255
  %47 = int.gt.u %45 %46
  br.cond %47 %BB:12 %BB:5

#pred = {%BB:4}
%BB:5:
  %48 = local.get %1
  %49 = const i32 12
  %50 = int.add %48 %49
  memory.guard %memory:0 %50 32
  %51 = load.32 i32 %memory:0 %50
  local.set %5 %51
  %52 = local.get %1
  %53 = const i32 8
  %54 = int.add %52 %53
  memory.guard %memory:0 %54 32
  %55 = load.32 i32 %memory:0 %54
  local.set %6 %55
  %56 = local.get %2
  %57 = const i32 3
  %58 = int.shr.u %56 %57
  local.set %7 %58
  %59 = const i32 3
  %60 = int.shl %58 %59
  %61 = const i32 78640
  %62 = int.add %60 %61
  local.set %2 %62
  %63 = int.eq %55 %62
  br.cond %63 %BB:7 %BB:6

#pred = {%BB:5}
%BB:6:
  br %BB:7

#pred = {%BB:6, %BB:5}
%BB:7:
  %64 = local.get %5
  %65 = local.get %6
  %66 = int.ne %64 %65
  br.cond %66 %BB:9 %BB:8

#pred = {%BB:7}
%BB:8:
  %67 = const i32 0
  %68 = const i32 0
  %69 = const i32 78600
  %70 = int.add %68 %69
  memory.guard %memory:0 %70 32
  %71 = load.32 i32 %memory:0 %70
  %72 = const i32 -2
  %73 = local.get %7
  %74 = int.rotl %72 %73
  %75 = int.and %71 %74
  %76 = const i32 78600
  %77 = int.add %67 %76
  memory.guard %memory:0 %77 32
  store.32 %memory:0 %77 %75
  br %BB:35

#pred = {%BB:7}
%BB:9:
  %78 = local.get %5
  %79 = local.get %2
  %80 = int.eq %78 %79
  br.cond %80 %BB:11 %BB:10

#pred = {%BB:9}
%BB:10:
  br %BB:11

#pred = {%BB:10, %BB:9}
%BB:11:
  %81 = local.get %5
  %82 = local.get %6
  %83 = const i32 8
  %84 = int.add %81 %83
  memory.guard %memory:0 %84 32
  store.32 %memory:0 %84 %82
  %85 = local.get %6
  %86 = local.get %5
  %87 = const i32 12
  %88 = int.add %85 %87
  memory.guard %memory:0 %88 32
  store.32 %memory:0 %88 %86
  br %BB:35

#pred = {%BB:4}
%BB:12:
  %89 = local.get %1
  %90 = const i32 24
  %91 = int.add %89 %90
  memory.guard %memory:0 %91 32
  %92 = load.32 i32 %memory:0 %91
  local.set %7 %92
  %93 = local.get %1
  %94 = const i32 12
  %95 = int.add %93 %94
  memory.guard %memory:0 %95 32
  %96 = load.32 i32 %memory:0 %95
  local.set %5 %96
  %97 = local.get %1
  %98 = int.eq %96 %97
  br.cond %98 %BB:16 %BB:13

#pred = {%BB:12}
%BB:13:
  %99 = local.get %4
  %100 = local.get %1
  %101 = const i32 8
  %102 = int.add %100 %101
  memory.guard %memory:0 %102 32
  %103 = load.32 i32 %memory:0 %102
  local.set %2 %103
  %104 = int.gt.u %99 %103
  br.cond %104 %BB:15 %BB:14

#pred = {%BB:13}
%BB:14:
  %105 = local.get %2
  %106 = const i32 12
  %107 = int.add %105 %106
  memory.guard %memory:0 %107 32
  br %BB:15

#pred = {%BB:14, %BB:13}
%BB:15:
  %108 = local.get %5
  %109 = local.get %2
  %110 = const i32 8
  %111 = int.add %108 %110
  memory.guard %memory:0 %111 32
  store.32 %memory:0 %111 %109
  %112 = local.get %2
  %113 = local.get %5
  %114 = const i32 12
  %115 = int.add %112 %114
  memory.guard %memory:0 %115 32
  store.32 %memory:0 %115 %113
  br %BB:23

#pred = {%BB:12}
%BB:16:
  %116 = local.get %1
  %117 = const i32 20
  %118 = int.add %116 %117
  local.set %2 %118
  memory.guard %memory:0 %118 32
  %119 = load.32 i32 %memory:0 %118
  local.set %4 %119
  br.cond %119 %BB:19 %BB:17

#pred = {%BB:16}
%BB:17:
  %120 = local.get %1
  %121 = const i32 16
  %122 = int.add %120 %121
  local.set %2 %122
  memory.guard %memory:0 %122 32
  %123 = load.32 i32 %memory:0 %122
  local.set %4 %123
  br.cond %123 %BB:19 %BB:18

#pred = {%BB:17}
%BB:18:
  %124 = const i32 0
  local.set %5 %124
  br %BB:23

#pred = {%BB:17, %BB:16}
%BB:19:
  br %BB:20

#pred = {%BB:21, %BB:20, %BB:19}
%BB:20:
  %125 = local.get %2
  local.set %6 %125
  %126 = local.get %4
  local.set %5 %126
  %127 = const i32 20
  %128 = int.add %126 %127
  local.set %2 %128
  memory.guard %memory:0 %128 32
  %129 = load.32 i32 %memory:0 %128
  local.set %4 %129
  br.cond %129 %BB:20 %BB:21

#pred = {%BB:20}
%BB:21:
  %130 = local.get %5
  %131 = const i32 16
  %132 = int.add %130 %131
  local.set %2 %132
  %133 = local.get %5
  %134 = const i32 16
  %135 = int.add %133 %134
  memory.guard %memory:0 %135 32
  %136 = load.32 i32 %memory:0 %135
  local.set %4 %136
  br.cond %136 %BB:20 %BB:22

#pred = {%BB:21}
%BB:22:
  %137 = local.get %6
  %138 = const i32 0
  memory.guard %memory:0 %137 32
  store.32 %memory:0 %137 %138
  br %BB:23

#pred = {%BB:22, %BB:18, %BB:15}
%BB:23:
  %139 = local.get %7
  %140 = int.eqz %139
  br.cond %140 %BB:35 %BB:24

#pred = {%BB:23}
%BB:24:
  %141 = local.get %1
  %142 = const i32 28
  %143 = int.add %141 %142
  memory.guard %memory:0 %143 32
  %144 = load.32 i32 %memory:0 %143
  local.set %4 %144
  %145 = const i32 2
  %146 = int.shl %144 %145
  %147 = const i32 78904
  %148 = int.add %146 %147
  local.set %2 %148
  memory.guard %memory:0 %148 32
  %149 = load.32 i32 %memory:0 %148
  %150 = local.get %1
  %151 = int.ne %149 %150
  br.cond %151 %BB:27 %BB:25

#pred = {%BB:24}
%BB:25:
  %152 = local.get %2
  %153 = local.get %5
  memory.guard %memory:0 %152 32
  store.32 %memory:0 %152 %153
  %154 = local.get %5
  br.cond %154 %BB:29 %BB:26

#pred = {%BB:25}
%BB:26:
  %155 = const i32 0
  %156 = const i32 0
  %157 = const i32 78604
  %158 = int.add %156 %157
  memory.guard %memory:0 %158 32
  %159 = load.32 i32 %memory:0 %158
  %160 = const i32 -2
  %161 = local.get %4
  %162 = int.rotl %160 %161
  %163 = int.and %159 %162
  %164 = const i32 78604
  %165 = int.add %155 %164
  memory.guard %memory:0 %165 32
  store.32 %memory:0 %165 %163
  br %BB:35

#pred = {%BB:24}
%BB:27:
  %166 = local.get %7
  %167 = const i32 16
  %168 = const i32 20
  %169 = local.get %7
  %170 = const i32 16
  %171 = int.add %169 %170
  memory.guard %memory:0 %171 32
  %172 = load.32 i32 %memory:0 %171
  %173 = local.get %1
  %174 = int.eq %172 %173
  %175 = select %174 %167 %168
  %176 = int.add %166 %175
  %177 = local.get %5
  memory.guard %memory:0 %176 32
  store.32 %memory:0 %176 %177
  %178 = local.get %5
  %179 = int.eqz %178
  br.cond %179 %BB:35 %BB:28

#pred = {%BB:27}
%BB:28:
  br %BB:29

#pred = {%BB:28, %BB:25}
%BB:29:
  %180 = local.get %5
  %181 = local.get %7
  %182 = const i32 24
  %183 = int.add %180 %182
  memory.guard %memory:0 %183 32
  store.32 %memory:0 %183 %181
  %184 = local.get %1
  %185 = const i32 16
  %186 = int.add %184 %185
  memory.guard %memory:0 %186 32
  %187 = load.32 i32 %memory:0 %186
  local.set %2 %187
  %188 = int.eqz %187
  br.cond %188 %BB:31 %BB:30

#pred = {%BB:29}
%BB:30:
  %189 = local.get %5
  %190 = local.get %2
  %191 = const i32 16
  %192 = int.add %189 %191
  memory.guard %memory:0 %192 32
  store.32 %memory:0 %192 %190
  %193 = local.get %2
  %194 = local.get %5
  %195 = const i32 24
  %196 = int.add %193 %195
  memory.guard %memory:0 %196 32
  store.32 %memory:0 %196 %194
  br %BB:31

#pred = {%BB:30, %BB:29}
%BB:31:
  %197 = local.get %1
  %198 = const i32 20
  %199 = int.add %197 %198
  memory.guard %memory:0 %199 32
  %200 = load.32 i32 %memory:0 %199
  local.set %2 %200
  %201 = int.eqz %200
  br.cond %201 %BB:35 %BB:32

#pred = {%BB:31}
%BB:32:
  %202 = local.get %5
  %203 = const i32 20
  %204 = int.add %202 %203
  %205 = local.get %2
  memory.guard %memory:0 %204 32
  store.32 %memory:0 %204 %205
  %206 = local.get %2
  %207 = local.get %5
  %208 = const i32 24
  %209 = int.add %206 %208
  memory.guard %memory:0 %209 32
  store.32 %memory:0 %209 %207
  br %BB:35

#pred = {%BB:3}
%BB:33:
  %210 = local.get %3
  %211 = const i32 4
  %212 = int.add %210 %211
  memory.guard %memory:0 %212 32
  %213 = load.32 i32 %memory:0 %212
  local.set %2 %213
  %214 = const i32 3
  %215 = int.and %213 %214
  %216 = const i32 3
  %217 = int.ne %215 %216
  br.cond %217 %BB:35 %BB:34

#pred = {%BB:33}
%BB:34:
  %218 = local.get %3
  %219 = local.get %2
  %220 = const i32 -2
  %221 = int.and %219 %220
  %222 = const i32 4
  %223 = int.add %218 %222
  memory.guard %memory:0 %223 32
  store.32 %memory:0 %223 %221
  %224 = const i32 0
  %225 = local.get (arg)%0
  %226 = const i32 78608
  %227 = int.add %224 %226
  memory.guard %memory:0 %227 32
  store.32 %memory:0 %227 %225
  %228 = local.get %1
  %229 = local.get (arg)%0
  %230 = int.add %228 %229
  %231 = local.get (arg)%0
  memory.guard %memory:0 %230 32
  store.32 %memory:0 %230 %231
  %232 = local.get %1
  %233 = local.get (arg)%0
  %234 = const i32 1
  %235 = int.or %233 %234
  %236 = const i32 4
  %237 = int.add %232 %236
  memory.guard %memory:0 %237 32
  store.32 %memory:0 %237 %235
  br %exit

#pred = {%BB:33, %BB:0, %BB:8, %BB:27, %BB:32, %BB:26, %BB:11, %BB:23, %BB:31}
%BB:35:
  %238 = local.get %3
  %239 = local.get %1
  %240 = int.le.u %238 %239
  br.cond %240 %BB:94 %BB:36

#pred = {%BB:35}
%BB:36:
  %241 = local.get %3
  %242 = const i32 4
  %243 = int.add %241 %242
  memory.guard %memory:0 %243 32
  %244 = load.32 i32 %memory:0 %243
  local.set %2 %244
  %245 = const i32 1
  %246 = int.and %244 %245
  %247 = int.eqz %246
  br.cond %247 %BB:94 %BB:37

#pred = {%BB:36}
%BB:37:
  %248 = local.get %2
  %249 = const i32 2
  %250 = int.and %248 %249
  br.cond %250 %BB:74 %BB:38

#pred = {%BB:37}
%BB:38:
  %251 = const i32 0
  %252 = const i32 78624
  %253 = int.add %251 %252
  memory.guard %memory:0 %253 32
  %254 = load.32 i32 %memory:0 %253
  %255 = local.get %3
  %256 = int.ne %254 %255
  br.cond %256 %BB:41 %BB:39

#pred = {%BB:38}
%BB:39:
  %257 = const i32 0
  %258 = local.get %1
  %259 = const i32 78624
  %260 = int.add %257 %259
  memory.guard %memory:0 %260 32
  store.32 %memory:0 %260 %258
  %261 = const i32 0
  %262 = const i32 0
  %263 = const i32 78612
  %264 = int.add %262 %263
  memory.guard %memory:0 %264 32
  %265 = load.32 i32 %memory:0 %264
  %266 = local.get (arg)%0
  %267 = int.add %265 %266
  local.set (arg)%0 %267
  %268 = const i32 78612
  %269 = int.add %261 %268
  memory.guard %memory:0 %269 32
  store.32 %memory:0 %269 %267
  %270 = local.get %1
  %271 = local.get (arg)%0
  %272 = const i32 1
  %273 = int.or %271 %272
  %274 = const i32 4
  %275 = int.add %270 %274
  memory.guard %memory:0 %275 32
  store.32 %memory:0 %275 %273
  %276 = local.get %1
  %277 = const i32 0
  %278 = const i32 78620
  %279 = int.add %277 %278
  memory.guard %memory:0 %279 32
  %280 = load.32 i32 %memory:0 %279
  %281 = int.ne %276 %280
  br.cond %281 %BB:94 %BB:40

#pred = {%BB:39}
%BB:40:
  %282 = const i32 0
  %283 = const i32 0
  %284 = const i32 78608
  %285 = int.add %282 %284
  memory.guard %memory:0 %285 32
  store.32 %memory:0 %285 %283
  %286 = const i32 0
  %287 = const i32 0
  %288 = const i32 78620
  %289 = int.add %286 %288
  memory.guard %memory:0 %289 32
  store.32 %memory:0 %289 %287
  br %exit

#pred = {%BB:38}
%BB:41:
  %290 = const i32 0
  %291 = const i32 78620
  %292 = int.add %290 %291
  memory.guard %memory:0 %292 32
  %293 = load.32 i32 %memory:0 %292
  %294 = local.get %3
  %295 = int.ne %293 %294
  br.cond %295 %BB:43 %BB:42

#pred = {%BB:41}
%BB:42:
  %296 = const i32 0
  %297 = local.get %1
  %298 = const i32 78620
  %299 = int.add %296 %298
  memory.guard %memory:0 %299 32
  store.32 %memory:0 %299 %297
  %300 = const i32 0
  %301 = const i32 0
  %302 = const i32 78608
  %303 = int.add %301 %302
  memory.guard %memory:0 %303 32
  %304 = load.32 i32 %memory:0 %303
  %305 = local.get (arg)%0
  %306 = int.add %304 %305
  local.set (arg)%0 %306
  %307 = const i32 78608
  %308 = int.add %300 %307
  memory.guard %memory:0 %308 32
  store.32 %memory:0 %308 %306
  %309 = local.get %1
  %310 = local.get (arg)%0
  %311 = const i32 1
  %312 = int.or %310 %311
  %313 = const i32 4
  %314 = int.add %309 %313
  memory.guard %memory:0 %314 32
  store.32 %memory:0 %314 %312
  %315 = local.get %1
  %316 = local.get (arg)%0
  %317 = int.add %315 %316
  %318 = local.get (arg)%0
  memory.guard %memory:0 %317 32
  store.32 %memory:0 %317 %318
  br %exit

#pred = {%BB:41}
%BB:43:
  %319 = local.get %2
  %320 = const i32 -8
  %321 = int.and %319 %320
  %322 = local.get (arg)%0
  %323 = int.add %321 %322
  local.set (arg)%0 %323
  %324 = local.get %2
  %325 = const i32 255
  %326 = int.gt.u %324 %325
  br.cond %326 %BB:51 %BB:44

#pred = {%BB:43}
%BB:44:
  %327 = local.get %3
  %328 = const i32 12
  %329 = int.add %327 %328
  memory.guard %memory:0 %329 32
  %330 = load.32 i32 %memory:0 %329
  local.set %4 %330
  %331 = local.get %3
  %332 = const i32 8
  %333 = int.add %331 %332
  memory.guard %memory:0 %333 32
  %334 = load.32 i32 %memory:0 %333
  local.set %5 %334
  %335 = local.get %2
  %336 = const i32 3
  %337 = int.shr.u %335 %336
  local.set %3 %337
  %338 = const i32 3
  %339 = int.shl %337 %338
  %340 = const i32 78640
  %341 = int.add %339 %340
  local.set %2 %341
  %342 = int.eq %334 %341
  br.cond %342 %BB:46 %BB:45

#pred = {%BB:44}
%BB:45:
  %343 = const i32 0
  %344 = const i32 78616
  %345 = int.add %343 %344
  memory.guard %memory:0 %345 32
  br %BB:46

#pred = {%BB:45, %BB:44}
%BB:46:
  %346 = local.get %4
  %347 = local.get %5
  %348 = int.ne %346 %347
  br.cond %348 %BB:48 %BB:47

#pred = {%BB:46}
%BB:47:
  %349 = const i32 0
  %350 = const i32 0
  %351 = const i32 78600
  %352 = int.add %350 %351
  memory.guard %memory:0 %352 32
  %353 = load.32 i32 %memory:0 %352
  %354 = const i32 -2
  %355 = local.get %3
  %356 = int.rotl %354 %355
  %357 = int.and %353 %356
  %358 = const i32 78600
  %359 = int.add %349 %358
  memory.guard %memory:0 %359 32
  store.32 %memory:0 %359 %357
  br %BB:72

#pred = {%BB:46}
%BB:48:
  %360 = local.get %4
  %361 = local.get %2
  %362 = int.eq %360 %361
  br.cond %362 %BB:50 %BB:49

#pred = {%BB:48}
%BB:49:
  %363 = const i32 0
  %364 = const i32 78616
  %365 = int.add %363 %364
  memory.guard %memory:0 %365 32
  br %BB:50

#pred = {%BB:49, %BB:48}
%BB:50:
  %366 = local.get %4
  %367 = local.get %5
  %368 = const i32 8
  %369 = int.add %366 %368
  memory.guard %memory:0 %369 32
  store.32 %memory:0 %369 %367
  %370 = local.get %5
  %371 = local.get %4
  %372 = const i32 12
  %373 = int.add %370 %372
  memory.guard %memory:0 %373 32
  store.32 %memory:0 %373 %371
  br %BB:72

#pred = {%BB:43}
%BB:51:
  %374 = local.get %3
  %375 = const i32 24
  %376 = int.add %374 %375
  memory.guard %memory:0 %376 32
  %377 = load.32 i32 %memory:0 %376
  local.set %7 %377
  %378 = local.get %3
  %379 = const i32 12
  %380 = int.add %378 %379
  memory.guard %memory:0 %380 32
  %381 = load.32 i32 %memory:0 %380
  local.set %5 %381
  %382 = local.get %3
  %383 = int.eq %381 %382
  br.cond %383 %BB:55 %BB:52

#pred = {%BB:51}
%BB:52:
  %384 = const i32 0
  %385 = const i32 78616
  %386 = int.add %384 %385
  memory.guard %memory:0 %386 32
  %387 = load.32 i32 %memory:0 %386
  %388 = local.get %3
  %389 = const i32 8
  %390 = int.add %388 %389
  memory.guard %memory:0 %390 32
  %391 = load.32 i32 %memory:0 %390
  local.set %2 %391
  %392 = int.gt.u %387 %391
  br.cond %392 %BB:54 %BB:53

#pred = {%BB:52}
%BB:53:
  %393 = local.get %2
  %394 = const i32 12
  %395 = int.add %393 %394
  memory.guard %memory:0 %395 32
  br %BB:54

#pred = {%BB:53, %BB:52}
%BB:54:
  %396 = local.get %5
  %397 = local.get %2
  %398 = const i32 8
  %399 = int.add %396 %398
  memory.guard %memory:0 %399 32
  store.32 %memory:0 %399 %397
  %400 = local.get %2
  %401 = local.get %5
  %402 = const i32 12
  %403 = int.add %400 %402
  memory.guard %memory:0 %403 32
  store.32 %memory:0 %403 %401
  br %BB:62

#pred = {%BB:51}
%BB:55:
  %404 = local.get %3
  %405 = const i32 20
  %406 = int.add %404 %405
  local.set %2 %406
  memory.guard %memory:0 %406 32
  %407 = load.32 i32 %memory:0 %406
  local.set %4 %407
  br.cond %407 %BB:58 %BB:56

#pred = {%BB:55}
%BB:56:
  %408 = local.get %3
  %409 = const i32 16
  %410 = int.add %408 %409
  local.set %2 %410
  memory.guard %memory:0 %410 32
  %411 = load.32 i32 %memory:0 %410
  local.set %4 %411
  br.cond %411 %BB:58 %BB:57

#pred = {%BB:56}
%BB:57:
  %412 = const i32 0
  local.set %5 %412
  br %BB:62

#pred = {%BB:56, %BB:55}
%BB:58:
  br %BB:59

#pred = {%BB:60, %BB:59, %BB:58}
%BB:59:
  %413 = local.get %2
  local.set %6 %413
  %414 = local.get %4
  local.set %5 %414
  %415 = const i32 20
  %416 = int.add %414 %415
  local.set %2 %416
  memory.guard %memory:0 %416 32
  %417 = load.32 i32 %memory:0 %416
  local.set %4 %417
  br.cond %417 %BB:59 %BB:60

#pred = {%BB:59}
%BB:60:
  %418 = local.get %5
  %419 = const i32 16
  %420 = int.add %418 %419
  local.set %2 %420
  %421 = local.get %5
  %422 = const i32 16
  %423 = int.add %421 %422
  memory.guard %memory:0 %423 32
  %424 = load.32 i32 %memory:0 %423
  local.set %4 %424
  br.cond %424 %BB:59 %BB:61

#pred = {%BB:60}
%BB:61:
  %425 = local.get %6
  %426 = const i32 0
  memory.guard %memory:0 %425 32
  store.32 %memory:0 %425 %426
  br %BB:62

#pred = {%BB:61, %BB:57, %BB:54}
%BB:62:
  %427 = local.get %7
  %428 = int.eqz %427
  br.cond %428 %BB:72 %BB:63

#pred = {%BB:62}
%BB:63:
  %429 = local.get %3
  %430 = const i32 28
  %431 = int.add %429 %430
  memory.guard %memory:0 %431 32
  %432 = load.32 i32 %memory:0 %431
  local.set %4 %432
  %433 = const i32 2
  %434 = int.shl %432 %433
  %435 = const i32 78904
  %436 = int.add %434 %435
  local.set %2 %436
  memory.guard %memory:0 %436 32
  %437 = load.32 i32 %memory:0 %436
  %438 = local.get %3
  %439 = int.ne %437 %438
  br.cond %439 %BB:66 %BB:64

#pred = {%BB:63}
%BB:64:
  %440 = local.get %2
  %441 = local.get %5
  memory.guard %memory:0 %440 32
  store.32 %memory:0 %440 %441
  %442 = local.get %5
  br.cond %442 %BB:68 %BB:65

#pred = {%BB:64}
%BB:65:
  %443 = const i32 0
  %444 = const i32 0
  %445 = const i32 78604
  %446 = int.add %444 %445
  memory.guard %memory:0 %446 32
  %447 = load.32 i32 %memory:0 %446
  %448 = const i32 -2
  %449 = local.get %4
  %450 = int.rotl %448 %449
  %451 = int.and %447 %450
  %452 = const i32 78604
  %453 = int.add %443 %452
  memory.guard %memory:0 %453 32
  store.32 %memory:0 %453 %451
  br %BB:72

#pred = {%BB:63}
%BB:66:
  %454 = local.get %7
  %455 = const i32 16
  %456 = const i32 20
  %457 = local.get %7
  %458 = const i32 16
  %459 = int.add %457 %458
  memory.guard %memory:0 %459 32
  %460 = load.32 i32 %memory:0 %459
  %461 = local.get %3
  %462 = int.eq %460 %461
  %463 = select %462 %455 %456
  %464 = int.add %454 %463
  %465 = local.get %5
  memory.guard %memory:0 %464 32
  store.32 %memory:0 %464 %465
  %466 = local.get %5
  %467 = int.eqz %466
  br.cond %467 %BB:72 %BB:67

#pred = {%BB:66}
%BB:67:
  br %BB:68

#pred = {%BB:67, %BB:64}
%BB:68:
  %468 = local.get %5
  %469 = local.get %7
  %470 = const i32 24
  %471 = int.add %468 %470
  memory.guard %memory:0 %471 32
  store.32 %memory:0 %471 %469
  %472 = local.get %3
  %473 = const i32 16
  %474 = int.add %472 %473
  memory.guard %memory:0 %474 32
  %475 = load.32 i32 %memory:0 %474
  local.set %2 %475
  %476 = int.eqz %475
  br.cond %476 %BB:70 %BB:69

#pred = {%BB:68}
%BB:69:
  %477 = local.get %5
  %478 = local.get %2
  %479 = const i32 16
  %480 = int.add %477 %479
  memory.guard %memory:0 %480 32
  store.32 %memory:0 %480 %478
  %481 = local.get %2
  %482 = local.get %5
  %483 = const i32 24
  %484 = int.add %481 %483
  memory.guard %memory:0 %484 32
  store.32 %memory:0 %484 %482
  br %BB:70

#pred = {%BB:69, %BB:68}
%BB:70:
  %485 = local.get %3
  %486 = const i32 20
  %487 = int.add %485 %486
  memory.guard %memory:0 %487 32
  %488 = load.32 i32 %memory:0 %487
  local.set %2 %488
  %489 = int.eqz %488
  br.cond %489 %BB:72 %BB:71

#pred = {%BB:70}
%BB:71:
  %490 = local.get %5
  %491 = const i32 20
  %492 = int.add %490 %491
  %493 = local.get %2
  memory.guard %memory:0 %492 32
  store.32 %memory:0 %492 %493
  %494 = local.get %2
  %495 = local.get %5
  %496 = const i32 24
  %497 = int.add %494 %496
  memory.guard %memory:0 %497 32
  store.32 %memory:0 %497 %495
  br %BB:72

#pred = {%BB:66, %BB:65, %BB:62, %BB:47, %BB:71, %BB:50, %BB:70}
%BB:72:
  %498 = local.get %1
  %499 = local.get (arg)%0
  %500 = int.add %498 %499
  %501 = local.get (arg)%0
  memory.guard %memory:0 %500 32
  store.32 %memory:0 %500 %501
  %502 = local.get %1
  %503 = local.get (arg)%0
  %504 = const i32 1
  %505 = int.or %503 %504
  %506 = const i32 4
  %507 = int.add %502 %506
  memory.guard %memory:0 %507 32
  store.32 %memory:0 %507 %505
  %508 = local.get %1
  %509 = const i32 0
  %510 = const i32 78620
  %511 = int.add %509 %510
  memory.guard %memory:0 %511 32
  %512 = load.32 i32 %memory:0 %511
  %513 = int.ne %508 %512
  br.cond %513 %BB:75 %BB:73

#pred = {%BB:72}
%BB:73:
  %514 = const i32 0
  %515 = local.get (arg)%0
  %516 = const i32 78608
  %517 = int.add %514 %516
  memory.guard %memory:0 %517 32
  store.32 %memory:0 %517 %515
  br %exit

#pred = {%BB:37}
%BB:74:
  %518 = local.get %3
  %519 = local.get %2
  %520 = const i32 -2
  %521 = int.and %519 %520
  %522 = const i32 4
  %523 = int.add %518 %522
  memory.guard %memory:0 %523 32
  store.32 %memory:0 %523 %521
  %524 = local.get %1
  %525 = local.get (arg)%0
  %526 = int.add %524 %525
  %527 = local.get (arg)%0
  memory.guard %memory:0 %526 32
  store.32 %memory:0 %526 %527
  %528 = local.get %1
  %529 = local.get (arg)%0
  %530 = const i32 1
  %531 = int.or %529 %530
  %532 = const i32 4
  %533 = int.add %528 %532
  memory.guard %memory:0 %533 32
  store.32 %memory:0 %533 %531
  br %BB:75

#pred = {%BB:74, %BB:72}
%BB:75:
  %534 = local.get (arg)%0
  %535 = const i32 255
  %536 = int.gt.u %534 %535
  br.cond %536 %BB:80 %BB:76

#pred = {%BB:75}
%BB:76:
  %537 = local.get (arg)%0
  %538 = const i32 3
  %539 = int.shr.u %537 %538
  local.set %2 %539
  %540 = const i32 3
  %541 = int.shl %539 %540
  %542 = const i32 78640
  %543 = int.add %541 %542
  local.set (arg)%0 %543
  %544 = const i32 0
  %545 = const i32 78600
  %546 = int.add %544 %545
  memory.guard %memory:0 %546 32
  %547 = load.32 i32 %memory:0 %546
  local.set %4 %547
  %548 = const i32 1
  %549 = local.get %2
  %550 = int.shl %548 %549
  local.set %2 %550
  %551 = int.and %547 %550
  br.cond %551 %BB:78 %BB:77

#pred = {%BB:76}
%BB:77:
  %552 = const i32 0
  %553 = local.get %4
  %554 = local.get %2
  %555 = int.or %553 %554
  %556 = const i32 78600
  %557 = int.add %552 %556
  memory.guard %memory:0 %557 32
  store.32 %memory:0 %557 %555
  %558 = local.get (arg)%0
  local.set %2 %558
  br %BB:79

#pred = {%BB:76}
%BB:78:
  %559 = local.get (arg)%0
  %560 = const i32 8
  %561 = int.add %559 %560
  memory.guard %memory:0 %561 32
  %562 = load.32 i32 %memory:0 %561
  local.set %2 %562
  br %BB:79

#pred = {%BB:78, %BB:77}
%BB:79:
  %563 = local.get %2
  %564 = local.get %1
  %565 = const i32 12
  %566 = int.add %563 %565
  memory.guard %memory:0 %566 32
  store.32 %memory:0 %566 %564
  %567 = local.get (arg)%0
  %568 = local.get %1
  %569 = const i32 8
  %570 = int.add %567 %569
  memory.guard %memory:0 %570 32
  store.32 %memory:0 %570 %568
  %571 = local.get %1
  %572 = local.get (arg)%0
  %573 = const i32 12
  %574 = int.add %571 %573
  memory.guard %memory:0 %574 32
  store.32 %memory:0 %574 %572
  %575 = local.get %1
  %576 = local.get %2
  %577 = const i32 8
  %578 = int.add %575 %577
  memory.guard %memory:0 %578 32
  store.32 %memory:0 %578 %576
  br %exit

#pred = {%BB:75}
%BB:80:
  %579 = const i32 0
  local.set %2 %579
  %580 = local.get (arg)%0
  %581 = const i32 8
  %582 = int.shr.u %580 %581
  local.set %4 %582
  %583 = int.eqz %582
  br.cond %583 %BB:83 %BB:81

#pred = {%BB:80}
%BB:81:
  %584 = const i32 31
  local.set %2 %584
  %585 = local.get (arg)%0
  %586 = const i32 16777215
  %587 = int.gt.u %585 %586
  br.cond %587 %BB:83 %BB:82

#pred = {%BB:81}
%BB:82:
  %588 = local.get %4
  %589 = local.get %4
  %590 = const i32 1048320
  %591 = int.add %589 %590
  %592 = const i32 16
  %593 = int.shr.u %591 %592
  %594 = const i32 8
  %595 = int.and %593 %594
  local.set %2 %595
  %596 = int.shl %588 %595
  local.set %4 %596
  %597 = local.get %4
  %598 = const i32 520192
  %599 = int.add %597 %598
  %600 = const i32 16
  %601 = int.shr.u %599 %600
  %602 = const i32 4
  %603 = int.and %601 %602
  local.set %4 %603
  %604 = int.shl %596 %603
  local.set %5 %604
  %605 = local.get %5
  %606 = const i32 245760
  %607 = int.add %605 %606
  %608 = const i32 16
  %609 = int.shr.u %607 %608
  %610 = const i32 2
  %611 = int.and %609 %610
  local.set %5 %611
  %612 = int.shl %604 %611
  %613 = const i32 15
  %614 = int.shr.u %612 %613
  %615 = local.get %4
  %616 = local.get %2
  %617 = int.or %615 %616
  %618 = local.get %5
  %619 = int.or %617 %618
  %620 = int.sub %614 %619
  local.set %2 %620
  %621 = const i32 1
  %622 = int.shl %620 %621
  %623 = local.get (arg)%0
  %624 = local.get %2
  %625 = const i32 21
  %626 = int.add %624 %625
  %627 = int.shr.u %623 %626
  %628 = const i32 1
  %629 = int.and %627 %628
  %630 = int.or %622 %629
  %631 = const i32 28
  %632 = int.add %630 %631
  local.set %2 %632
  br %BB:83

#pred = {%BB:82, %BB:81, %BB:80}
%BB:83:
  %633 = local.get %1
  %634 = const i64 0
  %635 = const i32 16
  %636 = int.add %633 %635
  memory.guard %memory:0 %636 64
  store.64 %memory:0 %636 %634
  %637 = local.get %1
  %638 = const i32 28
  %639 = int.add %637 %638
  %640 = local.get %2
  memory.guard %memory:0 %639 32
  store.32 %memory:0 %639 %640
  %641 = local.get %2
  %642 = const i32 2
  %643 = int.shl %641 %642
  %644 = const i32 78904
  %645 = int.add %643 %644
  local.set %4 %645
  %646 = const i32 0
  %647 = const i32 78604
  %648 = int.add %646 %647
  memory.guard %memory:0 %648 32
  %649 = load.32 i32 %memory:0 %648
  local.set %5 %649
  %650 = const i32 1
  %651 = local.get %2
  %652 = int.shl %650 %651
  local.set %3 %652
  %653 = int.and %649 %652
  br.cond %653 %BB:85 %BB:84

#pred = {%BB:83}
%BB:84:
  %654 = local.get %4
  %655 = local.get %1
  memory.guard %memory:0 %654 32
  store.32 %memory:0 %654 %655
  %656 = const i32 0
  %657 = local.get %5
  %658 = local.get %3
  %659 = int.or %657 %658
  %660 = const i32 78604
  %661 = int.add %656 %660
  memory.guard %memory:0 %661 32
  store.32 %memory:0 %661 %659
  %662 = local.get %1
  %663 = const i32 24
  %664 = int.add %662 %663
  %665 = local.get %4
  memory.guard %memory:0 %664 32
  store.32 %memory:0 %664 %665
  %666 = local.get %1
  %667 = local.get %1
  %668 = const i32 8
  %669 = int.add %666 %668
  memory.guard %memory:0 %669 32
  store.32 %memory:0 %669 %667
  %670 = local.get %1
  %671 = local.get %1
  %672 = const i32 12
  %673 = int.add %670 %672
  memory.guard %memory:0 %673 32
  store.32 %memory:0 %673 %671
  br %BB:90

#pred = {%BB:83}
%BB:85:
  %674 = local.get (arg)%0
  %675 = const i32 0
  %676 = const i32 25
  %677 = local.get %2
  %678 = const i32 1
  %679 = int.shr.u %677 %678
  %680 = int.sub %676 %679
  %681 = local.get %2
  %682 = const i32 31
  %683 = int.eq %681 %682
  %684 = select %683 %675 %680
  %685 = int.shl %674 %684
  local.set %2 %685
  %686 = local.get %4
  memory.guard %memory:0 %686 32
  %687 = load.32 i32 %memory:0 %686
  local.set %5 %687
  br %BB:86

#pred = {%BB:87, %BB:85}
%BB:86:
  %688 = local.get %5
  local.set %4 %688
  %689 = const i32 4
  %690 = int.add %688 %689
  memory.guard %memory:0 %690 32
  %691 = load.32 i32 %memory:0 %690
  %692 = const i32 -8
  %693 = int.and %691 %692
  %694 = local.get (arg)%0
  %695 = int.eq %693 %694
  br.cond %695 %BB:89 %BB:87

#pred = {%BB:86}
%BB:87:
  %696 = local.get %2
  %697 = const i32 29
  %698 = int.shr.u %696 %697
  local.set %5 %698
  %699 = local.get %2
  %700 = const i32 1
  %701 = int.shl %699 %700
  local.set %2 %701
  %702 = local.get %4
  %703 = local.get %5
  %704 = const i32 4
  %705 = int.and %703 %704
  %706 = int.add %702 %705
  %707 = const i32 16
  %708 = int.add %706 %707
  local.set %3 %708
  memory.guard %memory:0 %708 32
  %709 = load.32 i32 %memory:0 %708
  local.set %5 %709
  br.cond %709 %BB:86 %BB:88

#pred = {%BB:87}
%BB:88:
  %710 = local.get %3
  %711 = local.get %1
  memory.guard %memory:0 %710 32
  store.32 %memory:0 %710 %711
  %712 = local.get %1
  %713 = const i32 24
  %714 = int.add %712 %713
  %715 = local.get %4
  memory.guard %memory:0 %714 32
  store.32 %memory:0 %714 %715
  %716 = local.get %1
  %717 = local.get %1
  %718 = const i32 12
  %719 = int.add %716 %718
  memory.guard %memory:0 %719 32
  store.32 %memory:0 %719 %717
  %720 = local.get %1
  %721 = local.get %1
  %722 = const i32 8
  %723 = int.add %720 %722
  memory.guard %memory:0 %723 32
  store.32 %memory:0 %723 %721
  br %BB:90

#pred = {%BB:86}
%BB:89:
  %724 = local.get %4
  %725 = const i32 8
  %726 = int.add %724 %725
  memory.guard %memory:0 %726 32
  %727 = load.32 i32 %memory:0 %726
  local.set (arg)%0 %727
  %728 = local.get %4
  %729 = local.get %1
  %730 = const i32 8
  %731 = int.add %728 %730
  memory.guard %memory:0 %731 32
  store.32 %memory:0 %731 %729
  %732 = local.get (arg)%0
  %733 = local.get %1
  %734 = const i32 12
  %735 = int.add %732 %734
  memory.guard %memory:0 %735 32
  store.32 %memory:0 %735 %733
  %736 = local.get %1
  %737 = const i32 24
  %738 = int.add %736 %737
  %739 = const i32 0
  memory.guard %memory:0 %738 32
  store.32 %memory:0 %738 %739
  %740 = local.get %1
  %741 = local.get (arg)%0
  %742 = const i32 8
  %743 = int.add %740 %742
  memory.guard %memory:0 %743 32
  store.32 %memory:0 %743 %741
  %744 = local.get %1
  %745 = local.get %4
  %746 = const i32 12
  %747 = int.add %744 %746
  memory.guard %memory:0 %747 32
  store.32 %memory:0 %747 %745
  br %BB:90

#pred = {%BB:89, %BB:88, %BB:84}
%BB:90:
  %748 = const i32 0
  %749 = const i32 0
  %750 = const i32 78632
  %751 = int.add %749 %750
  memory.guard %memory:0 %751 32
  %752 = load.32 i32 %memory:0 %751
  %753 = const i32 -1
  %754 = int.add %752 %753
  local.set %1 %754
  %755 = const i32 78632
  %756 = int.add %748 %755
  memory.guard %memory:0 %756 32
  store.32 %memory:0 %756 %754
  %757 = local.get %1
  br.cond %757 %BB:94 %BB:91

#pred = {%BB:90}
%BB:91:
  %758 = const i32 79056
  local.set %1 %758
  br %BB:92

#pred = {%BB:92, %BB:91}
%BB:92:
  %759 = local.get %1
  memory.guard %memory:0 %759 32
  %760 = load.32 i32 %memory:0 %759
  local.set (arg)%0 %760
  %761 = const i32 8
  %762 = int.add %760 %761
  local.set %1 %762
  %763 = local.get (arg)%0
  br.cond %763 %BB:92 %BB:93

#pred = {%BB:92}
%BB:93:
  %764 = const i32 0
  %765 = const i32 -1
  %766 = const i32 78632
  %767 = int.add %764 %766
  memory.guard %memory:0 %767 32
  store.32 %memory:0 %767 %765
  br %BB:94

#pred = {%BB:1, %BB:36, %BB:39, %BB:93, %BB:35, %entry, %BB:2, %BB:90}
%BB:94:
  br %exit

#pred = {%BB:79, %BB:40, %BB:34, %BB:42, %BB:73, %BB:94}
%exit:
  ret

}

function %function:62 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, %2:i32}
#pred = {}
%entry:
  %3 = const i32 0
  local.set %2 %3
  %4 = const i32 66476
  %5 = const i32 0
  %6 = local.get (arg)%0
  %7 = local.get (arg)%1
  %8 = call %function:63(%4, %5, %6, %7)
  local.set (arg)%0 %8
  %9 = int.eqz %8
  br.cond %9 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %10 = const i32 0
  %11 = local.get (arg)%0
  %12 = const i32 79096
  %13 = int.add %10 %12
  memory.guard %memory:0 %13 32
  store.32 %memory:0 %13 %11
  %14 = const i32 -1
  local.set %2 %14
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  %15 = local.get %2
  ret %15

}

function %function:63 : [i32, i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i32, %4:i32, %5:i32, %6:i64, %7:i32, %8:i64, %9:i64, %10:i64}
#pred = {}
%entry:
  %11 = global.get %global:0
  %12 = const i32 112
  %13 = int.sub %11 %12
  local.set %4 %13
  global.set %global:0%13
  %14 = const i32 28
  local.set %5 %14
  %15 = local.get (arg)%1
  %16 = const i32 1
  %17 = int.gt.u %15 %16
  br.cond %17 %BB:9 %BB:0

#pred = {%entry}
%BB:0:
  %18 = const i64 0
  local.set %6 %18
  %19 = local.get %4
  %20 = const i32 104
  %21 = int.add %19 %20
  local.set %5 %21
  %22 = const i64 0
  memory.guard %memory:0 %21 64
  store.64 %memory:0 %21 %22
  %23 = local.get %4
  %24 = const i32 80
  %25 = int.add %23 %24
  local.set %7 %25
  %26 = const i64 0
  memory.guard %memory:0 %25 64
  store.64 %memory:0 %25 %26
  %27 = local.get %4
  %28 = const i32 96
  %29 = int.add %27 %28
  %30 = const i64 0
  memory.guard %memory:0 %29 64
  store.64 %memory:0 %29 %30
  %31 = local.get %4
  %32 = const i32 88
  %33 = int.add %31 %32
  %34 = const i64 0
  memory.guard %memory:0 %33 64
  store.64 %memory:0 %33 %34
  %35 = local.get %5
  %36 = local.get (arg)%1
  memory.guard %memory:0 %35 16
  store.16 %memory:0 %35 %36
  %37 = local.get %7
  %38 = local.get (arg)%0
  memory.guard %memory:0 %38 32
  %39 = load.32 i32 %memory:0 %38
  memory.guard %memory:0 %37 32
  store.32 %memory:0 %37 %39
  %40 = local.get %4
  %41 = const i64 0
  %42 = const i32 72
  %43 = int.add %40 %42
  memory.guard %memory:0 %43 64
  store.64 %memory:0 %43 %41
  %44 = local.get %4
  %45 = const i64 0
  %46 = const i32 64
  %47 = int.add %44 %46
  memory.guard %memory:0 %47 64
  store.64 %memory:0 %47 %45
  %48 = const i32 28
  local.set %5 %48
  %49 = local.get (arg)%2
  %50 = const i32 8
  %51 = int.add %49 %50
  memory.guard %memory:0 %51 32
  %52 = load.32 i32 %memory:0 %51
  local.set (arg)%1 %52
  %53 = const i32 999999999
  %54 = int.gt.u %52 %53
  br.cond %54 %BB:9 %BB:1

#pred = {%BB:0}
%BB:1:
  %55 = local.get (arg)%2
  memory.guard %memory:0 %55 64
  %56 = load.64 i64 %memory:0 %55
  local.set %8 %56
  %57 = const i64 0
  %58 = int.lt.s %56 %57
  br.cond %58 %BB:7 %BB:2

#pred = {%BB:1}
%BB:2:
  %59 = local.get %4
  %60 = const i32 0
  %61 = const i32 20
  %62 = int.add %59 %61
  memory.guard %memory:0 %62 32
  store.32 %memory:0 %62 %60
  %63 = local.get %4
  %64 = local.get %8
  %65 = const i64 0
  %66 = const i64 1000000000
  %67 = const i64 0
  %68 = local.get %4
  %69 = const i32 20
  %70 = int.add %68 %69
  call %function:111(%63, %64, %65, %66, %67, %70)
  %71 = local.get %4
  %72 = local.get %4
  memory.guard %memory:0 %72 64
  %73 = load.64 i64 %memory:0 %72
  local.set %8 %73
  %74 = const i32 88
  %75 = int.add %71 %74
  memory.guard %memory:0 %75 64
  store.64 %memory:0 %75 %73
  %76 = const i64 -1
  local.set %6 %76
  %77 = const i64 0
  %78 = local.get %4
  %79 = const i32 8
  %80 = int.add %78 %79
  memory.guard %memory:0 %80 64
  %81 = load.64 i64 %memory:0 %80
  local.set %9 %81
  %82 = const i64 1
  %83 = int.and %81 %82
  local.set %10 %83
  %84 = int.sub %77 %83
  %85 = local.get %9
  %86 = int.xor %84 %85
  %87 = const i64 0
  %88 = int.ne %86 %87
  %89 = local.get %4
  %90 = const i32 20
  %91 = int.add %89 %90
  memory.guard %memory:0 %91 32
  %92 = load.32 i32 %memory:0 %91
  %93 = const i32 0
  %94 = int.ne %92 %93
  %95 = int.or %88 %94
  br.cond %95 %BB:7 %BB:3

#pred = {%BB:2}
%BB:3:
  %96 = local.get %8
  %97 = local.get %8
  %98 = const i64 -512
  %99 = int.and %97 %98
  %100 = int.xor %96 %99
  %101 = local.get %10
  %102 = int.or %100 %101
  %103 = const i64 0
  %104 = int.ne %102 %103
  br.cond %104 %BB:7 %BB:4

#pred = {%BB:3}
%BB:4:
  %105 = const i64 0
  %106 = local.get %8
  %107 = local.get (arg)%1
  %108 = cast.u i64 %107
  %109 = int.add %106 %108
  local.set %10 %109
  %110 = local.get %8
  %111 = int.lt.u %109 %110
  %112 = cast.u i64 %111
  %113 = local.get %9
  %114 = const i64 1
  %115 = int.and %113 %114
  %116 = int.sub %112 %115
  local.set %8 %116
  %117 = const i64 1
  %118 = int.and %116 %117
  %119 = int.sub %105 %118
  local.set %9 %119
  %120 = local.get %8
  %121 = int.xor %119 %120
  %122 = const i64 0
  %123 = int.ne %121 %122
  br.cond %123 %BB:7 %BB:5

#pred = {%BB:4}
%BB:5:
  %124 = local.get %9
  %125 = const i64 -1
  %126 = int.gt.s %124 %125
  br.cond %126 %BB:8 %BB:6

#pred = {%BB:5}
%BB:6:
  br %BB:7

#pred = {%BB:2, %BB:6, %BB:4, %BB:1, %BB:3}
%BB:7:
  %127 = local.get %6
  local.set %10 %127
  br %BB:8

#pred = {%BB:7, %BB:5}
%BB:8:
  %128 = local.get %4
  %129 = local.get %10
  %130 = const i32 88
  %131 = int.add %128 %130
  memory.guard %memory:0 %131 64
  store.64 %memory:0 %131 %129
  %132 = const i32 58
  %133 = const i32 0
  %134 = local.get %4
  %135 = const i32 64
  %136 = int.add %134 %135
  %137 = local.get %4
  %138 = const i32 24
  %139 = int.add %137 %138
  %140 = const i32 1
  %141 = local.get %4
  %142 = const i32 60
  %143 = int.add %141 %142
  %144 = call %function:1(%136, %139, %140, %143)
  %145 = local.get %4
  %146 = const i32 32
  %147 = int.add %145 %146
  memory.guard %memory:0 %147 16
  %148 = load.16 i32 %memory:0 %147
  %149 = int.or %144 %148
  %150 = select %149 %132 %133
  local.set %5 %150
  br %BB:9

#pred = {%BB:8, %BB:0, %entry}
%BB:9:
  %151 = local.get %4
  %152 = const i32 112
  %153 = int.add %151 %152
  global.set %global:0%153
  %154 = local.get %5
  ret %154

}

function %function:64 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, %2:i32, %3:i64, %4:i64}
#pred = {}
%entry:
  %5 = global.get %global:0
  %6 = const i32 16
  %7 = int.sub %5 %6
  local.set %2 %7
  global.set %global:0%7
  %8 = local.get %2
  %9 = const i64 0
  %10 = const i32 8
  %11 = int.add %8 %10
  memory.guard %memory:0 %11 64
  store.64 %memory:0 %11 %9
  %12 = const i32 0
  %13 = const i64 1000
  %14 = local.get %2
  %15 = const i32 8
  %16 = int.add %14 %15
  %17 = call %function:2(%12, %13, %16)
  %18 = local.get (arg)%0
  %19 = local.get %2
  %20 = const i32 8
  %21 = int.add %19 %20
  memory.guard %memory:0 %21 64
  %22 = load.64 i64 %memory:0 %21
  local.set %3 %22
  %23 = const i64 1000000000
  %24 = int.div.u %22 %23
  local.set %4 %24
  memory.guard %memory:0 %18 64
  store.64 %memory:0 %18 %24
  %25 = local.get (arg)%0
  %26 = local.get %3
  %27 = local.get %4
  %28 = const i64 1000000000
  %29 = int.mul %27 %28
  %30 = int.sub %26 %29
  %31 = cast i32 %30
  %32 = const i32 1000
  %33 = int.div.u %31 %32
  %34 = cast.u i64 %33
  %35 = const i32 8
  %36 = int.add %25 %35
  memory.guard %memory:0 %36 64
  store.64 %memory:0 %36 %34
  %37 = local.get %2
  %38 = const i32 16
  %39 = int.add %37 %38
  global.set %global:0%39
  %40 = const i32 0
  ret %40

}

function %function:65 : [] -> [] {
{}
#pred = {}
%entry:
  unreachable

}

function %function:66 : [i32] -> [i32] {
{(arg)%0:i32}
#pred = {}
%entry:
  %1 = local.get (arg)%0
  br.cond %1 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %2 = memory.size %memory:0
  %3 = const i32 16
  %4 = int.shl %2 %3
  br %exit

#pred = {%entry}
%BB:1:
  %5 = local.get (arg)%0
  %6 = const i32 65535
  %7 = int.and %5 %6
  br.cond %7 %BB:6 %BB:2

#pred = {%BB:1}
%BB:2:
  %8 = local.get (arg)%0
  %9 = const i32 -1
  %10 = int.le.s %8 %9
  br.cond %10 %BB:6 %BB:3

#pred = {%BB:2}
%BB:3:
  %11 = local.get (arg)%0
  %12 = const i32 16
  %13 = int.shr.u %11 %12
  %14 = memory.grow %memory:0 %13
  local.set (arg)%0 %14
  %15 = const i32 -1
  %16 = int.ne %14 %15
  br.cond %16 %BB:5 %BB:4

#pred = {%BB:3}
%BB:4:
  %17 = const i32 0
  %18 = const i32 48
  %19 = const i32 79096
  %20 = int.add %17 %19
  memory.guard %memory:0 %20 32
  store.32 %memory:0 %20 %18
  %21 = const i32 -1
  br %exit

#pred = {%BB:3}
%BB:5:
  %22 = local.get (arg)%0
  %23 = const i32 16
  %24 = int.shl %22 %23
  br %exit

#pred = {%BB:2, %BB:1}
%BB:6:
  call %function:65()
  unreachable

#pred = {%BB:5, %BB:4, %BB:0}
%exit:
  %26 = phi i32 [%4, %BB:0] [%21, %BB:4] [%24, %BB:5]
  ret %26

}

function %function:67 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, %2:i32}
#pred = {}
%entry:
  %3 = const i32 29
  local.set %2 %3
  %4 = local.get (arg)%1
  %5 = const i32 256
  %6 = int.gt.u %4 %5
  br.cond %6 %BB:2 %BB:0

#pred = {%entry}
%BB:0:
  %7 = local.get (arg)%0
  %8 = local.get (arg)%1
  %9 = call %function:3(%7, %8)
  local.set %2 %9
  br.cond %9 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  %10 = const i32 0
  br %exit

#pred = {%BB:0, %entry}
%BB:2:
  %11 = const i32 0
  %12 = local.get %2
  %13 = const i32 79096
  %14 = int.add %11 %13
  memory.guard %memory:0 %14 32
  store.32 %memory:0 %14 %12
  %15 = const i32 -1
  br %exit

#pred = {%BB:2, %BB:1}
%exit:
  %16 = phi i32 [%10, %BB:1] [%15, %BB:2]
  ret %16

}

function %function:68 : [] -> [] {
{}
#pred = {}
%entry:
  ret

}

function %function:69 : [] -> [] {
{}
#pred = {}
%entry:
  call %function:68()
  call %function:78()
  ret

}

function %function:70 : [i32, i32, i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i32, %4:i32}
#pred = {}
%entry:
  %5 = global.get %global:0
  %6 = const i32 16
  %7 = int.sub %5 %6
  local.set %4 %7
  global.set %global:0%7
  %8 = local.get %4
  %9 = local.get (arg)%2
  %10 = const i32 12
  %11 = int.add %8 %10
  memory.guard %memory:0 %11 32
  store.32 %memory:0 %11 %9
  %12 = local.get %4
  %13 = local.get (arg)%3
  %14 = const i32 8
  %15 = int.add %12 %14
  memory.guard %memory:0 %15 32
  store.32 %memory:0 %15 %13
  %16 = local.get %4
  %17 = local.get (arg)%1
  %18 = const i32 4
  %19 = int.add %16 %18
  memory.guard %memory:0 %19 32
  store.32 %memory:0 %19 %17
  %20 = local.get %4
  %21 = local.get (arg)%0
  memory.guard %memory:0 %20 32
  store.32 %memory:0 %20 %21
  %22 = const i32 69552
  %23 = const i32 66480
  %24 = local.get %4
  %25 = call %function:89(%22, %23, %24)
  %26 = const i32 0
  %27 = call %function:77(%26)
  call %function:65()
  unreachable

}

function %function:71 : [i32] -> [i32] {
{(arg)%0:i32, %1:i32}
#pred = {}
%entry:
  %2 = local.get (arg)%0
  %3 = local.get (arg)%0
  %4 = const i32 60
  %5 = int.add %3 %4
  memory.guard %memory:0 %5 32
  %6 = load.32 i32 %memory:0 %5
  local.set %1 %6
  %7 = const i32 -1
  %8 = int.add %6 %7
  %9 = local.get %1
  %10 = int.or %8 %9
  %11 = const i32 60
  %12 = int.add %2 %11
  memory.guard %memory:0 %12 32
  store.32 %memory:0 %12 %10
  %13 = local.get (arg)%0
  memory.guard %memory:0 %13 32
  %14 = load.32 i32 %memory:0 %13
  local.set %1 %14
  %15 = const i32 8
  %16 = int.and %14 %15
  %17 = int.eqz %16
  br.cond %17 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %18 = local.get (arg)%0
  %19 = local.get %1
  %20 = const i32 32
  %21 = int.or %19 %20
  memory.guard %memory:0 %18 32
  store.32 %memory:0 %18 %21
  %22 = const i32 -1
  br %exit

#pred = {%entry}
%BB:1:
  %23 = local.get (arg)%0
  %24 = const i64 0
  %25 = const i32 4
  %26 = int.add %23 %25
  memory.guard %memory:0 %26 64
  store.64 %memory:0 %26 %24
  %27 = local.get (arg)%0
  %28 = local.get (arg)%0
  %29 = const i32 40
  %30 = int.add %28 %29
  memory.guard %memory:0 %30 32
  %31 = load.32 i32 %memory:0 %30
  local.set %1 %31
  %32 = const i32 24
  %33 = int.add %27 %32
  memory.guard %memory:0 %33 32
  store.32 %memory:0 %33 %31
  %34 = local.get (arg)%0
  %35 = local.get %1
  %36 = const i32 20
  %37 = int.add %34 %36
  memory.guard %memory:0 %37 32
  store.32 %memory:0 %37 %35
  %38 = local.get (arg)%0
  %39 = local.get %1
  %40 = local.get (arg)%0
  %41 = const i32 44
  %42 = int.add %40 %41
  memory.guard %memory:0 %42 32
  %43 = load.32 i32 %memory:0 %42
  %44 = int.add %39 %43
  %45 = const i32 16
  %46 = int.add %38 %45
  memory.guard %memory:0 %46 32
  store.32 %memory:0 %46 %44
  %47 = const i32 0
  br %exit

#pred = {%BB:1, %BB:0}
%exit:
  %48 = phi i32 [%22, %BB:0] [%47, %BB:1]
  ret %48

}

function %function:72 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, %3:i32, %4:i32, %5:i32, %6:i32, %7:i32, %8:i32}
#pred = {}
%entry:
  %9 = local.get (arg)%2
  %10 = const i32 16
  %11 = int.add %9 %10
  memory.guard %memory:0 %11 32
  %12 = load.32 i32 %memory:0 %11
  local.set %3 %12
  br.cond %12 %BB:2 %BB:0

#pred = {%entry}
%BB:0:
  %13 = const i32 0
  local.set %4 %13
  %14 = local.get (arg)%2
  %15 = call %function:71(%14)
  br.cond %15 %BB:11 %BB:1

#pred = {%BB:0}
%BB:1:
  %16 = local.get (arg)%2
  %17 = const i32 16
  %18 = int.add %16 %17
  memory.guard %memory:0 %18 32
  %19 = load.32 i32 %memory:0 %18
  local.set %3 %19
  br %BB:2

#pred = {%BB:1, %entry}
%BB:2:
  %20 = local.get %3
  %21 = local.get (arg)%2
  %22 = const i32 20
  %23 = int.add %21 %22
  memory.guard %memory:0 %23 32
  %24 = load.32 i32 %memory:0 %23
  local.set %5 %24
  %25 = int.sub %20 %24
  %26 = local.get (arg)%1
  %27 = int.ge.u %25 %26
  br.cond %27 %BB:4 %BB:3

#pred = {%BB:2}
%BB:3:
  %28 = local.get (arg)%2
  %29 = local.get (arg)%0
  %30 = local.get (arg)%1
  %31 = local.get (arg)%2
  %32 = const i32 32
  %33 = int.add %31 %32
  memory.guard %memory:0 %33 32
  %34 = load.32 i32 %memory:0 %33
  %35 = call.indirect %table:0 %34 (%28, %29, %30)
  br %exit

#pred = {%BB:2}
%BB:4:
  %36 = const i32 0
  local.set %6 %36
  %37 = local.get (arg)%2
  %38 = const i32 64
  %39 = int.add %37 %38
  memory.guard %memory:0 %39 32
  %40 = load.32 i32 %memory:0 %39
  %41 = const i32 0
  %42 = int.lt.s %40 %41
  br.cond %42 %BB:10 %BB:5

#pred = {%BB:4}
%BB:5:
  %43 = const i32 0
  local.set %6 %43
  %44 = local.get (arg)%0
  local.set %4 %44
  %45 = const i32 0
  local.set %3 %45
  br %BB:6

#pred = {%BB:7, %BB:5}
%BB:6:
  %46 = local.get (arg)%1
  %47 = local.get %3
  %48 = int.eq %46 %47
  br.cond %48 %BB:10 %BB:7

#pred = {%BB:6}
%BB:7:
  %49 = local.get %3
  %50 = const i32 1
  %51 = int.add %49 %50
  local.set %3 %51
  %52 = local.get %4
  %53 = local.get (arg)%1
  %54 = int.add %52 %53
  local.set %7 %54
  %55 = local.get %4
  %56 = const i32 -1
  %57 = int.add %55 %56
  local.set %8 %57
  local.set %4 %57
  %58 = local.get %7
  %59 = const i32 -1
  %60 = int.add %58 %59
  memory.guard %memory:0 %60 8
  %61 = load.8 i32 %memory:0 %60
  %62 = const i32 10
  %63 = int.ne %61 %62
  br.cond %63 %BB:6 %BB:8

#pred = {%BB:7}
%BB:8:
  %64 = local.get (arg)%2
  %65 = local.get (arg)%0
  %66 = local.get (arg)%1
  %67 = local.get %3
  %68 = int.sub %66 %67
  %69 = const i32 1
  %70 = int.add %68 %69
  local.set %6 %70
  %71 = local.get (arg)%2
  %72 = const i32 32
  %73 = int.add %71 %72
  memory.guard %memory:0 %73 32
  %74 = load.32 i32 %memory:0 %73
  %75 = call.indirect %table:0 %74 (%64, %65, %70)
  local.set %4 %75
  %76 = local.get %6
  %77 = int.lt.u %75 %76
  br.cond %77 %BB:11 %BB:9

#pred = {%BB:8}
%BB:9:
  %78 = local.get %8
  %79 = local.get (arg)%1
  %80 = int.add %78 %79
  %81 = const i32 1
  %82 = int.add %80 %81
  local.set (arg)%0 %82
  %83 = local.get (arg)%2
  %84 = const i32 20
  %85 = int.add %83 %84
  memory.guard %memory:0 %85 32
  %86 = load.32 i32 %memory:0 %85
  local.set %5 %86
  %87 = local.get %3
  %88 = const i32 -1
  %89 = int.add %87 %88
  local.set (arg)%1 %89
  br %BB:10

#pred = {%BB:9, %BB:6, %BB:4}
%BB:10:
  %90 = local.get %5
  %91 = local.get (arg)%0
  %92 = local.get (arg)%1
  %93 = call %function:95(%90, %91, %92)
  %94 = local.get (arg)%2
  %95 = local.get (arg)%2
  %96 = const i32 20
  %97 = int.add %95 %96
  memory.guard %memory:0 %97 32
  %98 = load.32 i32 %memory:0 %97
  %99 = local.get (arg)%1
  %100 = int.add %98 %99
  %101 = const i32 20
  %102 = int.add %94 %101
  memory.guard %memory:0 %102 32
  store.32 %memory:0 %102 %100
  %103 = local.get %6
  %104 = local.get (arg)%1
  %105 = int.add %103 %104
  local.set %4 %105
  br %BB:11

#pred = {%BB:10, %BB:8, %BB:0}
%BB:11:
  %106 = local.get %4
  br %exit

#pred = {%BB:11, %BB:3}
%exit:
  %107 = phi i32 [%35, %BB:3] [%106, %BB:11]
  ret %107

}

function %function:73 : [i32, i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i32, %4:i32, %5:i32, %6:i32, %7:i32, %8:i32, %9:i32, %10:i32}
#pred = {}
%entry:
  %11 = local.get (arg)%2
  %12 = local.get (arg)%1
  %13 = int.mul %11 %12
  local.set %4 %13
  %14 = local.get (arg)%3
  %15 = const i32 16
  %16 = int.add %14 %15
  memory.guard %memory:0 %16 32
  %17 = load.32 i32 %memory:0 %16
  local.set %5 %17
  br.cond %17 %BB:2 %BB:0

#pred = {%entry}
%BB:0:
  %18 = const i32 0
  local.set %5 %18
  %19 = local.get (arg)%3
  %20 = call %function:71(%19)
  br.cond %20 %BB:13 %BB:1

#pred = {%BB:0}
%BB:1:
  %21 = local.get (arg)%3
  %22 = const i32 16
  %23 = int.add %21 %22
  memory.guard %memory:0 %23 32
  %24 = load.32 i32 %memory:0 %23
  local.set %5 %24
  br %BB:2

#pred = {%BB:1, %entry}
%BB:2:
  %25 = local.get %5
  %26 = local.get (arg)%3
  %27 = const i32 20
  %28 = int.add %26 %27
  memory.guard %memory:0 %28 32
  %29 = load.32 i32 %memory:0 %28
  local.set %6 %29
  %30 = int.sub %25 %29
  %31 = local.get %4
  %32 = int.ge.u %30 %31
  br.cond %32 %BB:4 %BB:3

#pred = {%BB:2}
%BB:3:
  %33 = local.get (arg)%3
  %34 = local.get (arg)%0
  %35 = local.get %4
  %36 = local.get (arg)%3
  %37 = const i32 32
  %38 = int.add %36 %37
  memory.guard %memory:0 %38 32
  %39 = load.32 i32 %memory:0 %38
  %40 = call.indirect %table:0 %39 (%33, %34, %35)
  local.set %5 %40
  br %BB:13

#pred = {%BB:2}
%BB:4:
  %41 = const i32 0
  local.set %7 %41
  %42 = local.get (arg)%3
  %43 = const i32 64
  %44 = int.add %42 %43
  memory.guard %memory:0 %44 32
  %45 = load.32 i32 %memory:0 %44
  %46 = const i32 0
  %47 = int.ge.s %45 %46
  br.cond %47 %BB:6 %BB:5

#pred = {%BB:4}
%BB:5:
  %48 = local.get %4
  local.set %5 %48
  br %BB:12

#pred = {%BB:4}
%BB:6:
  %49 = local.get (arg)%0
  %50 = local.get %4
  %51 = int.add %49 %50
  local.set %8 %51
  %52 = const i32 0
  local.set %7 %52
  %53 = const i32 0
  local.set %5 %53
  br %BB:7

#pred = {%BB:9, %BB:6}
%BB:7:
  %54 = local.get %4
  %55 = local.get %5
  %56 = int.add %54 %55
  br.cond %56 %BB:9 %BB:8

#pred = {%BB:7}
%BB:8:
  %57 = local.get %4
  local.set %5 %57
  br %BB:12

#pred = {%BB:7}
%BB:9:
  %58 = local.get %8
  %59 = local.get %5
  %60 = int.add %58 %59
  local.set %9 %60
  %61 = local.get %5
  %62 = const i32 -1
  %63 = int.add %61 %62
  local.set %10 %63
  local.set %5 %63
  %64 = local.get %9
  %65 = const i32 -1
  %66 = int.add %64 %65
  memory.guard %memory:0 %66 8
  %67 = load.8 i32 %memory:0 %66
  %68 = const i32 10
  %69 = int.ne %67 %68
  br.cond %69 %BB:7 %BB:10

#pred = {%BB:9}
%BB:10:
  %70 = local.get (arg)%3
  %71 = local.get (arg)%0
  %72 = local.get %4
  %73 = local.get %10
  %74 = int.add %72 %73
  %75 = const i32 1
  %76 = int.add %74 %75
  local.set %7 %76
  %77 = local.get (arg)%3
  %78 = const i32 32
  %79 = int.add %77 %78
  memory.guard %memory:0 %79 32
  %80 = load.32 i32 %memory:0 %79
  %81 = call.indirect %table:0 %80 (%70, %71, %76)
  local.set %5 %81
  %82 = local.get %7
  %83 = int.lt.u %81 %82
  br.cond %83 %BB:13 %BB:11

#pred = {%BB:10}
%BB:11:
  %84 = local.get %10
  %85 = const i32 -1
  %86 = int.xor %84 %85
  local.set %5 %86
  %87 = local.get %8
  %88 = local.get %10
  %89 = int.add %87 %88
  %90 = const i32 1
  %91 = int.add %89 %90
  local.set (arg)%0 %91
  %92 = local.get (arg)%3
  %93 = const i32 20
  %94 = int.add %92 %93
  memory.guard %memory:0 %94 32
  %95 = load.32 i32 %memory:0 %94
  local.set %6 %95
  br %BB:12

#pred = {%BB:11, %BB:8, %BB:5}
%BB:12:
  %96 = local.get %6
  %97 = local.get (arg)%0
  %98 = local.get %5
  %99 = call %function:95(%96, %97, %98)
  %100 = local.get (arg)%3
  %101 = local.get (arg)%3
  %102 = const i32 20
  %103 = int.add %101 %102
  memory.guard %memory:0 %103 32
  %104 = load.32 i32 %memory:0 %103
  %105 = local.get %5
  %106 = int.add %104 %105
  %107 = const i32 20
  %108 = int.add %100 %107
  memory.guard %memory:0 %108 32
  store.32 %memory:0 %108 %106
  %109 = local.get %7
  %110 = local.get %5
  %111 = int.add %109 %110
  local.set %5 %111
  br %BB:13

#pred = {%BB:12, %BB:10, %BB:3, %BB:0}
%BB:13:
  %112 = local.get %5
  %113 = local.get %4
  %114 = int.ne %112 %113
  br.cond %114 %BB:15 %BB:14

#pred = {%BB:13}
%BB:14:
  %115 = local.get (arg)%2
  %116 = const i32 0
  %117 = local.get (arg)%1
  %118 = select %117 %115 %116
  br %exit

#pred = {%BB:13}
%BB:15:
  %119 = local.get %5
  %120 = local.get (arg)%1
  %121 = int.div.u %119 %120
  br %exit

#pred = {%BB:15, %BB:14}
%exit:
  %122 = phi i32 [%118, %BB:14] [%121, %BB:15]
  ret %122

}

function %function:74 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, %2:i32}
#pred = {}
%entry:
  %3 = global.get %global:0
  %4 = const i32 16
  %5 = int.sub %3 %4
  local.set %2 %5
  global.set %global:0%5
  %6 = local.get %2
  %7 = local.get (arg)%1
  %8 = const i32 12
  %9 = int.add %6 %8
  memory.guard %memory:0 %9 32
  store.32 %memory:0 %9 %7
  %10 = const i32 69672
  %11 = local.get (arg)%0
  %12 = local.get (arg)%1
  %13 = call %function:85(%10, %11, %12)
  local.set (arg)%1 %13
  %14 = local.get %2
  %15 = const i32 16
  %16 = int.add %14 %15
  global.set %global:0%16
  %17 = local.get (arg)%1
  ret %17

}

function %function:75 : [i32, i64, i32] -> [i64] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i32, %3:i32}
#pred = {}
%entry:
  %4 = global.get %global:0
  %5 = const i32 16
  %6 = int.sub %4 %5
  local.set %3 %6
  global.set %global:0%6
  %7 = local.get (arg)%0
  %8 = local.get (arg)%1
  %9 = local.get (arg)%2
  %10 = const i32 255
  %11 = int.and %9 %10
  %12 = local.get %3
  %13 = const i32 8
  %14 = int.add %12 %13
  %15 = call %function:4(%7, %8, %11, %14)
  local.set (arg)%0 %15
  %16 = int.eqz %15
  br.cond %16 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %17 = const i32 0
  %18 = const i32 70
  %19 = local.get (arg)%0
  %20 = local.get (arg)%0
  %21 = const i32 76
  %22 = int.eq %20 %21
  %23 = select %22 %18 %19
  %24 = const i32 79096
  %25 = int.add %17 %24
  memory.guard %memory:0 %25 32
  store.32 %memory:0 %25 %23
  %26 = const i64 -1
  local.set (arg)%1 %26
  br %BB:2

#pred = {%entry}
%BB:1:
  %27 = local.get %3
  %28 = const i32 8
  %29 = int.add %27 %28
  memory.guard %memory:0 %29 64
  %30 = load.64 i64 %memory:0 %29
  local.set (arg)%1 %30
  br %BB:2

#pred = {%BB:1, %BB:0}
%BB:2:
  %31 = local.get %3
  %32 = const i32 16
  %33 = int.add %31 %32
  global.set %global:0%33
  %34 = local.get (arg)%1
  ret %34

}

function %function:76 : [i32, i64, i32] -> [i64] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i32}
#pred = {}
%entry:
  %3 = local.get (arg)%0
  %4 = const i32 56
  %5 = int.add %3 %4
  memory.guard %memory:0 %5 32
  %6 = load.32 i32 %memory:0 %5
  %7 = local.get (arg)%1
  %8 = local.get (arg)%2
  %9 = call %function:75(%6, %7, %8)
  ret %9

}

function %function:77 : [i32] -> [i32] {
{(arg)%0:i32, %1:i32, %2:i32, %3:i32}
#pred = {}
%entry:
  %4 = local.get (arg)%0
  br.cond %4 %BB:16 %BB:0

#pred = {%entry}
%BB:0:
  %5 = const i32 0
  local.set %1 %5
  %6 = const i32 0
  %7 = const i32 69784
  %8 = int.add %6 %7
  memory.guard %memory:0 %8 32
  %9 = load.32 i32 %memory:0 %8
  %10 = int.eqz %9
  br.cond %10 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  %11 = const i32 0
  %12 = const i32 69784
  %13 = int.add %11 %12
  memory.guard %memory:0 %13 32
  %14 = load.32 i32 %memory:0 %13
  %15 = call %function:77(%14)
  local.set %1 %15
  br %BB:2

#pred = {%BB:1, %BB:0}
%BB:2:
  %16 = const i32 0
  %17 = const i32 69664
  %18 = int.add %16 %17
  memory.guard %memory:0 %18 32
  %19 = load.32 i32 %memory:0 %18
  %20 = int.eqz %19
  br.cond %20 %BB:4 %BB:3

#pred = {%BB:2}
%BB:3:
  %21 = const i32 0
  %22 = const i32 69664
  %23 = int.add %21 %22
  memory.guard %memory:0 %23 32
  %24 = load.32 i32 %memory:0 %23
  %25 = call %function:77(%24)
  %26 = local.get %1
  %27 = int.or %25 %26
  local.set %1 %27
  br %BB:4

#pred = {%BB:3, %BB:2}
%BB:4:
  %28 = call %function:79()
  memory.guard %memory:0 %28 32
  %29 = load.32 i32 %memory:0 %28
  local.set (arg)%0 %29
  %30 = int.eqz %29
  br.cond %30 %BB:15 %BB:5

#pred = {%BB:4}
%BB:5:
  br %BB:6

#pred = {%BB:13, %BB:5}
%BB:6:
  %31 = local.get (arg)%0
  %32 = const i32 20
  %33 = int.add %31 %32
  memory.guard %memory:0 %33 32
  %34 = load.32 i32 %memory:0 %33
  %35 = local.get (arg)%0
  %36 = const i32 24
  %37 = int.add %35 %36
  memory.guard %memory:0 %37 32
  %38 = load.32 i32 %memory:0 %37
  %39 = int.eq %34 %38
  br.cond %39 %BB:13 %BB:7

#pred = {%BB:6}
%BB:7:
  %40 = local.get (arg)%0
  %41 = const i32 0
  %42 = const i32 0
  %43 = local.get (arg)%0
  %44 = const i32 32
  %45 = int.add %43 %44
  memory.guard %memory:0 %45 32
  %46 = load.32 i32 %memory:0 %45
  %47 = call.indirect %table:0 %46 (%40, %41, %42)
  %48 = local.get (arg)%0
  %49 = const i32 20
  %50 = int.add %48 %49
  memory.guard %memory:0 %50 32
  %51 = load.32 i32 %memory:0 %50
  br.cond %51 %BB:9 %BB:8

#pred = {%BB:7}
%BB:8:
  %52 = const i32 -1
  local.set %2 %52
  br %BB:12

#pred = {%BB:7}
%BB:9:
  %53 = local.get (arg)%0
  %54 = const i32 4
  %55 = int.add %53 %54
  memory.guard %memory:0 %55 32
  %56 = load.32 i32 %memory:0 %55
  local.set %2 %56
  %57 = local.get (arg)%0
  %58 = const i32 8
  %59 = int.add %57 %58
  memory.guard %memory:0 %59 32
  %60 = load.32 i32 %memory:0 %59
  local.set %3 %60
  %61 = int.eq %56 %60
  br.cond %61 %BB:11 %BB:10

#pred = {%BB:9}
%BB:10:
  %62 = local.get (arg)%0
  %63 = local.get %2
  %64 = local.get %3
  %65 = int.sub %63 %64
  %66 = cast.s i64 %65
  %67 = const i32 1
  %68 = local.get (arg)%0
  %69 = const i32 36
  %70 = int.add %68 %69
  memory.guard %memory:0 %70 32
  %71 = load.32 i32 %memory:0 %70
  %72 = call.indirect %table:0 %71 (%62, %66, %67)
  br %BB:11

#pred = {%BB:10, %BB:9}
%BB:11:
  %73 = const i32 0
  local.set %2 %73
  %74 = local.get (arg)%0
  %75 = const i32 0
  %76 = const i32 24
  %77 = int.add %74 %76
  memory.guard %memory:0 %77 32
  store.32 %memory:0 %77 %75
  %78 = local.get (arg)%0
  %79 = const i64 0
  %80 = const i32 16
  %81 = int.add %78 %80
  memory.guard %memory:0 %81 64
  store.64 %memory:0 %81 %79
  %82 = local.get (arg)%0
  %83 = const i64 0
  %84 = const i32 4
  %85 = int.add %82 %84
  memory.guard %memory:0 %85 64
  store.64 %memory:0 %85 %83
  br %BB:12

#pred = {%BB:11, %BB:8}
%BB:12:
  %86 = local.get %2
  %87 = local.get %1
  %88 = int.or %86 %87
  local.set %1 %88
  br %BB:13

#pred = {%BB:12, %BB:6}
%BB:13:
  %89 = local.get (arg)%0
  %90 = const i32 52
  %91 = int.add %89 %90
  memory.guard %memory:0 %91 32
  %92 = load.32 i32 %memory:0 %91
  local.set (arg)%0 %92
  br.cond %92 %BB:6 %BB:14

#pred = {%BB:13}
%BB:14:
  br %BB:15

#pred = {%BB:14, %BB:4}
%BB:15:
  call %function:80()
  %93 = local.get %1
  br %exit

#pred = {%entry}
%BB:16:
  %94 = local.get (arg)%0
  %95 = const i32 20
  %96 = int.add %94 %95
  memory.guard %memory:0 %96 32
  %97 = load.32 i32 %memory:0 %96
  %98 = local.get (arg)%0
  %99 = const i32 24
  %100 = int.add %98 %99
  memory.guard %memory:0 %100 32
  %101 = load.32 i32 %memory:0 %100
  %102 = int.eq %97 %101
  br.cond %102 %BB:19 %BB:17

#pred = {%BB:16}
%BB:17:
  %103 = local.get (arg)%0
  %104 = const i32 0
  %105 = const i32 0
  %106 = local.get (arg)%0
  %107 = const i32 32
  %108 = int.add %106 %107
  memory.guard %memory:0 %108 32
  %109 = load.32 i32 %memory:0 %108
  %110 = call.indirect %table:0 %109 (%103, %104, %105)
  %111 = local.get (arg)%0
  %112 = const i32 20
  %113 = int.add %111 %112
  memory.guard %memory:0 %113 32
  %114 = load.32 i32 %memory:0 %113
  br.cond %114 %BB:19 %BB:18

#pred = {%BB:17}
%BB:18:
  %115 = const i32 -1
  br %exit

#pred = {%BB:17, %BB:16}
%BB:19:
  %116 = local.get (arg)%0
  %117 = const i32 4
  %118 = int.add %116 %117
  memory.guard %memory:0 %118 32
  %119 = load.32 i32 %memory:0 %118
  local.set %1 %119
  %120 = local.get (arg)%0
  %121 = const i32 8
  %122 = int.add %120 %121
  memory.guard %memory:0 %122 32
  %123 = load.32 i32 %memory:0 %122
  local.set %2 %123
  %124 = int.eq %119 %123
  br.cond %124 %BB:21 %BB:20

#pred = {%BB:19}
%BB:20:
  %125 = local.get (arg)%0
  %126 = local.get %1
  %127 = local.get %2
  %128 = int.sub %126 %127
  %129 = cast.s i64 %128
  %130 = const i32 1
  %131 = local.get (arg)%0
  %132 = const i32 36
  %133 = int.add %131 %132
  memory.guard %memory:0 %133 32
  %134 = load.32 i32 %memory:0 %133
  %135 = call.indirect %table:0 %134 (%125, %129, %130)
  br %BB:21

#pred = {%BB:20, %BB:19}
%BB:21:
  %136 = local.get (arg)%0
  %137 = const i32 0
  %138 = const i32 24
  %139 = int.add %136 %138
  memory.guard %memory:0 %139 32
  store.32 %memory:0 %139 %137
  %140 = local.get (arg)%0
  %141 = const i64 0
  %142 = const i32 16
  %143 = int.add %140 %142
  memory.guard %memory:0 %143 64
  store.64 %memory:0 %143 %141
  %144 = local.get (arg)%0
  %145 = const i64 0
  %146 = const i32 4
  %147 = int.add %144 %146
  memory.guard %memory:0 %147 64
  store.64 %memory:0 %147 %145
  %148 = const i32 0
  br %exit

#pred = {%BB:21, %BB:18, %BB:15}
%exit:
  %149 = phi i32 [%93, %BB:15] [%115, %BB:18] [%148, %BB:21]
  ret %149

}

function %function:78 : [] -> [] {
{%0:i32, %1:i32, %2:i32}
#pred = {}
%entry:
  %3 = call %function:79()
  memory.guard %memory:0 %3 32
  %4 = load.32 i32 %memory:0 %3
  local.set %0 %4
  %5 = int.eqz %4
  br.cond %5 %BB:7 %BB:0

#pred = {%entry}
%BB:0:
  br %BB:1

#pred = {%BB:5, %BB:0}
%BB:1:
  %6 = local.get %0
  %7 = const i32 20
  %8 = int.add %6 %7
  memory.guard %memory:0 %8 32
  %9 = load.32 i32 %memory:0 %8
  %10 = local.get %0
  %11 = const i32 24
  %12 = int.add %10 %11
  memory.guard %memory:0 %12 32
  %13 = load.32 i32 %memory:0 %12
  %14 = int.eq %9 %13
  br.cond %14 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %15 = local.get %0
  %16 = const i32 0
  %17 = const i32 0
  %18 = local.get %0
  %19 = const i32 32
  %20 = int.add %18 %19
  memory.guard %memory:0 %20 32
  %21 = load.32 i32 %memory:0 %20
  %22 = call.indirect %table:0 %21 (%15, %16, %17)
  br %BB:3

#pred = {%BB:2, %BB:1}
%BB:3:
  %23 = local.get %0
  %24 = const i32 4
  %25 = int.add %23 %24
  memory.guard %memory:0 %25 32
  %26 = load.32 i32 %memory:0 %25
  local.set %1 %26
  %27 = local.get %0
  %28 = const i32 8
  %29 = int.add %27 %28
  memory.guard %memory:0 %29 32
  %30 = load.32 i32 %memory:0 %29
  local.set %2 %30
  %31 = int.eq %26 %30
  br.cond %31 %BB:5 %BB:4

#pred = {%BB:3}
%BB:4:
  %32 = local.get %0
  %33 = local.get %1
  %34 = local.get %2
  %35 = int.sub %33 %34
  %36 = cast.s i64 %35
  %37 = const i32 1
  %38 = local.get %0
  %39 = const i32 36
  %40 = int.add %38 %39
  memory.guard %memory:0 %40 32
  %41 = load.32 i32 %memory:0 %40
  %42 = call.indirect %table:0 %41 (%32, %36, %37)
  br %BB:5

#pred = {%BB:4, %BB:3}
%BB:5:
  %43 = local.get %0
  %44 = const i32 52
  %45 = int.add %43 %44
  memory.guard %memory:0 %45 32
  %46 = load.32 i32 %memory:0 %45
  local.set %0 %46
  br.cond %46 %BB:1 %BB:6

#pred = {%BB:5}
%BB:6:
  br %BB:7

#pred = {%BB:6, %entry}
%BB:7:
  %47 = const i32 0
  %48 = const i32 79108
  %49 = int.add %47 %48
  memory.guard %memory:0 %49 32
  %50 = load.32 i32 %memory:0 %49
  local.set %0 %50
  %51 = int.eqz %50
  br.cond %51 %BB:12 %BB:8

#pred = {%BB:7}
%BB:8:
  %52 = local.get %0
  %53 = const i32 20
  %54 = int.add %52 %53
  memory.guard %memory:0 %54 32
  %55 = load.32 i32 %memory:0 %54
  %56 = local.get %0
  %57 = const i32 24
  %58 = int.add %56 %57
  memory.guard %memory:0 %58 32
  %59 = load.32 i32 %memory:0 %58
  %60 = int.eq %55 %59
  br.cond %60 %BB:10 %BB:9

#pred = {%BB:8}
%BB:9:
  %61 = local.get %0
  %62 = const i32 0
  %63 = const i32 0
  %64 = local.get %0
  %65 = const i32 32
  %66 = int.add %64 %65
  memory.guard %memory:0 %66 32
  %67 = load.32 i32 %memory:0 %66
  %68 = call.indirect %table:0 %67 (%61, %62, %63)
  br %BB:10

#pred = {%BB:9, %BB:8}
%BB:10:
  %69 = local.get %0
  %70 = const i32 4
  %71 = int.add %69 %70
  memory.guard %memory:0 %71 32
  %72 = load.32 i32 %memory:0 %71
  local.set %1 %72
  %73 = local.get %0
  %74 = const i32 8
  %75 = int.add %73 %74
  memory.guard %memory:0 %75 32
  %76 = load.32 i32 %memory:0 %75
  local.set %2 %76
  %77 = int.eq %72 %76
  br.cond %77 %BB:12 %BB:11

#pred = {%BB:10}
%BB:11:
  %78 = local.get %0
  %79 = local.get %1
  %80 = local.get %2
  %81 = int.sub %79 %80
  %82 = cast.s i64 %81
  %83 = const i32 1
  %84 = local.get %0
  %85 = const i32 36
  %86 = int.add %84 %85
  memory.guard %memory:0 %86 32
  %87 = load.32 i32 %memory:0 %86
  %88 = call.indirect %table:0 %87 (%78, %82, %83)
  br %BB:12

#pred = {%BB:11, %BB:10, %BB:7}
%BB:12:
  %89 = const i32 0
  %90 = const i32 69784
  %91 = int.add %89 %90
  memory.guard %memory:0 %91 32
  %92 = load.32 i32 %memory:0 %91
  local.set %0 %92
  %93 = int.eqz %92
  br.cond %93 %BB:17 %BB:13

#pred = {%BB:12}
%BB:13:
  %94 = local.get %0
  %95 = const i32 20
  %96 = int.add %94 %95
  memory.guard %memory:0 %96 32
  %97 = load.32 i32 %memory:0 %96
  %98 = local.get %0
  %99 = const i32 24
  %100 = int.add %98 %99
  memory.guard %memory:0 %100 32
  %101 = load.32 i32 %memory:0 %100
  %102 = int.eq %97 %101
  br.cond %102 %BB:15 %BB:14

#pred = {%BB:13}
%BB:14:
  %103 = local.get %0
  %104 = const i32 0
  %105 = const i32 0
  %106 = local.get %0
  %107 = const i32 32
  %108 = int.add %106 %107
  memory.guard %memory:0 %108 32
  %109 = load.32 i32 %memory:0 %108
  %110 = call.indirect %table:0 %109 (%103, %104, %105)
  br %BB:15

#pred = {%BB:14, %BB:13}
%BB:15:
  %111 = local.get %0
  %112 = const i32 4
  %113 = int.add %111 %112
  memory.guard %memory:0 %113 32
  %114 = load.32 i32 %memory:0 %113
  local.set %1 %114
  %115 = local.get %0
  %116 = const i32 8
  %117 = int.add %115 %116
  memory.guard %memory:0 %117 32
  %118 = load.32 i32 %memory:0 %117
  local.set %2 %118
  %119 = int.eq %114 %118
  br.cond %119 %BB:17 %BB:16

#pred = {%BB:15}
%BB:16:
  %120 = local.get %0
  %121 = local.get %1
  %122 = local.get %2
  %123 = int.sub %121 %122
  %124 = cast.s i64 %123
  %125 = const i32 1
  %126 = local.get %0
  %127 = const i32 36
  %128 = int.add %126 %127
  memory.guard %memory:0 %128 32
  %129 = load.32 i32 %memory:0 %128
  %130 = call.indirect %table:0 %129 (%120, %124, %125)
  br %BB:17

#pred = {%BB:16, %BB:15, %BB:12}
%BB:17:
  %131 = const i32 0
  %132 = const i32 69664
  %133 = int.add %131 %132
  memory.guard %memory:0 %133 32
  %134 = load.32 i32 %memory:0 %133
  local.set %0 %134
  %135 = int.eqz %134
  br.cond %135 %BB:22 %BB:18

#pred = {%BB:17}
%BB:18:
  %136 = local.get %0
  %137 = const i32 20
  %138 = int.add %136 %137
  memory.guard %memory:0 %138 32
  %139 = load.32 i32 %memory:0 %138
  %140 = local.get %0
  %141 = const i32 24
  %142 = int.add %140 %141
  memory.guard %memory:0 %142 32
  %143 = load.32 i32 %memory:0 %142
  %144 = int.eq %139 %143
  br.cond %144 %BB:20 %BB:19

#pred = {%BB:18}
%BB:19:
  %145 = local.get %0
  %146 = const i32 0
  %147 = const i32 0
  %148 = local.get %0
  %149 = const i32 32
  %150 = int.add %148 %149
  memory.guard %memory:0 %150 32
  %151 = load.32 i32 %memory:0 %150
  %152 = call.indirect %table:0 %151 (%145, %146, %147)
  br %BB:20

#pred = {%BB:19, %BB:18}
%BB:20:
  %153 = local.get %0
  %154 = const i32 4
  %155 = int.add %153 %154
  memory.guard %memory:0 %155 32
  %156 = load.32 i32 %memory:0 %155
  local.set %1 %156
  %157 = local.get %0
  %158 = const i32 8
  %159 = int.add %157 %158
  memory.guard %memory:0 %159 32
  %160 = load.32 i32 %memory:0 %159
  local.set %2 %160
  %161 = int.eq %156 %160
  br.cond %161 %BB:22 %BB:21

#pred = {%BB:20}
%BB:21:
  %162 = local.get %0
  %163 = local.get %1
  %164 = local.get %2
  %165 = int.sub %163 %164
  %166 = cast.s i64 %165
  %167 = const i32 1
  %168 = local.get %0
  %169 = const i32 36
  %170 = int.add %168 %169
  memory.guard %memory:0 %170 32
  %171 = load.32 i32 %memory:0 %170
  %172 = call.indirect %table:0 %171 (%162, %166, %167)
  br %BB:22

#pred = {%BB:21, %BB:20, %BB:17}
%BB:22:
  ret

}

function %function:79 : [] -> [i32] {
{}
#pred = {}
%entry:
  %0 = const i32 79112
  ret %0

}

function %function:80 : [] -> [] {
{}
#pred = {}
%entry:
  ret

}

function %function:81 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, %3:i32, %4:i32}
#pred = {}
%entry:
  %5 = global.get %global:0
  %6 = const i32 16
  %7 = int.sub %5 %6
  local.set %3 %7
  global.set %global:0%7
  %8 = const i32 -1
  local.set %4 %8
  %9 = local.get (arg)%2
  %10 = const i32 -1
  %11 = int.gt.s %9 %10
  br.cond %11 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %12 = const i32 0
  %13 = const i32 28
  %14 = const i32 79096
  %15 = int.add %12 %14
  memory.guard %memory:0 %15 32
  store.32 %memory:0 %15 %13
  br %BB:4

#pred = {%entry}
%BB:1:
  %16 = local.get (arg)%0
  %17 = local.get (arg)%1
  %18 = local.get (arg)%2
  %19 = local.get %3
  %20 = const i32 12
  %21 = int.add %19 %20
  %22 = call %function:5(%16, %17, %18, %21)
  local.set (arg)%2 %22
  %23 = int.eqz %22
  br.cond %23 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %24 = const i32 0
  %25 = local.get (arg)%2
  %26 = const i32 79096
  %27 = int.add %24 %26
  memory.guard %memory:0 %27 32
  store.32 %memory:0 %27 %25
  %28 = const i32 -1
  local.set %4 %28
  br %BB:4

#pred = {%BB:1}
%BB:3:
  %29 = local.get %3
  %30 = const i32 12
  %31 = int.add %29 %30
  memory.guard %memory:0 %31 32
  %32 = load.32 i32 %memory:0 %31
  local.set %4 %32
  br %BB:4

#pred = {%BB:3, %BB:2, %BB:0}
%BB:4:
  %33 = local.get %3
  %34 = const i32 16
  %35 = int.add %33 %34
  global.set %global:0%35
  %36 = local.get %4
  ret %36

}

function %function:82 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, %3:i32, %4:i32, %5:i32, %6:i32, %7:i32, %8:i32, %9:i32}
#pred = {}
%entry:
  %10 = global.get %global:0
  %11 = const i32 16
  %12 = int.sub %10 %11
  local.set %3 %12
  global.set %global:0%12
  %13 = local.get %3
  %14 = local.get (arg)%2
  %15 = const i32 12
  %16 = int.add %13 %15
  memory.guard %memory:0 %16 32
  store.32 %memory:0 %16 %14
  %17 = local.get %3
  %18 = local.get (arg)%1
  %19 = const i32 8
  %20 = int.add %17 %19
  memory.guard %memory:0 %20 32
  store.32 %memory:0 %20 %18
  %21 = local.get %3
  %22 = local.get (arg)%0
  %23 = const i32 24
  %24 = int.add %22 %23
  memory.guard %memory:0 %24 32
  %25 = load.32 i32 %memory:0 %24
  local.set (arg)%1 %25
  memory.guard %memory:0 %21 32
  store.32 %memory:0 %21 %25
  %26 = local.get %3
  %27 = local.get (arg)%0
  %28 = const i32 20
  %29 = int.add %27 %28
  memory.guard %memory:0 %29 32
  %30 = load.32 i32 %memory:0 %29
  %31 = local.get (arg)%1
  %32 = int.sub %30 %31
  local.set (arg)%1 %32
  %33 = const i32 4
  %34 = int.add %26 %33
  memory.guard %memory:0 %34 32
  store.32 %memory:0 %34 %32
  %35 = const i32 2
  local.set %4 %35
  %36 = local.get (arg)%1
  %37 = local.get (arg)%2
  %38 = int.add %36 %37
  local.set %5 %38
  %39 = local.get (arg)%0
  %40 = const i32 56
  %41 = int.add %39 %40
  memory.guard %memory:0 %41 32
  %42 = load.32 i32 %memory:0 %41
  %43 = local.get %3
  %44 = const i32 2
  %45 = call %function:81(%42, %43, %44)
  local.set %6 %45
  %46 = int.eq %38 %45
  br.cond %46 %BB:6 %BB:0

#pred = {%entry}
%BB:0:
  %47 = local.get %3
  local.set (arg)%1 %47
  br %BB:1

#pred = {%BB:4, %BB:0}
%BB:1:
  %48 = local.get %6
  %49 = const i32 -1
  %50 = int.gt.s %48 %49
  br.cond %50 %BB:4 %BB:2

#pred = {%BB:1}
%BB:2:
  %51 = const i32 0
  local.set %6 %51
  %52 = local.get (arg)%0
  %53 = const i32 0
  %54 = const i32 24
  %55 = int.add %52 %54
  memory.guard %memory:0 %55 32
  store.32 %memory:0 %55 %53
  %56 = local.get (arg)%0
  %57 = const i64 0
  %58 = const i32 16
  %59 = int.add %56 %58
  memory.guard %memory:0 %59 64
  store.64 %memory:0 %59 %57
  %60 = local.get (arg)%0
  %61 = local.get (arg)%0
  memory.guard %memory:0 %61 32
  %62 = load.32 i32 %memory:0 %61
  %63 = const i32 32
  %64 = int.or %62 %63
  memory.guard %memory:0 %60 32
  store.32 %memory:0 %60 %64
  %65 = local.get %4
  %66 = const i32 2
  %67 = int.eq %65 %66
  br.cond %67 %BB:7 %BB:3

#pred = {%BB:2}
%BB:3:
  %68 = local.get (arg)%2
  %69 = local.get (arg)%1
  %70 = const i32 4
  %71 = int.add %69 %70
  memory.guard %memory:0 %71 32
  %72 = load.32 i32 %memory:0 %71
  %73 = int.sub %68 %72
  local.set %6 %73
  br %BB:7

#pred = {%BB:1}
%BB:4:
  %74 = local.get (arg)%1
  %75 = local.get %6
  %76 = local.get (arg)%1
  %77 = const i32 4
  %78 = int.add %76 %77
  memory.guard %memory:0 %78 32
  %79 = load.32 i32 %memory:0 %78
  local.set %7 %79
  %80 = int.gt.u %75 %79
  local.set %8 %80
  %81 = const i32 3
  %82 = int.shl %80 %81
  %83 = int.add %74 %82
  local.set %9 %83
  %84 = local.get %9
  memory.guard %memory:0 %84 32
  %85 = load.32 i32 %memory:0 %84
  %86 = local.get %6
  %87 = local.get %7
  %88 = const i32 0
  %89 = local.get %8
  %90 = select %89 %87 %88
  %91 = int.sub %86 %90
  local.set %7 %91
  %92 = int.add %85 %91
  memory.guard %memory:0 %83 32
  store.32 %memory:0 %83 %92
  %93 = local.get (arg)%1
  %94 = const i32 12
  %95 = const i32 4
  %96 = local.get %8
  %97 = select %96 %94 %95
  %98 = int.add %93 %97
  local.set %9 %98
  %99 = local.get %9
  memory.guard %memory:0 %99 32
  %100 = load.32 i32 %memory:0 %99
  %101 = local.get %7
  %102 = int.sub %100 %101
  memory.guard %memory:0 %98 32
  store.32 %memory:0 %98 %102
  %103 = local.get %5
  %104 = local.get %6
  %105 = int.sub %103 %104
  local.set %5 %105
  %106 = local.get (arg)%0
  %107 = const i32 56
  %108 = int.add %106 %107
  memory.guard %memory:0 %108 32
  %109 = load.32 i32 %memory:0 %108
  %110 = local.get (arg)%1
  %111 = const i32 8
  %112 = int.add %110 %111
  %113 = local.get (arg)%1
  %114 = local.get %8
  %115 = select %114 %112 %113
  local.set (arg)%1 %115
  %116 = local.get %4
  %117 = local.get %8
  %118 = int.sub %116 %117
  local.set %4 %118
  %119 = call %function:81(%109, %115, %118)
  local.set %6 %119
  %120 = int.ne %105 %119
  br.cond %120 %BB:1 %BB:5

#pred = {%BB:4}
%BB:5:
  br %BB:6

#pred = {%BB:5, %entry}
%BB:6:
  %121 = local.get (arg)%0
  %122 = local.get (arg)%0
  %123 = const i32 40
  %124 = int.add %122 %123
  memory.guard %memory:0 %124 32
  %125 = load.32 i32 %memory:0 %124
  local.set (arg)%1 %125
  %126 = const i32 24
  %127 = int.add %121 %126
  memory.guard %memory:0 %127 32
  store.32 %memory:0 %127 %125
  %128 = local.get (arg)%0
  %129 = local.get (arg)%1
  %130 = const i32 20
  %131 = int.add %128 %130
  memory.guard %memory:0 %131 32
  store.32 %memory:0 %131 %129
  %132 = local.get (arg)%0
  %133 = local.get (arg)%1
  %134 = local.get (arg)%0
  %135 = const i32 44
  %136 = int.add %134 %135
  memory.guard %memory:0 %136 32
  %137 = load.32 i32 %memory:0 %136
  %138 = int.add %133 %137
  %139 = const i32 16
  %140 = int.add %132 %139
  memory.guard %memory:0 %140 32
  store.32 %memory:0 %140 %138
  %141 = local.get (arg)%2
  local.set %6 %141
  br %BB:7

#pred = {%BB:6, %BB:3, %BB:2}
%BB:7:
  %142 = local.get %3
  %143 = const i32 16
  %144 = int.add %142 %143
  global.set %global:0%144
  %145 = local.get %6
  ret %145

}

function %function:83 : [i32] -> [i32] {
{(arg)%0:i32, %1:i32}
#pred = {}
%entry:
  %2 = const i32 0
  %3 = const i32 80176
  %4 = int.add %2 %3
  memory.guard %memory:0 %4 32
  %5 = load.32 i32 %memory:0 %4
  local.set %1 %5
  br.cond %5 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %6 = const i32 80152
  local.set %1 %6
  %7 = const i32 0
  %8 = const i32 80152
  %9 = const i32 80176
  %10 = int.add %7 %9
  memory.guard %memory:0 %10 32
  store.32 %memory:0 %10 %8
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  %11 = const i32 0
  %12 = local.get (arg)%0
  %13 = local.get (arg)%0
  %14 = const i32 76
  %15 = int.gt.u %13 %14
  %16 = select %15 %11 %12
  %17 = const i32 1
  %18 = int.shl %16 %17
  %19 = const i32 68080
  %20 = int.add %18 %19
  memory.guard %memory:0 %20 16
  %21 = load.16 i32 %memory:0 %20
  %22 = const i32 66520
  %23 = int.add %21 %22
  %24 = local.get %1
  %25 = const i32 20
  %26 = int.add %24 %25
  memory.guard %memory:0 %26 32
  %27 = load.32 i32 %memory:0 %26
  %28 = call %function:101(%23, %27)
  ret %28

}

function %function:84 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, %2:i32}
#pred = {}
%entry:
  %3 = local.get (arg)%0
  %4 = call %function:98(%3)
  local.set %2 %4
  %5 = const i32 -1
  %6 = const i32 0
  %7 = local.get %2
  %8 = local.get (arg)%0
  %9 = const i32 1
  %10 = local.get %2
  %11 = local.get (arg)%1
  %12 = call %function:73(%8, %9, %10, %11)
  %13 = int.ne %7 %12
  %14 = select %13 %5 %6
  ret %14

}

function %function:85 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, %3:i32, %4:i32, %5:i32}
#pred = {}
%entry:
  %6 = global.get %global:0
  %7 = const i32 208
  %8 = int.sub %6 %7
  local.set %3 %8
  global.set %global:0%8
  %9 = local.get %3
  %10 = local.get (arg)%2
  %11 = const i32 204
  %12 = int.add %9 %11
  memory.guard %memory:0 %12 32
  store.32 %memory:0 %12 %10
  %13 = local.get %3
  %14 = const i32 160
  %15 = int.add %13 %14
  %16 = const i32 32
  %17 = int.add %15 %16
  %18 = const i64 0
  memory.guard %memory:0 %17 64
  store.64 %memory:0 %17 %18
  %19 = local.get %3
  %20 = const i32 184
  %21 = int.add %19 %20
  %22 = const i64 0
  memory.guard %memory:0 %21 64
  store.64 %memory:0 %21 %22
  %23 = local.get %3
  %24 = const i32 176
  %25 = int.add %23 %24
  %26 = const i64 0
  memory.guard %memory:0 %25 64
  store.64 %memory:0 %25 %26
  %27 = local.get %3
  %28 = const i64 0
  %29 = const i32 168
  %30 = int.add %27 %29
  memory.guard %memory:0 %30 64
  store.64 %memory:0 %30 %28
  %31 = local.get %3
  %32 = const i64 0
  %33 = const i32 160
  %34 = int.add %31 %33
  memory.guard %memory:0 %34 64
  store.64 %memory:0 %34 %32
  %35 = local.get %3
  %36 = local.get (arg)%2
  %37 = const i32 200
  %38 = int.add %35 %37
  memory.guard %memory:0 %38 32
  store.32 %memory:0 %38 %36
  %39 = const i32 0
  %40 = local.get (arg)%1
  %41 = local.get %3
  %42 = const i32 200
  %43 = int.add %41 %42
  %44 = local.get %3
  %45 = const i32 80
  %46 = int.add %44 %45
  %47 = local.get %3
  %48 = const i32 160
  %49 = int.add %47 %48
  %50 = call %function:86(%39, %40, %43, %46, %49)
  %51 = const i32 0
  %52 = int.ge.s %50 %51
  br.cond %52 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %53 = const i32 -1
  local.set (arg)%0 %53
  br %BB:13

#pred = {%entry}
%BB:1:
  %54 = local.get (arg)%0
  memory.guard %memory:0 %54 32
  %55 = load.32 i32 %memory:0 %54
  local.set %4 %55
  %56 = local.get (arg)%0
  %57 = const i32 60
  %58 = int.add %56 %57
  memory.guard %memory:0 %58 32
  %59 = load.32 i32 %memory:0 %58
  %60 = const i32 0
  %61 = int.gt.s %59 %60
  br.cond %61 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %62 = local.get (arg)%0
  %63 = local.get %4
  %64 = const i32 -33
  %65 = int.and %63 %64
  memory.guard %memory:0 %62 32
  store.32 %memory:0 %62 %65
  br %BB:3

#pred = {%BB:2, %BB:1}
%BB:3:
  %66 = local.get (arg)%0
  %67 = const i32 44
  %68 = int.add %66 %67
  memory.guard %memory:0 %68 32
  %69 = load.32 i32 %memory:0 %68
  br.cond %69 %BB:5 %BB:4

#pred = {%BB:3}
%BB:4:
  %70 = local.get (arg)%0
  %71 = const i32 80
  %72 = const i32 44
  %73 = int.add %70 %72
  memory.guard %memory:0 %73 32
  store.32 %memory:0 %73 %71
  %74 = local.get (arg)%0
  %75 = const i32 0
  %76 = const i32 24
  %77 = int.add %74 %76
  memory.guard %memory:0 %77 32
  store.32 %memory:0 %77 %75
  %78 = local.get (arg)%0
  %79 = const i64 0
  %80 = const i32 16
  %81 = int.add %78 %80
  memory.guard %memory:0 %81 64
  store.64 %memory:0 %81 %79
  %82 = local.get (arg)%0
  %83 = const i32 40
  %84 = int.add %82 %83
  memory.guard %memory:0 %84 32
  %85 = load.32 i32 %memory:0 %84
  local.set %5 %85
  %86 = local.get (arg)%0
  %87 = local.get %3
  %88 = const i32 40
  %89 = int.add %86 %88
  memory.guard %memory:0 %89 32
  store.32 %memory:0 %89 %87
  br %BB:7

#pred = {%BB:3}
%BB:5:
  %90 = const i32 0
  local.set %5 %90
  %91 = local.get (arg)%0
  %92 = const i32 16
  %93 = int.add %91 %92
  memory.guard %memory:0 %93 32
  %94 = load.32 i32 %memory:0 %93
  br.cond %94 %BB:9 %BB:6

#pred = {%BB:5}
%BB:6:
  br %BB:7

#pred = {%BB:6, %BB:4}
%BB:7:
  %95 = const i32 -1
  local.set (arg)%2 %95
  %96 = local.get (arg)%0
  %97 = call %function:71(%96)
  br.cond %97 %BB:10 %BB:8

#pred = {%BB:7}
%BB:8:
  br %BB:9

#pred = {%BB:8, %BB:5}
%BB:9:
  %98 = local.get (arg)%0
  %99 = local.get (arg)%1
  %100 = local.get %3
  %101 = const i32 200
  %102 = int.add %100 %101
  %103 = local.get %3
  %104 = const i32 80
  %105 = int.add %103 %104
  %106 = local.get %3
  %107 = const i32 160
  %108 = int.add %106 %107
  %109 = call %function:86(%98, %99, %102, %105, %108)
  local.set (arg)%2 %109
  br %BB:10

#pred = {%BB:9, %BB:7}
%BB:10:
  %110 = local.get %4
  %111 = const i32 32
  %112 = int.and %110 %111
  local.set (arg)%1 %112
  %113 = local.get %5
  %114 = int.eqz %113
  br.cond %114 %BB:12 %BB:11

#pred = {%BB:10}
%BB:11:
  %115 = local.get (arg)%0
  %116 = const i32 0
  %117 = const i32 0
  %118 = local.get (arg)%0
  %119 = const i32 32
  %120 = int.add %118 %119
  memory.guard %memory:0 %120 32
  %121 = load.32 i32 %memory:0 %120
  %122 = call.indirect %table:0 %121 (%115, %116, %117)
  %123 = local.get (arg)%0
  %124 = const i32 0
  %125 = const i32 44
  %126 = int.add %123 %125
  memory.guard %memory:0 %126 32
  store.32 %memory:0 %126 %124
  %127 = local.get (arg)%0
  %128 = local.get %5
  %129 = const i32 40
  %130 = int.add %127 %129
  memory.guard %memory:0 %130 32
  store.32 %memory:0 %130 %128
  %131 = local.get (arg)%0
  %132 = const i32 0
  %133 = const i32 24
  %134 = int.add %131 %133
  memory.guard %memory:0 %134 32
  store.32 %memory:0 %134 %132
  %135 = local.get (arg)%0
  %136 = const i32 0
  %137 = const i32 16
  %138 = int.add %135 %137
  memory.guard %memory:0 %138 32
  store.32 %memory:0 %138 %136
  %139 = local.get (arg)%0
  %140 = const i32 20
  %141 = int.add %139 %140
  memory.guard %memory:0 %141 32
  %142 = load.32 i32 %memory:0 %141
  local.set %5 %142
  %143 = local.get (arg)%0
  %144 = const i32 0
  %145 = const i32 20
  %146 = int.add %143 %145
  memory.guard %memory:0 %146 32
  store.32 %memory:0 %146 %144
  %147 = local.get (arg)%2
  %148 = const i32 -1
  %149 = local.get %5
  %150 = select %149 %147 %148
  local.set (arg)%2 %150
  br %BB:12

#pred = {%BB:11, %BB:10}
%BB:12:
  %151 = local.get (arg)%0
  %152 = local.get (arg)%0
  memory.guard %memory:0 %152 32
  %153 = load.32 i32 %memory:0 %152
  local.set %5 %153
  %154 = local.get (arg)%1
  %155 = int.or %153 %154
  memory.guard %memory:0 %151 32
  store.32 %memory:0 %151 %155
  %156 = const i32 -1
  %157 = local.get (arg)%2
  %158 = local.get %5
  %159 = const i32 32
  %160 = int.and %158 %159
  %161 = select %160 %156 %157
  local.set (arg)%0 %161
  br %BB:13

#pred = {%BB:12, %BB:0}
%BB:13:
  %162 = local.get %3
  %163 = const i32 208
  %164 = int.add %162 %163
  global.set %global:0%164
  %165 = local.get (arg)%0
  ret %165

}

function %function:86 : [i32, i32, i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, (arg)%3:i32, (arg)%4:i32, %5:i32, %6:i32, %7:i32, %8:i32, %9:i32, %10:i32, %11:i32, %12:i32, %13:i32, %14:i32, %15:i32, %16:i32, %17:i32, %18:i32, %19:i32, %20:i32, %21:i32, %22:i32, %23:i32, %24:i32, %25:i32, %26:i32, %27:i32, %28:i32, %29:i32, %30:i32, %31:i32, %32:i64, %33:i64, %34:f64, %35:i32, %36:i32, %37:i32, %38:i32, %39:f64, %40:i32}
#pred = {}
%entry:
  %41 = global.get %global:0
  %42 = const i32 880
  %43 = int.sub %41 %42
  local.set %5 %43
  global.set %global:0%43
  %44 = local.get %5
  %45 = const i32 55
  %46 = int.add %44 %45
  local.set %6 %46
  %47 = const i32 -2
  %48 = local.get %5
  %49 = const i32 336
  %50 = int.add %48 %49
  %51 = int.sub %47 %50
  local.set %7 %51
  %52 = local.get %5
  %53 = const i32 336
  %54 = int.add %52 %53
  %55 = const i32 9
  %56 = int.or %54 %55
  local.set %8 %56
  %57 = local.get %5
  %58 = const i32 660
  %59 = int.add %57 %58
  local.set %9 %59
  %60 = local.get %5
  %61 = const i32 368
  %62 = int.add %60 %61
  %63 = const i32 4
  %64 = int.or %62 %63
  local.set %10 %64
  %65 = local.get %5
  %66 = const i32 656
  %67 = int.add %65 %66
  local.set %11 %67
  %68 = local.get %5
  %69 = const i32 324
  %70 = int.add %68 %69
  %71 = const i32 12
  %72 = int.add %70 %71
  local.set %12 %72
  %73 = const i32 0
  %74 = local.get %5
  %75 = const i32 336
  %76 = int.add %74 %75
  %77 = int.sub %73 %76
  local.set %13 %77
  %78 = local.get %5
  %79 = const i32 56
  %80 = int.add %78 %79
  local.set %14 %80
  %81 = const i32 0
  local.set %15 %81
  %82 = const i32 0
  local.set %16 %82
  %83 = const i32 0
  local.set %17 %83
  br %BB:0

#pred = {%BB:101, %BB:198, %BB:439, %entry, %BB:114, %BB:440, %BB:115, %BB:447, %BB:112, %BB:113, %BB:15, %BB:448, %BB:110, %BB:111, %BB:108, %BB:109, %BB:567}
%BB:0:
  %84 = local.get (arg)%1
  local.set %18 %84
  %85 = local.get %17
  %86 = const i32 2147483647
  %87 = local.get %16
  %88 = int.sub %86 %87
  %89 = int.gt.s %85 %88
  br.cond %89 %BB:569 %BB:1

#pred = {%BB:0}
%BB:1:
  %90 = local.get %17
  %91 = local.get %16
  %92 = int.add %90 %91
  local.set %16 %92
  %93 = local.get %18
  memory.guard %memory:0 %93 8
  %94 = load.8 i32 %memory:0 %93
  local.set %17 %94
  %95 = int.eqz %94
  br.cond %95 %BB:47 %BB:2

#pred = {%BB:1}
%BB:2:
  %96 = local.get %18
  local.set (arg)%1 %96
  br %BB:3

#pred = {%BB:46, %BB:2}
%BB:3:
  %97 = local.get %17
  %98 = const i32 255
  %99 = int.and %97 %98
  local.set %17 %99
  %100 = int.eqz %99
  br.cond %100 %BB:10 %BB:4

#pred = {%BB:3}
%BB:4:
  %101 = local.get %17
  %102 = const i32 37
  %103 = int.ne %101 %102
  br.cond %103 %BB:46 %BB:5

#pred = {%BB:4}
%BB:5:
  %104 = local.get (arg)%1
  local.set %19 %104
  %105 = local.get (arg)%1
  local.set %17 %105
  br %BB:6

#pred = {%BB:8, %BB:5}
%BB:6:
  %106 = local.get %17
  %107 = const i32 1
  %108 = int.add %106 %107
  memory.guard %memory:0 %108 8
  %109 = load.8 i32 %memory:0 %108
  %110 = const i32 37
  %111 = int.eq %109 %110
  br.cond %111 %BB:8 %BB:7

#pred = {%BB:6}
%BB:7:
  %112 = local.get %17
  local.set (arg)%1 %112
  br %BB:11

#pred = {%BB:6}
%BB:8:
  %113 = local.get %19
  %114 = const i32 1
  %115 = int.add %113 %114
  local.set %19 %115
  %116 = local.get %17
  %117 = const i32 2
  %118 = int.add %116 %117
  memory.guard %memory:0 %118 8
  %119 = load.8 i32 %memory:0 %118
  local.set %20 %119
  %120 = local.get %17
  %121 = const i32 2
  %122 = int.add %120 %121
  local.set (arg)%1 %122
  local.set %17 %122
  %123 = local.get %20
  %124 = const i32 37
  %125 = int.eq %123 %124
  br.cond %125 %BB:6 %BB:9

#pred = {%BB:8}
%BB:9:
  br %BB:11

#pred = {%BB:3}
%BB:10:
  %126 = local.get (arg)%1
  local.set %19 %126
  br %BB:11

#pred = {%BB:10, %BB:9, %BB:7}
%BB:11:
  %127 = local.get %19
  %128 = local.get %18
  %129 = int.sub %127 %128
  local.set %17 %129
  %130 = const i32 2147483647
  %131 = local.get %16
  %132 = int.sub %130 %131
  local.set %20 %132
  %133 = int.gt.s %129 %132
  br.cond %133 %BB:569 %BB:12

#pred = {%BB:11}
%BB:12:
  %134 = local.get (arg)%0
  %135 = int.eqz %134
  br.cond %135 %BB:15 %BB:13

#pred = {%BB:12}
%BB:13:
  %136 = local.get (arg)%0
  memory.guard %memory:0 %136 8
  %137 = load.8 i32 %memory:0 %136
  %138 = const i32 32
  %139 = int.and %137 %138
  br.cond %139 %BB:15 %BB:14

#pred = {%BB:13}
%BB:14:
  %140 = local.get %18
  %141 = local.get %17
  %142 = local.get (arg)%0
  %143 = call %function:72(%140, %141, %142)
  br %BB:15

#pred = {%BB:14, %BB:13, %BB:12}
%BB:15:
  %144 = local.get %17
  br.cond %144 %BB:0 %BB:16

#pred = {%BB:15}
%BB:16:
  %145 = local.get (arg)%1
  %146 = const i32 1
  %147 = int.add %145 %146
  local.set %17 %147
  %148 = local.get (arg)%1
  %149 = const i32 1
  %150 = int.add %148 %149
  memory.guard %memory:0 %150 8
  %151 = load.8 i32 %memory:0 %150
  %152 = extend.8 %151
  local.set %21 %152
  %153 = const i32 -48
  %154 = int.add %152 %153
  local.set %22 %154
  %155 = const i32 9
  %156 = int.le.u %154 %155
  br.cond %156 %BB:18 %BB:17

#pred = {%BB:16}
%BB:17:
  %157 = const i32 -1
  local.set %23 %157
  br %BB:19

#pred = {%BB:16}
%BB:18:
  %158 = local.get (arg)%1
  %159 = const i32 3
  %160 = int.add %158 %159
  %161 = local.get %17
  %162 = local.get (arg)%1
  %163 = const i32 2
  %164 = int.add %162 %163
  memory.guard %memory:0 %164 8
  %165 = load.8 i32 %memory:0 %164
  %166 = const i32 36
  %167 = int.eq %165 %166
  local.set %19 %167
  %168 = select %167 %160 %161
  local.set %17 %168
  %169 = local.get %22
  %170 = const i32 -1
  %171 = local.get %19
  %172 = select %171 %169 %170
  local.set %23 %172
  %173 = const i32 1
  %174 = local.get %15
  %175 = local.get %19
  %176 = select %175 %173 %174
  local.set %15 %176
  %177 = local.get (arg)%1
  %178 = const i32 3
  %179 = const i32 1
  %180 = local.get %19
  %181 = select %180 %178 %179
  %182 = int.add %177 %181
  memory.guard %memory:0 %182 8
  %183 = load.8 i32 %memory:0 %182
  %184 = extend.8 %183
  local.set %21 %184
  br %BB:19

#pred = {%BB:18, %BB:17}
%BB:19:
  %185 = const i32 0
  local.set %19 %185
  %186 = local.get %21
  %187 = const i32 -32
  %188 = int.add %186 %187
  local.set (arg)%1 %188
  %189 = const i32 31
  %190 = int.le.u %188 %189
  br.cond %190 %BB:21 %BB:20

#pred = {%BB:19}
%BB:20:
  %191 = local.get %17
  local.set (arg)%1 %191
  br %BB:27

#pred = {%BB:19}
%BB:21:
  %192 = const i32 1
  %193 = local.get (arg)%1
  %194 = int.shl %192 %193
  local.set %22 %194
  %195 = const i32 75913
  %196 = int.and %194 %195
  br.cond %196 %BB:23 %BB:22

#pred = {%BB:21}
%BB:22:
  %197 = local.get %17
  local.set (arg)%1 %197
  br %BB:27

#pred = {%BB:21}
%BB:23:
  %198 = const i32 0
  local.set %19 %198
  br %BB:24

#pred = {%BB:25, %BB:23}
%BB:24:
  %199 = local.get %17
  %200 = const i32 1
  %201 = int.add %199 %200
  local.set (arg)%1 %201
  %202 = local.get %22
  %203 = local.get %19
  %204 = int.or %202 %203
  local.set %19 %204
  %205 = local.get %17
  %206 = const i32 1
  %207 = int.add %205 %206
  memory.guard %memory:0 %207 8
  %208 = load.8 i32 %memory:0 %207
  %209 = extend.8 %208
  local.set %21 %209
  %210 = const i32 -32
  %211 = int.add %209 %210
  local.set %22 %211
  %212 = const i32 31
  %213 = int.gt.u %211 %212
  br.cond %213 %BB:27 %BB:25

#pred = {%BB:24}
%BB:25:
  %214 = local.get (arg)%1
  local.set %17 %214
  %215 = const i32 1
  %216 = local.get %22
  %217 = int.shl %215 %216
  local.set %22 %217
  %218 = const i32 75913
  %219 = int.and %217 %218
  br.cond %219 %BB:24 %BB:26

#pred = {%BB:25}
%BB:26:
  br %BB:27

#pred = {%BB:26, %BB:24, %BB:22, %BB:20}
%BB:27:
  %220 = local.get %21
  %221 = const i32 42
  %222 = int.ne %220 %221
  br.cond %222 %BB:37 %BB:28

#pred = {%BB:27}
%BB:28:
  %223 = local.get (arg)%1
  %224 = const i32 1
  %225 = int.add %223 %224
  memory.guard %memory:0 %225 8
  %226 = load.8 i32 %memory:0 %225
  %227 = extend.8 %226
  %228 = const i32 -48
  %229 = int.add %227 %228
  local.set %17 %229
  %230 = const i32 9
  %231 = int.gt.u %229 %230
  br.cond %231 %BB:31 %BB:29

#pred = {%BB:28}
%BB:29:
  %232 = local.get (arg)%1
  %233 = const i32 2
  %234 = int.add %232 %233
  memory.guard %memory:0 %234 8
  %235 = load.8 i32 %memory:0 %234
  %236 = const i32 36
  %237 = int.ne %235 %236
  br.cond %237 %BB:31 %BB:30

#pred = {%BB:29}
%BB:30:
  %238 = local.get (arg)%4
  %239 = local.get %17
  %240 = const i32 2
  %241 = int.shl %239 %240
  %242 = int.add %238 %241
  %243 = const i32 10
  memory.guard %memory:0 %242 32
  store.32 %memory:0 %242 %243
  %244 = local.get (arg)%1
  %245 = const i32 3
  %246 = int.add %244 %245
  local.set %22 %246
  %247 = local.get (arg)%1
  %248 = const i32 1
  %249 = int.add %247 %248
  memory.guard %memory:0 %249 8
  %250 = load.8 i32 %memory:0 %249
  %251 = extend.8 %250
  %252 = const i32 3
  %253 = int.shl %251 %252
  %254 = local.get (arg)%3
  %255 = int.add %253 %254
  %256 = const i32 -384
  %257 = int.add %255 %256
  memory.guard %memory:0 %257 32
  %258 = load.32 i32 %memory:0 %257
  local.set %24 %258
  %259 = const i32 1
  local.set %15 %259
  br %BB:35

#pred = {%BB:29, %BB:28}
%BB:31:
  %260 = local.get %15
  br.cond %260 %BB:98 %BB:32

#pred = {%BB:31}
%BB:32:
  %261 = local.get (arg)%1
  %262 = const i32 1
  %263 = int.add %261 %262
  local.set %22 %263
  %264 = local.get (arg)%0
  br.cond %264 %BB:34 %BB:33

#pred = {%BB:32}
%BB:33:
  %265 = const i32 0
  local.set %15 %265
  %266 = const i32 0
  local.set %24 %266
  br %BB:73

#pred = {%BB:32}
%BB:34:
  %267 = local.get (arg)%2
  %268 = local.get (arg)%2
  memory.guard %memory:0 %268 32
  %269 = load.32 i32 %memory:0 %268
  local.set (arg)%1 %269
  %270 = const i32 4
  %271 = int.add %269 %270
  memory.guard %memory:0 %267 32
  store.32 %memory:0 %267 %271
  %272 = local.get (arg)%1
  memory.guard %memory:0 %272 32
  %273 = load.32 i32 %memory:0 %272
  local.set %24 %273
  %274 = const i32 0
  local.set %15 %274
  br %BB:35

#pred = {%BB:34, %BB:30}
%BB:35:
  %275 = local.get %24
  %276 = const i32 -1
  %277 = int.gt.s %275 %276
  br.cond %277 %BB:73 %BB:36

#pred = {%BB:35}
%BB:36:
  %278 = const i32 0
  %279 = local.get %24
  %280 = int.sub %278 %279
  local.set %24 %280
  %281 = local.get %19
  %282 = const i32 8192
  %283 = int.or %281 %282
  local.set %19 %283
  br %BB:73

#pred = {%BB:27}
%BB:37:
  %284 = const i32 0
  local.set %24 %284
  %285 = local.get %21
  %286 = const i32 -48
  %287 = int.add %285 %286
  local.set %17 %287
  %288 = const i32 9
  %289 = int.le.u %287 %288
  br.cond %289 %BB:39 %BB:38

#pred = {%BB:37}
%BB:38:
  %290 = local.get (arg)%1
  local.set %22 %290
  br %BB:73

#pred = {%BB:37}
%BB:39:
  %291 = const i32 0
  local.set %24 %291
  br %BB:40

#pred = {%BB:44, %BB:41, %BB:39}
%BB:40:
  %292 = local.get %24
  %293 = const i32 214748364
  %294 = int.gt.u %292 %293
  br.cond %294 %BB:44 %BB:41

#pred = {%BB:40}
%BB:41:
  %295 = const i32 -1
  %296 = local.get %24
  %297 = const i32 10
  %298 = int.mul %296 %297
  local.set %22 %298
  %299 = local.get %17
  %300 = int.add %298 %299
  %301 = local.get %17
  %302 = const i32 2147483647
  %303 = local.get %22
  %304 = int.sub %302 %303
  %305 = int.gt.s %301 %304
  %306 = select %305 %295 %300
  local.set %24 %306
  %307 = local.get (arg)%1
  %308 = const i32 1
  %309 = int.add %307 %308
  memory.guard %memory:0 %309 8
  %310 = load.8 i32 %memory:0 %309
  %311 = extend.8 %310
  local.set %17 %311
  %312 = local.get (arg)%1
  %313 = const i32 1
  %314 = int.add %312 %313
  local.set %22 %314
  local.set (arg)%1 %314
  %315 = local.get %17
  %316 = const i32 -48
  %317 = int.add %315 %316
  local.set %17 %317
  %318 = const i32 10
  %319 = int.lt.u %317 %318
  br.cond %319 %BB:40 %BB:42

#pred = {%BB:41}
%BB:42:
  %320 = local.get %24
  %321 = const i32 0
  %322 = int.lt.s %320 %321
  br.cond %322 %BB:569 %BB:43

#pred = {%BB:42}
%BB:43:
  br %BB:73

#pred = {%BB:40}
%BB:44:
  %323 = local.get (arg)%1
  %324 = const i32 1
  %325 = int.add %323 %324
  memory.guard %memory:0 %325 8
  %326 = load.8 i32 %memory:0 %325
  %327 = extend.8 %326
  local.set %17 %327
  %328 = const i32 -1
  local.set %24 %328
  %329 = local.get (arg)%1
  %330 = const i32 1
  %331 = int.add %329 %330
  local.set (arg)%1 %331
  %332 = local.get %17
  %333 = const i32 -48
  %334 = int.add %332 %333
  local.set %17 %334
  %335 = const i32 10
  %336 = int.lt.u %334 %335
  br.cond %336 %BB:40 %BB:45

#pred = {%BB:44}
%BB:45:
  br %BB:569

#pred = {%BB:4}
%BB:46:
  %337 = local.get (arg)%1
  %338 = const i32 1
  %339 = int.add %337 %338
  memory.guard %memory:0 %339 8
  %340 = load.8 i32 %memory:0 %339
  local.set %17 %340
  %341 = local.get (arg)%1
  %342 = const i32 1
  %343 = int.add %341 %342
  local.set (arg)%1 %343
  br %BB:3

#pred = {%BB:1}
%BB:47:
  %344 = local.get (arg)%0
  br.cond %344 %BB:571 %BB:48

#pred = {%BB:47}
%BB:48:
  %345 = local.get %15
  br.cond %345 %BB:50 %BB:49

#pred = {%BB:48}
%BB:49:
  %346 = const i32 0
  local.set %16 %346
  br %BB:571

#pred = {%BB:48}
%BB:50:
  %347 = local.get (arg)%4
  %348 = const i32 4
  %349 = int.add %347 %348
  memory.guard %memory:0 %349 32
  %350 = load.32 i32 %memory:0 %349
  local.set (arg)%1 %350
  br.cond %350 %BB:52 %BB:51

#pred = {%BB:50}
%BB:51:
  %351 = const i32 1
  local.set (arg)%1 %351
  br %BB:69

#pred = {%BB:50}
%BB:52:
  %352 = local.get (arg)%3
  %353 = const i32 8
  %354 = int.add %352 %353
  %355 = local.get (arg)%1
  %356 = local.get (arg)%2
  call %function:87(%354, %355, %356)
  %357 = local.get (arg)%4
  %358 = const i32 8
  %359 = int.add %357 %358
  memory.guard %memory:0 %359 32
  %360 = load.32 i32 %memory:0 %359
  local.set (arg)%1 %360
  br.cond %360 %BB:54 %BB:53

#pred = {%BB:52}
%BB:53:
  %361 = const i32 2
  local.set (arg)%1 %361
  br %BB:69

#pred = {%BB:52}
%BB:54:
  %362 = local.get (arg)%3
  %363 = const i32 16
  %364 = int.add %362 %363
  %365 = local.get (arg)%1
  %366 = local.get (arg)%2
  call %function:87(%364, %365, %366)
  %367 = local.get (arg)%4
  %368 = const i32 12
  %369 = int.add %367 %368
  memory.guard %memory:0 %369 32
  %370 = load.32 i32 %memory:0 %369
  local.set (arg)%1 %370
  br.cond %370 %BB:56 %BB:55

#pred = {%BB:54}
%BB:55:
  %371 = const i32 3
  local.set (arg)%1 %371
  br %BB:69

#pred = {%BB:54}
%BB:56:
  %372 = local.get (arg)%3
  %373 = const i32 24
  %374 = int.add %372 %373
  %375 = local.get (arg)%1
  %376 = local.get (arg)%2
  call %function:87(%374, %375, %376)
  %377 = local.get (arg)%4
  %378 = const i32 16
  %379 = int.add %377 %378
  memory.guard %memory:0 %379 32
  %380 = load.32 i32 %memory:0 %379
  local.set (arg)%1 %380
  br.cond %380 %BB:58 %BB:57

#pred = {%BB:56}
%BB:57:
  %381 = const i32 4
  local.set (arg)%1 %381
  br %BB:69

#pred = {%BB:56}
%BB:58:
  %382 = local.get (arg)%3
  %383 = const i32 32
  %384 = int.add %382 %383
  %385 = local.get (arg)%1
  %386 = local.get (arg)%2
  call %function:87(%384, %385, %386)
  %387 = local.get (arg)%4
  %388 = const i32 20
  %389 = int.add %387 %388
  memory.guard %memory:0 %389 32
  %390 = load.32 i32 %memory:0 %389
  local.set (arg)%1 %390
  br.cond %390 %BB:60 %BB:59

#pred = {%BB:58}
%BB:59:
  %391 = const i32 5
  local.set (arg)%1 %391
  br %BB:69

#pred = {%BB:58}
%BB:60:
  %392 = local.get (arg)%3
  %393 = const i32 40
  %394 = int.add %392 %393
  %395 = local.get (arg)%1
  %396 = local.get (arg)%2
  call %function:87(%394, %395, %396)
  %397 = local.get (arg)%4
  %398 = const i32 24
  %399 = int.add %397 %398
  memory.guard %memory:0 %399 32
  %400 = load.32 i32 %memory:0 %399
  local.set (arg)%1 %400
  br.cond %400 %BB:62 %BB:61

#pred = {%BB:60}
%BB:61:
  %401 = const i32 6
  local.set (arg)%1 %401
  br %BB:69

#pred = {%BB:60}
%BB:62:
  %402 = local.get (arg)%3
  %403 = const i32 48
  %404 = int.add %402 %403
  %405 = local.get (arg)%1
  %406 = local.get (arg)%2
  call %function:87(%404, %405, %406)
  %407 = local.get (arg)%4
  %408 = const i32 28
  %409 = int.add %407 %408
  memory.guard %memory:0 %409 32
  %410 = load.32 i32 %memory:0 %409
  local.set (arg)%1 %410
  br.cond %410 %BB:64 %BB:63

#pred = {%BB:62}
%BB:63:
  %411 = const i32 7
  local.set (arg)%1 %411
  br %BB:69

#pred = {%BB:62}
%BB:64:
  %412 = local.get (arg)%3
  %413 = const i32 56
  %414 = int.add %412 %413
  %415 = local.get (arg)%1
  %416 = local.get (arg)%2
  call %function:87(%414, %415, %416)
  %417 = local.get (arg)%4
  %418 = const i32 32
  %419 = int.add %417 %418
  memory.guard %memory:0 %419 32
  %420 = load.32 i32 %memory:0 %419
  local.set (arg)%1 %420
  br.cond %420 %BB:66 %BB:65

#pred = {%BB:64}
%BB:65:
  %421 = const i32 8
  local.set (arg)%1 %421
  br %BB:69

#pred = {%BB:64}
%BB:66:
  %422 = local.get (arg)%3
  %423 = const i32 64
  %424 = int.add %422 %423
  %425 = local.get (arg)%1
  %426 = local.get (arg)%2
  call %function:87(%424, %425, %426)
  %427 = local.get (arg)%4
  %428 = const i32 36
  %429 = int.add %427 %428
  memory.guard %memory:0 %429 32
  %430 = load.32 i32 %memory:0 %429
  local.set (arg)%1 %430
  br.cond %430 %BB:68 %BB:67

#pred = {%BB:66}
%BB:67:
  %431 = const i32 9
  local.set (arg)%1 %431
  br %BB:69

#pred = {%BB:66}
%BB:68:
  %432 = local.get (arg)%3
  %433 = const i32 72
  %434 = int.add %432 %433
  %435 = local.get (arg)%1
  %436 = local.get (arg)%2
  call %function:87(%434, %435, %436)
  %437 = const i32 1
  local.set %16 %437
  br %BB:571

#pred = {%BB:61, %BB:67, %BB:55, %BB:51, %BB:59, %BB:63, %BB:65, %BB:57, %BB:53}
%BB:69:
  %438 = local.get (arg)%1
  %439 = const i32 2
  %440 = int.shl %438 %439
  local.set (arg)%1 %440
  br %BB:70

#pred = {%BB:71, %BB:69}
%BB:70:
  %441 = local.get (arg)%4
  %442 = local.get (arg)%1
  %443 = int.add %441 %442
  memory.guard %memory:0 %443 32
  %444 = load.32 i32 %memory:0 %443
  br.cond %444 %BB:98 %BB:71

#pred = {%BB:70}
%BB:71:
  %445 = local.get (arg)%1
  %446 = const i32 4
  %447 = int.add %445 %446
  local.set (arg)%1 %447
  %448 = const i32 40
  %449 = int.ne %447 %448
  br.cond %449 %BB:70 %BB:72

#pred = {%BB:71}
%BB:72:
  %450 = const i32 1
  local.set %16 %450
  br %BB:571

#pred = {%BB:38, %BB:33, %BB:36, %BB:35, %BB:43}
%BB:73:
  %451 = const i32 0
  local.set %17 %451
  %452 = const i32 -1
  local.set %21 %452
  %453 = local.get %22
  memory.guard %memory:0 %453 8
  %454 = load.8 i32 %memory:0 %453
  %455 = const i32 46
  %456 = int.eq %454 %455
  br.cond %456 %BB:75 %BB:74

#pred = {%BB:73}
%BB:74:
  %457 = local.get %22
  local.set (arg)%1 %457
  %458 = const i32 0
  local.set %25 %458
  br %BB:91

#pred = {%BB:73}
%BB:75:
  %459 = local.get %22
  %460 = const i32 1
  %461 = int.add %459 %460
  memory.guard %memory:0 %461 8
  %462 = load.8 i32 %memory:0 %461
  %463 = extend.8 %462
  local.set %21 %463
  %464 = const i32 42
  %465 = int.ne %463 %464
  br.cond %465 %BB:84 %BB:76

#pred = {%BB:75}
%BB:76:
  %466 = local.get %22
  %467 = const i32 2
  %468 = int.add %466 %467
  memory.guard %memory:0 %468 8
  %469 = load.8 i32 %memory:0 %468
  %470 = extend.8 %469
  %471 = const i32 -48
  %472 = int.add %470 %471
  local.set (arg)%1 %472
  %473 = const i32 9
  %474 = int.gt.u %472 %473
  br.cond %474 %BB:79 %BB:77

#pred = {%BB:76}
%BB:77:
  %475 = local.get %22
  %476 = const i32 3
  %477 = int.add %475 %476
  memory.guard %memory:0 %477 8
  %478 = load.8 i32 %memory:0 %477
  %479 = const i32 36
  %480 = int.ne %478 %479
  br.cond %480 %BB:79 %BB:78

#pred = {%BB:77}
%BB:78:
  %481 = local.get (arg)%4
  %482 = local.get (arg)%1
  %483 = const i32 2
  %484 = int.shl %482 %483
  %485 = int.add %481 %484
  %486 = const i32 10
  memory.guard %memory:0 %485 32
  store.32 %memory:0 %485 %486
  %487 = local.get %22
  %488 = const i32 4
  %489 = int.add %487 %488
  local.set (arg)%1 %489
  %490 = local.get %22
  %491 = const i32 2
  %492 = int.add %490 %491
  memory.guard %memory:0 %492 8
  %493 = load.8 i32 %memory:0 %492
  %494 = extend.8 %493
  %495 = const i32 3
  %496 = int.shl %494 %495
  %497 = local.get (arg)%3
  %498 = int.add %496 %497
  %499 = const i32 -384
  %500 = int.add %498 %499
  memory.guard %memory:0 %500 32
  %501 = load.32 i32 %memory:0 %500
  local.set %21 %501
  br %BB:83

#pred = {%BB:77, %BB:76}
%BB:79:
  %502 = local.get %15
  br.cond %502 %BB:98 %BB:80

#pred = {%BB:79}
%BB:80:
  %503 = local.get %22
  %504 = const i32 2
  %505 = int.add %503 %504
  local.set (arg)%1 %505
  %506 = local.get (arg)%0
  br.cond %506 %BB:82 %BB:81

#pred = {%BB:80}
%BB:81:
  %507 = const i32 0
  local.set %21 %507
  br %BB:83

#pred = {%BB:80}
%BB:82:
  %508 = local.get (arg)%2
  %509 = local.get (arg)%2
  memory.guard %memory:0 %509 32
  %510 = load.32 i32 %memory:0 %509
  local.set %22 %510
  %511 = const i32 4
  %512 = int.add %510 %511
  memory.guard %memory:0 %508 32
  store.32 %memory:0 %508 %512
  %513 = local.get %22
  memory.guard %memory:0 %513 32
  %514 = load.32 i32 %memory:0 %513
  local.set %21 %514
  br %BB:83

#pred = {%BB:82, %BB:81, %BB:78}
%BB:83:
  %515 = local.get %21
  %516 = const i32 -1
  %517 = int.xor %515 %516
  %518 = const i32 31
  %519 = int.shr.u %517 %518
  local.set %25 %519
  br %BB:91

#pred = {%BB:75}
%BB:84:
  %520 = local.get %22
  %521 = const i32 1
  %522 = int.add %520 %521
  local.set (arg)%1 %522
  %523 = local.get %21
  %524 = const i32 -48
  %525 = int.add %523 %524
  local.set %26 %525
  %526 = const i32 9
  %527 = int.le.u %525 %526
  br.cond %527 %BB:86 %BB:85

#pred = {%BB:84}
%BB:85:
  %528 = const i32 1
  local.set %25 %528
  %529 = const i32 0
  local.set %21 %529
  br %BB:91

#pred = {%BB:84}
%BB:86:
  %530 = const i32 0
  local.set %27 %530
  %531 = local.get (arg)%1
  local.set %22 %531
  br %BB:87

#pred = {%BB:89, %BB:86}
%BB:87:
  %532 = const i32 -1
  local.set %21 %532
  %533 = local.get %27
  %534 = const i32 214748364
  %535 = int.gt.u %533 %534
  br.cond %535 %BB:89 %BB:88

#pred = {%BB:87}
%BB:88:
  %536 = const i32 -1
  %537 = local.get %27
  %538 = const i32 10
  %539 = int.mul %537 %538
  local.set (arg)%1 %539
  %540 = local.get %26
  %541 = int.add %539 %540
  %542 = local.get %26
  %543 = const i32 2147483647
  %544 = local.get (arg)%1
  %545 = int.sub %543 %544
  %546 = int.gt.s %542 %545
  %547 = select %546 %536 %541
  local.set %21 %547
  br %BB:89

#pred = {%BB:88, %BB:87}
%BB:89:
  %548 = const i32 1
  local.set %25 %548
  %549 = local.get %22
  %550 = const i32 1
  %551 = int.add %549 %550
  memory.guard %memory:0 %551 8
  %552 = load.8 i32 %memory:0 %551
  %553 = extend.8 %552
  local.set %26 %553
  %554 = local.get %22
  %555 = const i32 1
  %556 = int.add %554 %555
  local.set (arg)%1 %556
  local.set %22 %556
  %557 = local.get %21
  local.set %27 %557
  %558 = local.get %26
  %559 = const i32 -48
  %560 = int.add %558 %559
  local.set %26 %560
  %561 = const i32 10
  %562 = int.lt.u %560 %561
  br.cond %562 %BB:87 %BB:90

#pred = {%BB:89}
%BB:90:
  br %BB:91

#pred = {%BB:90, %BB:85, %BB:83, %BB:74}
%BB:91:
  br %BB:92

#pred = {%BB:93, %BB:91}
%BB:92:
  %563 = local.get %17
  local.set %22 %563
  %564 = local.get (arg)%1
  memory.guard %memory:0 %564 8
  %565 = load.8 i32 %memory:0 %564
  %566 = extend.8 %565
  %567 = const i32 -65
  %568 = int.add %566 %567
  local.set %17 %568
  %569 = const i32 57
  %570 = int.gt.u %568 %569
  br.cond %570 %BB:98 %BB:93

#pred = {%BB:92}
%BB:93:
  %571 = local.get (arg)%1
  %572 = const i32 1
  %573 = int.add %571 %572
  local.set (arg)%1 %573
  %574 = local.get %22
  %575 = const i32 58
  %576 = int.mul %574 %575
  %577 = local.get %17
  %578 = int.add %576 %577
  %579 = const i32 68256
  %580 = int.add %578 %579
  memory.guard %memory:0 %580 8
  %581 = load.8 i32 %memory:0 %580
  local.set %17 %581
  %582 = const i32 -1
  %583 = int.add %581 %582
  %584 = const i32 8
  %585 = int.lt.u %583 %584
  br.cond %585 %BB:92 %BB:94

#pred = {%BB:93}
%BB:94:
  %586 = local.get %17
  %587 = int.eqz %586
  br.cond %587 %BB:98 %BB:95

#pred = {%BB:94}
%BB:95:
  %588 = local.get %17
  %589 = const i32 27
  %590 = int.ne %588 %589
  br.cond %590 %BB:99 %BB:96

#pred = {%BB:95}
%BB:96:
  %591 = local.get %23
  %592 = const i32 -1
  %593 = int.le.s %591 %592
  br.cond %593 %BB:101 %BB:97

#pred = {%BB:96}
%BB:97:
  br %BB:98

#pred = {%BB:97, %BB:94, %BB:92, %BB:70, %BB:31, %BB:79}
%BB:98:
  %594 = const i32 0
  %595 = const i32 28
  %596 = const i32 79096
  %597 = int.add %594 %596
  memory.guard %memory:0 %597 32
  store.32 %memory:0 %597 %595
  br %BB:570

#pred = {%BB:95}
%BB:99:
  %598 = local.get %23
  %599 = const i32 0
  %600 = int.lt.s %598 %599
  br.cond %600 %BB:103 %BB:100

#pred = {%BB:99}
%BB:100:
  %601 = local.get (arg)%4
  %602 = local.get %23
  %603 = const i32 2
  %604 = int.shl %602 %603
  %605 = int.add %601 %604
  %606 = local.get %17
  memory.guard %memory:0 %605 32
  store.32 %memory:0 %605 %606
  %607 = local.get %5
  %608 = local.get (arg)%3
  %609 = local.get %23
  %610 = const i32 3
  %611 = int.shl %609 %610
  %612 = int.add %608 %611
  memory.guard %memory:0 %612 64
  %613 = load.64 i64 %memory:0 %612
  %614 = const i32 56
  %615 = int.add %607 %614
  memory.guard %memory:0 %615 64
  store.64 %memory:0 %615 %613
  br %BB:101

#pred = {%BB:100, %BB:96}
%BB:101:
  %616 = const i32 0
  local.set %17 %616
  %617 = local.get (arg)%0
  %618 = int.eqz %617
  br.cond %618 %BB:0 %BB:102

#pred = {%BB:101}
%BB:102:
  br %BB:106

#pred = {%BB:99}
%BB:103:
  %619 = local.get (arg)%0
  br.cond %619 %BB:105 %BB:104

#pred = {%BB:103}
%BB:104:
  %620 = const i32 0
  local.set %16 %620
  br %BB:571

#pred = {%BB:103}
%BB:105:
  %621 = local.get %5
  %622 = const i32 56
  %623 = int.add %621 %622
  %624 = local.get %17
  %625 = local.get (arg)%2
  call %function:87(%623, %624, %625)
  br %BB:106

#pred = {%BB:105, %BB:102}
%BB:106:
  %626 = local.get %19
  %627 = const i32 -65537
  %628 = int.and %626 %627
  local.set %28 %628
  %629 = local.get %19
  %630 = local.get %19
  %631 = const i32 8192
  %632 = int.and %630 %631
  %633 = select %632 %628 %629
  local.set %23 %633
  %634 = local.get (arg)%1
  %635 = const i32 -1
  %636 = int.add %634 %635
  memory.guard %memory:0 %636 8
  %637 = load.8 i32 %memory:0 %636
  %638 = extend.8 %637
  local.set %17 %638
  %639 = const i32 -33
  %640 = int.and %638 %639
  %641 = local.get %17
  %642 = local.get %17
  %643 = const i32 15
  %644 = int.and %642 %643
  %645 = const i32 3
  %646 = int.eq %644 %645
  %647 = select %646 %640 %641
  %648 = local.get %17
  %649 = local.get %22
  %650 = select %649 %647 %648
  local.set %29 %650
  %651 = const i32 -65
  %652 = int.add %650 %651
  br.table %BB:403 0:%BB:199 1:%BB:403 2:%BB:159 3:%BB:403 4:%BB:199 5:%BB:199 6:%BB:199 7:%BB:403 8:%BB:403 9:%BB:403 10:%BB:403 11:%BB:403 12:%BB:403 13:%BB:403 14:%BB:403 15:%BB:403 16:%BB:403 17:%BB:403 18:%BB:157 19:%BB:403 20:%BB:403 21:%BB:403 22:%BB:403 23:%BB:117 24:%BB:403 25:%BB:403 26:%BB:403 27:%BB:403 28:%BB:403 29:%BB:403 30:%BB:403 31:%BB:403 32:%BB:199 33:%BB:403 34:%BB:151 35:%BB:130 36:%BB:199 37:%BB:199 38:%BB:199 39:%BB:403 40:%BB:130 41:%BB:403 42:%BB:403 43:%BB:403 44:%BB:152 45:%BB:108 46:%BB:124 47:%BB:116 48:%BB:403 49:%BB:403 50:%BB:153 51:%BB:403 52:%BB:107 53:%BB:403 54:%BB:403 55:%BB:117

#pred = {%BB:106}
%BB:107:
  %653 = const i32 0
  local.set %30 %653
  %654 = const i32 68234
  local.set %31 %654
  %655 = local.get %5
  %656 = const i32 56
  %657 = int.add %655 %656
  memory.guard %memory:0 %657 64
  %658 = load.64 i64 %memory:0 %657
  local.set %32 %658
  br %BB:135

#pred = {%BB:106}
%BB:108:
  %659 = const i32 0
  local.set %17 %659
  %660 = local.get %22
  %661 = const i32 255
  %662 = int.and %660 %661
  br.table %BB:0 0:%BB:109 1:%BB:110 2:%BB:111 3:%BB:112 4:%BB:113 5:%BB:0 6:%BB:114 7:%BB:115

#pred = {%BB:108}
%BB:109:
  %663 = local.get %5
  %664 = const i32 56
  %665 = int.add %663 %664
  memory.guard %memory:0 %665 32
  %666 = load.32 i32 %memory:0 %665
  %667 = local.get %16
  memory.guard %memory:0 %666 32
  store.32 %memory:0 %666 %667
  br %BB:0

#pred = {%BB:108}
%BB:110:
  %668 = local.get %5
  %669 = const i32 56
  %670 = int.add %668 %669
  memory.guard %memory:0 %670 32
  %671 = load.32 i32 %memory:0 %670
  %672 = local.get %16
  memory.guard %memory:0 %671 32
  store.32 %memory:0 %671 %672
  br %BB:0

#pred = {%BB:108}
%BB:111:
  %673 = local.get %5
  %674 = const i32 56
  %675 = int.add %673 %674
  memory.guard %memory:0 %675 32
  %676 = load.32 i32 %memory:0 %675
  %677 = local.get %16
  %678 = cast.s i64 %677
  memory.guard %memory:0 %676 64
  store.64 %memory:0 %676 %678
  br %BB:0

#pred = {%BB:108}
%BB:112:
  %679 = local.get %5
  %680 = const i32 56
  %681 = int.add %679 %680
  memory.guard %memory:0 %681 32
  %682 = load.32 i32 %memory:0 %681
  %683 = local.get %16
  memory.guard %memory:0 %682 16
  store.16 %memory:0 %682 %683
  br %BB:0

#pred = {%BB:108}
%BB:113:
  %684 = local.get %5
  %685 = const i32 56
  %686 = int.add %684 %685
  memory.guard %memory:0 %686 32
  %687 = load.32 i32 %memory:0 %686
  %688 = local.get %16
  memory.guard %memory:0 %687 8
  store.8 %memory:0 %687 %688
  br %BB:0

#pred = {%BB:108}
%BB:114:
  %689 = local.get %5
  %690 = const i32 56
  %691 = int.add %689 %690
  memory.guard %memory:0 %691 32
  %692 = load.32 i32 %memory:0 %691
  %693 = local.get %16
  memory.guard %memory:0 %692 32
  store.32 %memory:0 %692 %693
  br %BB:0

#pred = {%BB:108}
%BB:115:
  %694 = local.get %5
  %695 = const i32 56
  %696 = int.add %694 %695
  memory.guard %memory:0 %696 32
  %697 = load.32 i32 %memory:0 %696
  %698 = local.get %16
  %699 = cast.s i64 %698
  memory.guard %memory:0 %697 64
  store.64 %memory:0 %697 %699
  br %BB:0

#pred = {%BB:106}
%BB:116:
  %700 = local.get %21
  %701 = const i32 8
  %702 = local.get %21
  %703 = const i32 8
  %704 = int.gt.u %702 %703
  %705 = select %704 %700 %701
  local.set %21 %705
  %706 = local.get %23
  %707 = const i32 8
  %708 = int.or %706 %707
  local.set %23 %708
  %709 = const i32 120
  local.set %29 %709
  br %BB:117

#pred = {%BB:116, %BB:106}
%BB:117:
  %710 = const i32 0
  local.set %30 %710
  %711 = const i32 68234
  local.set %31 %711
  %712 = local.get %5
  %713 = const i32 56
  %714 = int.add %712 %713
  memory.guard %memory:0 %714 64
  %715 = load.64 i64 %memory:0 %714
  local.set %32 %715
  %716 = int.eqz %715
  %717 = int.eqz %716
  br.cond %717 %BB:119 %BB:118

#pred = {%BB:117}
%BB:118:
  %718 = local.get %14
  local.set %18 %718
  br %BB:144

#pred = {%BB:117}
%BB:119:
  %719 = local.get %29
  %720 = const i32 32
  %721 = int.and %719 %720
  local.set %17 %721
  %722 = local.get %14
  local.set %18 %722
  br %BB:120

#pred = {%BB:120, %BB:119}
%BB:120:
  %723 = local.get %18
  %724 = const i32 -1
  %725 = int.add %723 %724
  local.set %18 %725
  %726 = local.get %32
  %727 = cast i32 %726
  %728 = const i32 15
  %729 = int.and %727 %728
  %730 = const i32 68864
  %731 = int.add %729 %730
  memory.guard %memory:0 %731 8
  %732 = load.8 i32 %memory:0 %731
  %733 = local.get %17
  %734 = int.or %732 %733
  memory.guard %memory:0 %725 8
  store.8 %memory:0 %725 %734
  %735 = local.get %32
  %736 = const i64 4
  %737 = int.shr.u %735 %736
  local.set %32 %737
  %738 = const i64 0
  %739 = int.ne %737 %738
  br.cond %739 %BB:120 %BB:121

#pred = {%BB:120}
%BB:121:
  %740 = local.get %23
  %741 = const i32 8
  %742 = int.and %740 %741
  %743 = int.eqz %742
  br.cond %743 %BB:144 %BB:122

#pred = {%BB:121}
%BB:122:
  %744 = local.get %5
  %745 = const i32 56
  %746 = int.add %744 %745
  memory.guard %memory:0 %746 64
  %747 = load.64 i64 %memory:0 %746
  %748 = int.eqz %747
  br.cond %748 %BB:144 %BB:123

#pred = {%BB:122}
%BB:123:
  %749 = local.get %29
  %750 = const i32 4
  %751 = int.shr.s %749 %750
  %752 = const i32 68234
  %753 = int.add %751 %752
  local.set %31 %753
  %754 = const i32 2
  local.set %30 %754
  br %BB:144

#pred = {%BB:106}
%BB:124:
  %755 = local.get %14
  local.set %18 %755
  %756 = local.get %5
  %757 = const i32 56
  %758 = int.add %756 %757
  memory.guard %memory:0 %758 64
  %759 = load.64 i64 %memory:0 %758
  local.set %32 %759
  %760 = int.eqz %759
  br.cond %760 %BB:128 %BB:125

#pred = {%BB:124}
%BB:125:
  %761 = local.get %14
  local.set %18 %761
  br %BB:126

#pred = {%BB:126, %BB:125}
%BB:126:
  %762 = local.get %18
  %763 = const i32 -1
  %764 = int.add %762 %763
  local.set %18 %764
  %765 = local.get %32
  %766 = cast i32 %765
  %767 = const i32 7
  %768 = int.and %766 %767
  %769 = const i32 48
  %770 = int.or %768 %769
  memory.guard %memory:0 %764 8
  store.8 %memory:0 %764 %770
  %771 = local.get %32
  %772 = const i64 3
  %773 = int.shr.u %771 %772
  local.set %32 %773
  %774 = const i64 0
  %775 = int.ne %773 %774
  br.cond %775 %BB:126 %BB:127

#pred = {%BB:126}
%BB:127:
  br %BB:128

#pred = {%BB:127, %BB:124}
%BB:128:
  %776 = const i32 0
  local.set %30 %776
  %777 = const i32 68234
  local.set %31 %777
  %778 = local.get %23
  %779 = const i32 8
  %780 = int.and %778 %779
  %781 = int.eqz %780
  br.cond %781 %BB:144 %BB:129

#pred = {%BB:128}
%BB:129:
  %782 = local.get %21
  %783 = local.get %14
  %784 = local.get %18
  %785 = int.sub %783 %784
  local.set %17 %785
  %786 = const i32 1
  %787 = int.add %785 %786
  %788 = local.get %21
  %789 = local.get %17
  %790 = int.gt.s %788 %789
  %791 = select %790 %782 %787
  local.set %21 %791
  br %BB:144

#pred = {%BB:106}
%BB:130:
  %792 = local.get %5
  %793 = const i32 56
  %794 = int.add %792 %793
  memory.guard %memory:0 %794 64
  %795 = load.64 i64 %memory:0 %794
  local.set %32 %795
  %796 = const i64 -1
  %797 = int.gt.s %795 %796
  br.cond %797 %BB:132 %BB:131

#pred = {%BB:130}
%BB:131:
  %798 = local.get %5
  %799 = const i64 0
  %800 = local.get %32
  %801 = int.sub %799 %800
  local.set %32 %801
  %802 = const i32 56
  %803 = int.add %798 %802
  memory.guard %memory:0 %803 64
  store.64 %memory:0 %803 %801
  %804 = const i32 1
  local.set %30 %804
  %805 = const i32 68234
  local.set %31 %805
  br %BB:135

#pred = {%BB:130}
%BB:132:
  %806 = local.get %23
  %807 = const i32 2048
  %808 = int.and %806 %807
  %809 = int.eqz %808
  br.cond %809 %BB:134 %BB:133

#pred = {%BB:132}
%BB:133:
  %810 = const i32 1
  local.set %30 %810
  %811 = const i32 68235
  local.set %31 %811
  br %BB:135

#pred = {%BB:132}
%BB:134:
  %812 = const i32 68236
  %813 = const i32 68234
  %814 = local.get %23
  %815 = const i32 1
  %816 = int.and %814 %815
  local.set %30 %816
  %817 = select %816 %812 %813
  local.set %31 %817
  br %BB:135

#pred = {%BB:134, %BB:133, %BB:131, %BB:107}
%BB:135:
  %818 = local.get %32
  %819 = const i64 4294967296
  %820 = int.ge.u %818 %819
  br.cond %820 %BB:137 %BB:136

#pred = {%BB:135}
%BB:136:
  %821 = local.get %32
  local.set %33 %821
  %822 = local.get %14
  local.set %18 %822
  br %BB:140

#pred = {%BB:135}
%BB:137:
  %823 = local.get %14
  local.set %18 %823
  br %BB:138

#pred = {%BB:138, %BB:137}
%BB:138:
  %824 = local.get %18
  %825 = const i32 -1
  %826 = int.add %824 %825
  local.set %18 %826
  %827 = local.get %32
  %828 = local.get %32
  %829 = const i64 10
  %830 = int.div.u %828 %829
  local.set %33 %830
  %831 = const i64 10
  %832 = int.mul %830 %831
  %833 = int.sub %827 %832
  %834 = cast i32 %833
  %835 = const i32 48
  %836 = int.or %834 %835
  memory.guard %memory:0 %826 8
  store.8 %memory:0 %826 %836
  %837 = local.get %32
  %838 = const i64 42949672959
  %839 = int.gt.u %837 %838
  local.set %17 %839
  %840 = local.get %33
  local.set %32 %840
  %841 = local.get %17
  br.cond %841 %BB:138 %BB:139

#pred = {%BB:138}
%BB:139:
  br %BB:140

#pred = {%BB:139, %BB:136}
%BB:140:
  %842 = local.get %33
  %843 = cast i32 %842
  local.set %17 %843
  %844 = int.eqz %843
  br.cond %844 %BB:144 %BB:141

#pred = {%BB:140}
%BB:141:
  br %BB:142

#pred = {%BB:142, %BB:141}
%BB:142:
  %845 = local.get %18
  %846 = const i32 -1
  %847 = int.add %845 %846
  local.set %18 %847
  %848 = local.get %17
  %849 = local.get %17
  %850 = const i32 10
  %851 = int.div.u %849 %850
  local.set %19 %851
  %852 = const i32 10
  %853 = int.mul %851 %852
  %854 = int.sub %848 %853
  %855 = const i32 48
  %856 = int.or %854 %855
  memory.guard %memory:0 %847 8
  store.8 %memory:0 %847 %856
  %857 = local.get %17
  %858 = const i32 9
  %859 = int.gt.u %857 %858
  local.set %22 %859
  %860 = local.get %19
  local.set %17 %860
  %861 = local.get %22
  br.cond %861 %BB:142 %BB:143

#pred = {%BB:142}
%BB:143:
  br %BB:144

#pred = {%BB:140, %BB:128, %BB:143, %BB:122, %BB:129, %BB:123, %BB:118, %BB:121}
%BB:144:
  %862 = local.get %25
  %863 = int.eqz %862
  br.cond %863 %BB:147 %BB:145

#pred = {%BB:144}
%BB:145:
  %864 = local.get %21
  %865 = const i32 0
  %866 = int.lt.s %864 %865
  br.cond %866 %BB:569 %BB:146

#pred = {%BB:145}
%BB:146:
  br %BB:147

#pred = {%BB:146, %BB:144}
%BB:147:
  %867 = local.get %23
  %868 = const i32 -65537
  %869 = int.and %867 %868
  %870 = local.get %23
  %871 = local.get %25
  %872 = select %871 %869 %870
  local.set %28 %872
  %873 = local.get %5
  %874 = const i32 56
  %875 = int.add %873 %874
  memory.guard %memory:0 %875 64
  %876 = load.64 i64 %memory:0 %875
  local.set %32 %876
  %877 = local.get %21
  br.cond %877 %BB:150 %BB:148

#pred = {%BB:147}
%BB:148:
  %878 = const i32 0
  local.set %27 %878
  %879 = local.get %32
  %880 = int.eqz %879
  %881 = int.eqz %880
  br.cond %881 %BB:150 %BB:149

#pred = {%BB:148}
%BB:149:
  %882 = local.get %14
  local.set %18 %882
  %883 = local.get %14
  local.set %17 %883
  br %BB:404

#pred = {%BB:148, %BB:147}
%BB:150:
  %884 = local.get %21
  %885 = local.get %14
  %886 = local.get %18
  %887 = int.sub %885 %886
  %888 = local.get %32
  %889 = int.eqz %888
  %890 = int.add %887 %889
  local.set %17 %890
  %891 = local.get %21
  %892 = local.get %17
  %893 = int.gt.s %891 %892
  %894 = select %893 %884 %890
  local.set %27 %894
  %895 = local.get %14
  local.set %17 %895
  br %BB:404

#pred = {%BB:106}
%BB:151:
  %896 = local.get %5
  %897 = local.get %5
  %898 = const i32 56
  %899 = int.add %897 %898
  memory.guard %memory:0 %899 64
  %900 = load.64 i64 %memory:0 %899
  %901 = const i32 55
  %902 = int.add %896 %901
  memory.guard %memory:0 %902 8
  store.8 %memory:0 %902 %900
  %903 = const i32 0
  local.set %30 %903
  %904 = const i32 68234
  local.set %31 %904
  %905 = const i32 1
  local.set %27 %905
  %906 = local.get %6
  local.set %18 %906
  %907 = local.get %14
  local.set %17 %907
  br %BB:404

#pred = {%BB:106}
%BB:152:
  %908 = const i32 0
  %909 = const i32 79096
  %910 = int.add %908 %909
  memory.guard %memory:0 %910 32
  %911 = load.32 i32 %memory:0 %910
  %912 = call %function:83(%911)
  local.set %18 %912
  br %BB:154

#pred = {%BB:106}
%BB:153:
  %913 = local.get %5
  %914 = const i32 56
  %915 = int.add %913 %914
  memory.guard %memory:0 %915 32
  %916 = load.32 i32 %memory:0 %915
  local.set %17 %916
  %917 = const i32 68244
  %918 = local.get %17
  %919 = select %918 %916 %917
  local.set %18 %919
  br %BB:154

#pred = {%BB:153, %BB:152}
%BB:154:
  %920 = const i32 0
  local.set %30 %920
  %921 = local.get %18
  %922 = local.get %18
  %923 = const i32 2147483647
  %924 = local.get %21
  %925 = local.get %21
  %926 = const i32 0
  %927 = int.lt.s %925 %926
  %928 = select %927 %923 %924
  %929 = call %function:94(%922, %928)
  local.set %27 %929
  %930 = int.add %921 %929
  local.set %17 %930
  %931 = const i32 68234
  local.set %31 %931
  %932 = local.get %21
  %933 = const i32 -1
  %934 = int.gt.s %932 %933
  br.cond %934 %BB:404 %BB:155

#pred = {%BB:154}
%BB:155:
  %935 = local.get %17
  memory.guard %memory:0 %935 8
  %936 = load.8 i32 %memory:0 %935
  %937 = int.eqz %936
  br.cond %937 %BB:404 %BB:156

#pred = {%BB:155}
%BB:156:
  br %BB:569

#pred = {%BB:106}
%BB:157:
  %938 = local.get %5
  %939 = const i32 56
  %940 = int.add %938 %939
  memory.guard %memory:0 %940 32
  %941 = load.32 i32 %memory:0 %940
  local.set %18 %941
  %942 = local.get %21
  br.cond %942 %BB:160 %BB:158

#pred = {%BB:157}
%BB:158:
  %943 = const i32 0
  local.set %17 %943
  br %BB:170

#pred = {%BB:106}
%BB:159:
  %944 = local.get %5
  %945 = const i32 0
  %946 = const i32 12
  %947 = int.add %944 %946
  memory.guard %memory:0 %947 32
  store.32 %memory:0 %947 %945
  %948 = local.get %5
  %949 = local.get %5
  %950 = const i32 56
  %951 = int.add %949 %950
  memory.guard %memory:0 %951 64
  %952 = load.64 i64 %memory:0 %951
  %953 = const i32 8
  %954 = int.add %948 %953
  memory.guard %memory:0 %954 32
  store.32 %memory:0 %954 %952
  %955 = local.get %5
  %956 = local.get %5
  %957 = const i32 8
  %958 = int.add %956 %957
  %959 = const i32 56
  %960 = int.add %955 %959
  memory.guard %memory:0 %960 32
  store.32 %memory:0 %960 %958
  %961 = const i32 -1
  local.set %21 %961
  %962 = local.get %5
  %963 = const i32 8
  %964 = int.add %962 %963
  local.set %18 %964
  br %BB:160

#pred = {%BB:159, %BB:157}
%BB:160:
  %965 = const i32 0
  local.set %17 %965
  %966 = local.get %18
  local.set %19 %966
  br %BB:161

#pred = {%BB:164, %BB:160}
%BB:161:
  %967 = local.get %19
  memory.guard %memory:0 %967 32
  %968 = load.32 i32 %memory:0 %967
  local.set %20 %968
  %969 = int.eqz %968
  br.cond %969 %BB:168 %BB:162

#pred = {%BB:161}
%BB:162:
  %970 = local.get %5
  %971 = const i32 4
  %972 = int.add %970 %971
  %973 = local.get %20
  %974 = call %function:102(%972, %973)
  local.set %20 %974
  %975 = const i32 0
  %976 = int.lt.s %974 %975
  local.set %22 %976
  br.cond %976 %BB:166 %BB:163

#pred = {%BB:162}
%BB:163:
  %977 = local.get %20
  %978 = local.get %21
  %979 = local.get %17
  %980 = int.sub %978 %979
  %981 = int.gt.u %977 %980
  br.cond %981 %BB:166 %BB:164

#pred = {%BB:163}
%BB:164:
  %982 = local.get %19
  %983 = const i32 4
  %984 = int.add %982 %983
  local.set %19 %984
  %985 = local.get %21
  %986 = local.get %20
  %987 = local.get %17
  %988 = int.add %986 %987
  local.set %17 %988
  %989 = int.gt.u %985 %988
  br.cond %989 %BB:161 %BB:165

#pred = {%BB:164}
%BB:165:
  br %BB:168

#pred = {%BB:163, %BB:162}
%BB:166:
  %990 = local.get %22
  br.cond %990 %BB:570 %BB:167

#pred = {%BB:166}
%BB:167:
  br %BB:168

#pred = {%BB:167, %BB:165, %BB:161}
%BB:168:
  %991 = local.get %17
  %992 = const i32 0
  %993 = int.lt.s %991 %992
  br.cond %993 %BB:569 %BB:169

#pred = {%BB:168}
%BB:169:
  br %BB:170

#pred = {%BB:169, %BB:158}
%BB:170:
  %994 = local.get %23
  %995 = const i32 73728
  %996 = int.and %994 %995
  local.set %21 %996
  br.cond %996 %BB:180 %BB:171

#pred = {%BB:170}
%BB:171:
  %997 = local.get %24
  %998 = local.get %17
  %999 = int.le.s %997 %998
  br.cond %999 %BB:180 %BB:172

#pred = {%BB:171}
%BB:172:
  %1000 = local.get %5
  %1001 = const i32 64
  %1002 = int.add %1000 %1001
  %1003 = const i32 32
  %1004 = local.get %24
  %1005 = local.get %17
  %1006 = int.sub %1004 %1005
  local.set %19 %1006
  %1007 = const i32 256
  %1008 = local.get %19
  %1009 = const i32 256
  %1010 = int.lt.u %1008 %1009
  local.set %27 %1010
  %1011 = select %1010 %1006 %1007
  %1012 = call %function:97(%1002, %1003, %1011)
  %1013 = local.get (arg)%0
  memory.guard %memory:0 %1013 32
  %1014 = load.32 i32 %memory:0 %1013
  local.set %22 %1014
  %1015 = const i32 32
  %1016 = int.and %1014 %1015
  %1017 = int.eqz %1016
  local.set %20 %1017
  %1018 = local.get %27
  br.cond %1018 %BB:178 %BB:173

#pred = {%BB:172}
%BB:173:
  br %BB:174

#pred = {%BB:176, %BB:173}
%BB:174:
  %1019 = local.get %20
  %1020 = const i32 1
  %1021 = int.and %1019 %1020
  %1022 = int.eqz %1021
  br.cond %1022 %BB:176 %BB:175

#pred = {%BB:174}
%BB:175:
  %1023 = local.get %5
  %1024 = const i32 64
  %1025 = int.add %1023 %1024
  %1026 = const i32 256
  %1027 = local.get (arg)%0
  %1028 = call %function:72(%1025, %1026, %1027)
  %1029 = local.get (arg)%0
  memory.guard %memory:0 %1029 32
  %1030 = load.32 i32 %memory:0 %1029
  local.set %22 %1030
  br %BB:176

#pred = {%BB:175, %BB:174}
%BB:176:
  %1031 = local.get %22
  %1032 = const i32 32
  %1033 = int.and %1031 %1032
  %1034 = int.eqz %1033
  local.set %20 %1034
  %1035 = local.get %19
  %1036 = const i32 -256
  %1037 = int.add %1035 %1036
  local.set %19 %1037
  %1038 = const i32 255
  %1039 = int.gt.u %1037 %1038
  br.cond %1039 %BB:174 %BB:177

#pred = {%BB:176}
%BB:177:
  br %BB:178

#pred = {%BB:177, %BB:172}
%BB:178:
  %1040 = local.get %20
  %1041 = int.eqz %1040
  br.cond %1041 %BB:180 %BB:179

#pred = {%BB:178}
%BB:179:
  %1042 = local.get %5
  %1043 = const i32 64
  %1044 = int.add %1042 %1043
  %1045 = local.get %19
  %1046 = local.get (arg)%0
  %1047 = call %function:72(%1044, %1045, %1046)
  br %BB:180

#pred = {%BB:179, %BB:178, %BB:171, %BB:170}
%BB:180:
  %1048 = local.get %17
  %1049 = int.eqz %1048
  br.cond %1049 %BB:188 %BB:181

#pred = {%BB:180}
%BB:181:
  %1050 = const i32 0
  local.set %19 %1050
  br %BB:182

#pred = {%BB:186, %BB:181}
%BB:182:
  %1051 = local.get %18
  memory.guard %memory:0 %1051 32
  %1052 = load.32 i32 %memory:0 %1051
  local.set %20 %1052
  %1053 = int.eqz %1052
  br.cond %1053 %BB:188 %BB:183

#pred = {%BB:182}
%BB:183:
  %1054 = local.get %5
  %1055 = const i32 4
  %1056 = int.add %1054 %1055
  %1057 = local.get %20
  %1058 = call %function:102(%1056, %1057)
  local.set %20 %1058
  %1059 = local.get %19
  %1060 = int.add %1058 %1059
  local.set %19 %1060
  %1061 = local.get %17
  %1062 = int.gt.u %1060 %1061
  br.cond %1062 %BB:188 %BB:184

#pred = {%BB:183}
%BB:184:
  %1063 = local.get (arg)%0
  memory.guard %memory:0 %1063 8
  %1064 = load.8 i32 %memory:0 %1063
  %1065 = const i32 32
  %1066 = int.and %1064 %1065
  br.cond %1066 %BB:186 %BB:185

#pred = {%BB:184}
%BB:185:
  %1067 = local.get %5
  %1068 = const i32 4
  %1069 = int.add %1067 %1068
  %1070 = local.get %20
  %1071 = local.get (arg)%0
  %1072 = call %function:72(%1069, %1070, %1071)
  br %BB:186

#pred = {%BB:185, %BB:184}
%BB:186:
  %1073 = local.get %18
  %1074 = const i32 4
  %1075 = int.add %1073 %1074
  local.set %18 %1075
  %1076 = local.get %19
  %1077 = local.get %17
  %1078 = int.lt.u %1076 %1077
  br.cond %1078 %BB:182 %BB:187

#pred = {%BB:186}
%BB:187:
  br %BB:188

#pred = {%BB:187, %BB:183, %BB:182, %BB:180}
%BB:188:
  %1079 = local.get %21
  %1080 = const i32 8192
  %1081 = int.ne %1079 %1080
  br.cond %1081 %BB:198 %BB:189

#pred = {%BB:188}
%BB:189:
  %1082 = local.get %24
  %1083 = local.get %17
  %1084 = int.le.s %1082 %1083
  br.cond %1084 %BB:198 %BB:190

#pred = {%BB:189}
%BB:190:
  %1085 = local.get %5
  %1086 = const i32 64
  %1087 = int.add %1085 %1086
  %1088 = const i32 32
  %1089 = local.get %24
  %1090 = local.get %17
  %1091 = int.sub %1089 %1090
  local.set %19 %1091
  %1092 = const i32 256
  %1093 = local.get %19
  %1094 = const i32 256
  %1095 = int.lt.u %1093 %1094
  local.set %22 %1095
  %1096 = select %1095 %1091 %1092
  %1097 = call %function:97(%1087, %1088, %1096)
  %1098 = local.get (arg)%0
  memory.guard %memory:0 %1098 32
  %1099 = load.32 i32 %memory:0 %1098
  local.set %18 %1099
  %1100 = const i32 32
  %1101 = int.and %1099 %1100
  %1102 = int.eqz %1101
  local.set %20 %1102
  %1103 = local.get %22
  br.cond %1103 %BB:196 %BB:191

#pred = {%BB:190}
%BB:191:
  br %BB:192

#pred = {%BB:194, %BB:191}
%BB:192:
  %1104 = local.get %20
  %1105 = const i32 1
  %1106 = int.and %1104 %1105
  %1107 = int.eqz %1106
  br.cond %1107 %BB:194 %BB:193

#pred = {%BB:192}
%BB:193:
  %1108 = local.get %5
  %1109 = const i32 64
  %1110 = int.add %1108 %1109
  %1111 = const i32 256
  %1112 = local.get (arg)%0
  %1113 = call %function:72(%1110, %1111, %1112)
  %1114 = local.get (arg)%0
  memory.guard %memory:0 %1114 32
  %1115 = load.32 i32 %memory:0 %1114
  local.set %18 %1115
  br %BB:194

#pred = {%BB:193, %BB:192}
%BB:194:
  %1116 = local.get %18
  %1117 = const i32 32
  %1118 = int.and %1116 %1117
  %1119 = int.eqz %1118
  local.set %20 %1119
  %1120 = local.get %19
  %1121 = const i32 -256
  %1122 = int.add %1120 %1121
  local.set %19 %1122
  %1123 = const i32 255
  %1124 = int.gt.u %1122 %1123
  br.cond %1124 %BB:192 %BB:195

#pred = {%BB:194}
%BB:195:
  br %BB:196

#pred = {%BB:195, %BB:190}
%BB:196:
  %1125 = local.get %20
  %1126 = int.eqz %1125
  br.cond %1126 %BB:198 %BB:197

#pred = {%BB:196}
%BB:197:
  %1127 = local.get %5
  %1128 = const i32 64
  %1129 = int.add %1127 %1128
  %1130 = local.get %19
  %1131 = local.get (arg)%0
  %1132 = call %function:72(%1129, %1130, %1131)
  br %BB:198

#pred = {%BB:197, %BB:196, %BB:189, %BB:188}
%BB:198:
  %1133 = local.get %24
  %1134 = local.get %17
  %1135 = local.get %24
  %1136 = local.get %17
  %1137 = int.gt.s %1135 %1136
  %1138 = select %1137 %1133 %1134
  local.set %17 %1138
  br %BB:0

#pred = {%BB:106}
%BB:199:
  %1139 = local.get %21
  %1140 = const i32 -1
  %1141 = int.gt.s %1139 %1140
  br.cond %1141 %BB:202 %BB:200

#pred = {%BB:199}
%BB:200:
  %1142 = local.get %25
  br.cond %1142 %BB:569 %BB:201

#pred = {%BB:200}
%BB:201:
  br %BB:202

#pred = {%BB:201, %BB:199}
%BB:202:
  %1143 = local.get %5
  %1144 = const i32 56
  %1145 = int.add %1143 %1144
  memory.guard %memory:0 %1145 64
  %1146 = load.64 f64 %memory:0 %1145
  local.set %34 %1146
  %1147 = local.get %5
  %1148 = const i32 0
  %1149 = const i32 364
  %1150 = int.add %1147 %1149
  memory.guard %memory:0 %1150 32
  store.32 %memory:0 %1150 %1148
  %1151 = local.get %34
  %1152 = cast.bit i64 %1151
  %1153 = const i64 -1
  %1154 = int.gt.s %1152 %1153
  br.cond %1154 %BB:204 %BB:203

#pred = {%BB:202}
%BB:203:
  %1155 = local.get %34
  %1156 = fp.neg %1155
  local.set %34 %1156
  %1157 = const i32 1
  local.set %35 %1157
  %1158 = const i32 0
  local.set %36 %1158
  %1159 = const i32 68880
  local.set %37 %1159
  br %BB:207

#pred = {%BB:202}
%BB:204:
  %1160 = local.get %23
  %1161 = const i32 2048
  %1162 = int.and %1160 %1161
  %1163 = int.eqz %1162
  br.cond %1163 %BB:206 %BB:205

#pred = {%BB:204}
%BB:205:
  %1164 = const i32 1
  local.set %35 %1164
  %1165 = const i32 0
  local.set %36 %1165
  %1166 = const i32 68883
  local.set %37 %1166
  br %BB:207

#pred = {%BB:204}
%BB:206:
  %1167 = const i32 68886
  %1168 = const i32 68881
  %1169 = local.get %23
  %1170 = const i32 1
  %1171 = int.and %1169 %1170
  local.set %35 %1171
  %1172 = select %1171 %1167 %1168
  local.set %37 %1172
  %1173 = local.get %35
  %1174 = int.eqz %1173
  local.set %36 %1174
  br %BB:207

#pred = {%BB:206, %BB:205, %BB:203}
%BB:207:
  %1175 = local.get %34
  %1176 = fp.abs %1175
  %1177 = const f64 inf
  %1178 = fp.lt %1176 %1177
  br.cond %1178 %BB:233 %BB:208

#pred = {%BB:207}
%BB:208:
  %1179 = local.get %35
  %1180 = const i32 3
  %1181 = int.add %1179 %1180
  local.set %18 %1181
  %1182 = local.get %23
  %1183 = const i32 8192
  %1184 = int.and %1182 %1183
  br.cond %1184 %BB:218 %BB:209

#pred = {%BB:208}
%BB:209:
  %1185 = local.get %24
  %1186 = local.get %18
  %1187 = int.le.s %1185 %1186
  br.cond %1187 %BB:218 %BB:210

#pred = {%BB:209}
%BB:210:
  %1188 = local.get %5
  %1189 = const i32 64
  %1190 = int.add %1188 %1189
  %1191 = const i32 32
  %1192 = local.get %24
  %1193 = local.get %18
  %1194 = int.sub %1192 %1193
  local.set %17 %1194
  %1195 = const i32 256
  %1196 = local.get %17
  %1197 = const i32 256
  %1198 = int.lt.u %1196 %1197
  local.set %22 %1198
  %1199 = select %1198 %1194 %1195
  %1200 = call %function:97(%1190, %1191, %1199)
  %1201 = local.get (arg)%0
  memory.guard %memory:0 %1201 32
  %1202 = load.32 i32 %memory:0 %1201
  local.set %20 %1202
  %1203 = const i32 32
  %1204 = int.and %1202 %1203
  %1205 = int.eqz %1204
  local.set %19 %1205
  %1206 = local.get %22
  br.cond %1206 %BB:216 %BB:211

#pred = {%BB:210}
%BB:211:
  br %BB:212

#pred = {%BB:214, %BB:211}
%BB:212:
  %1207 = local.get %19
  %1208 = const i32 1
  %1209 = int.and %1207 %1208
  %1210 = int.eqz %1209
  br.cond %1210 %BB:214 %BB:213

#pred = {%BB:212}
%BB:213:
  %1211 = local.get %5
  %1212 = const i32 64
  %1213 = int.add %1211 %1212
  %1214 = const i32 256
  %1215 = local.get (arg)%0
  %1216 = call %function:72(%1213, %1214, %1215)
  %1217 = local.get (arg)%0
  memory.guard %memory:0 %1217 32
  %1218 = load.32 i32 %memory:0 %1217
  local.set %20 %1218
  br %BB:214

#pred = {%BB:213, %BB:212}
%BB:214:
  %1219 = local.get %20
  %1220 = const i32 32
  %1221 = int.and %1219 %1220
  %1222 = int.eqz %1221
  local.set %19 %1222
  %1223 = local.get %17
  %1224 = const i32 -256
  %1225 = int.add %1223 %1224
  local.set %17 %1225
  %1226 = const i32 255
  %1227 = int.gt.u %1225 %1226
  br.cond %1227 %BB:212 %BB:215

#pred = {%BB:214}
%BB:215:
  br %BB:216

#pred = {%BB:215, %BB:210}
%BB:216:
  %1228 = local.get %19
  %1229 = int.eqz %1228
  br.cond %1229 %BB:218 %BB:217

#pred = {%BB:216}
%BB:217:
  %1230 = local.get %5
  %1231 = const i32 64
  %1232 = int.add %1230 %1231
  %1233 = local.get %17
  %1234 = local.get (arg)%0
  %1235 = call %function:72(%1232, %1233, %1234)
  br %BB:218

#pred = {%BB:217, %BB:216, %BB:209, %BB:208}
%BB:218:
  %1236 = local.get (arg)%0
  memory.guard %memory:0 %1236 32
  %1237 = load.32 i32 %memory:0 %1236
  local.set %17 %1237
  %1238 = const i32 32
  %1239 = int.and %1237 %1238
  br.cond %1239 %BB:220 %BB:219

#pred = {%BB:218}
%BB:219:
  %1240 = local.get %37
  %1241 = local.get %35
  %1242 = local.get (arg)%0
  %1243 = call %function:72(%1240, %1241, %1242)
  %1244 = local.get (arg)%0
  memory.guard %memory:0 %1244 32
  %1245 = load.32 i32 %memory:0 %1244
  local.set %17 %1245
  br %BB:220

#pred = {%BB:219, %BB:218}
%BB:220:
  %1246 = local.get %17
  %1247 = const i32 32
  %1248 = int.and %1246 %1247
  br.cond %1248 %BB:222 %BB:221

#pred = {%BB:220}
%BB:221:
  %1249 = const i32 68907
  %1250 = const i32 68911
  %1251 = local.get %29
  %1252 = const i32 32
  %1253 = int.and %1251 %1252
  local.set %17 %1253
  %1254 = select %1253 %1249 %1250
  %1255 = const i32 68899
  %1256 = const i32 68903
  %1257 = local.get %17
  %1258 = select %1257 %1255 %1256
  %1259 = local.get %34
  %1260 = local.get %34
  %1261 = fp.ne %1259 %1260
  %1262 = select %1261 %1254 %1258
  %1263 = const i32 3
  %1264 = local.get (arg)%0
  %1265 = call %function:72(%1262, %1263, %1264)
  br %BB:222

#pred = {%BB:221, %BB:220}
%BB:222:
  %1266 = local.get %23
  %1267 = const i32 73728
  %1268 = int.and %1266 %1267
  %1269 = const i32 8192
  %1270 = int.ne %1268 %1269
  br.cond %1270 %BB:232 %BB:223

#pred = {%BB:222}
%BB:223:
  %1271 = local.get %24
  %1272 = local.get %18
  %1273 = int.le.s %1271 %1272
  br.cond %1273 %BB:232 %BB:224

#pred = {%BB:223}
%BB:224:
  %1274 = local.get %5
  %1275 = const i32 64
  %1276 = int.add %1274 %1275
  %1277 = const i32 32
  %1278 = local.get %24
  %1279 = local.get %18
  %1280 = int.sub %1278 %1279
  local.set %17 %1280
  %1281 = const i32 256
  %1282 = local.get %17
  %1283 = const i32 256
  %1284 = int.lt.u %1282 %1283
  local.set %22 %1284
  %1285 = select %1284 %1280 %1281
  %1286 = call %function:97(%1276, %1277, %1285)
  %1287 = local.get (arg)%0
  memory.guard %memory:0 %1287 32
  %1288 = load.32 i32 %memory:0 %1287
  local.set %20 %1288
  %1289 = const i32 32
  %1290 = int.and %1288 %1289
  %1291 = int.eqz %1290
  local.set %19 %1291
  %1292 = local.get %22
  br.cond %1292 %BB:230 %BB:225

#pred = {%BB:224}
%BB:225:
  br %BB:226

#pred = {%BB:228, %BB:225}
%BB:226:
  %1293 = local.get %19
  %1294 = const i32 1
  %1295 = int.and %1293 %1294
  %1296 = int.eqz %1295
  br.cond %1296 %BB:228 %BB:227

#pred = {%BB:226}
%BB:227:
  %1297 = local.get %5
  %1298 = const i32 64
  %1299 = int.add %1297 %1298
  %1300 = const i32 256
  %1301 = local.get (arg)%0
  %1302 = call %function:72(%1299, %1300, %1301)
  %1303 = local.get (arg)%0
  memory.guard %memory:0 %1303 32
  %1304 = load.32 i32 %memory:0 %1303
  local.set %20 %1304
  br %BB:228

#pred = {%BB:227, %BB:226}
%BB:228:
  %1305 = local.get %20
  %1306 = const i32 32
  %1307 = int.and %1305 %1306
  %1308 = int.eqz %1307
  local.set %19 %1308
  %1309 = local.get %17
  %1310 = const i32 -256
  %1311 = int.add %1309 %1310
  local.set %17 %1311
  %1312 = const i32 255
  %1313 = int.gt.u %1311 %1312
  br.cond %1313 %BB:226 %BB:229

#pred = {%BB:228}
%BB:229:
  br %BB:230

#pred = {%BB:229, %BB:224}
%BB:230:
  %1314 = local.get %19
  %1315 = int.eqz %1314
  br.cond %1315 %BB:232 %BB:231

#pred = {%BB:230}
%BB:231:
  %1316 = local.get %5
  %1317 = const i32 64
  %1318 = int.add %1316 %1317
  %1319 = local.get %17
  %1320 = local.get (arg)%0
  %1321 = call %function:72(%1318, %1319, %1320)
  br %BB:232

#pred = {%BB:231, %BB:230, %BB:223, %BB:222}
%BB:232:
  %1322 = local.get %24
  %1323 = local.get %18
  %1324 = local.get %24
  %1325 = local.get %18
  %1326 = int.gt.s %1324 %1325
  %1327 = select %1326 %1322 %1323
  local.set %17 %1327
  br %BB:567

#pred = {%BB:207}
%BB:233:
  %1328 = local.get %34
  %1329 = local.get %5
  %1330 = const i32 364
  %1331 = int.add %1329 %1330
  %1332 = call %function:105(%1328, %1331)
  local.set %34 %1332
  %1333 = local.get %34
  %1334 = fp.add %1332 %1333
  local.set %34 %1334
  %1335 = const f64 0
  %1336 = fp.eq %1334 %1335
  br.cond %1336 %BB:236 %BB:234

#pred = {%BB:233}
%BB:234:
  %1337 = local.get %5
  %1338 = local.get %5
  %1339 = const i32 364
  %1340 = int.add %1338 %1339
  memory.guard %memory:0 %1340 32
  %1341 = load.32 i32 %memory:0 %1340
  local.set %17 %1341
  %1342 = const i32 -1
  %1343 = int.add %1341 %1342
  %1344 = const i32 364
  %1345 = int.add %1337 %1344
  memory.guard %memory:0 %1345 32
  store.32 %memory:0 %1345 %1343
  %1346 = local.get %29
  %1347 = const i32 32
  %1348 = int.or %1346 %1347
  local.set %31 %1348
  %1349 = const i32 97
  %1350 = int.ne %1348 %1349
  br.cond %1350 %BB:238 %BB:235

#pred = {%BB:234}
%BB:235:
  br %BB:496

#pred = {%BB:233}
%BB:236:
  %1351 = local.get %29
  %1352 = const i32 32
  %1353 = int.or %1351 %1352
  local.set %31 %1353
  %1354 = const i32 97
  %1355 = int.eq %1353 %1354
  br.cond %1355 %BB:496 %BB:237

#pred = {%BB:236}
%BB:237:
  %1356 = const i32 6
  %1357 = local.get %21
  %1358 = local.get %21
  %1359 = const i32 0
  %1360 = int.lt.s %1358 %1359
  %1361 = select %1360 %1356 %1357
  local.set %28 %1361
  %1362 = local.get %5
  %1363 = const i32 364
  %1364 = int.add %1362 %1363
  memory.guard %memory:0 %1364 32
  %1365 = load.32 i32 %memory:0 %1364
  local.set %18 %1365
  br %BB:239

#pred = {%BB:234}
%BB:238:
  %1366 = local.get %5
  %1367 = local.get %17
  %1368 = const i32 -29
  %1369 = int.add %1367 %1368
  local.set %18 %1369
  %1370 = const i32 364
  %1371 = int.add %1366 %1370
  memory.guard %memory:0 %1371 32
  store.32 %memory:0 %1371 %1369
  %1372 = const i32 6
  %1373 = local.get %21
  %1374 = local.get %21
  %1375 = const i32 0
  %1376 = int.lt.s %1374 %1375
  %1377 = select %1376 %1372 %1373
  local.set %28 %1377
  %1378 = local.get %34
  %1379 = const f64 268435456
  %1380 = fp.mul %1378 %1379
  local.set %34 %1380
  br %BB:239

#pred = {%BB:238, %BB:237}
%BB:239:
  %1381 = local.get %5
  %1382 = const i32 368
  %1383 = int.add %1381 %1382
  %1384 = local.get %11
  %1385 = local.get %18
  %1386 = const i32 0
  %1387 = int.lt.s %1385 %1386
  local.set %38 %1387
  %1388 = select %1387 %1383 %1384
  local.set %30 %1388
  local.set %20 %1388
  br %BB:240

#pred = {%BB:243, %BB:239}
%BB:240:
  %1389 = local.get %34
  %1390 = const f64 4294967296
  %1391 = fp.lt %1389 %1390
  %1392 = local.get %34
  %1393 = const f64 0
  %1394 = fp.ge %1392 %1393
  %1395 = int.and %1391 %1394
  %1396 = int.eqz %1395
  br.cond %1396 %BB:242 %BB:241

#pred = {%BB:240}
%BB:241:
  %1397 = local.get %34
  %1398 = cast.u i32 %1397
  local.set %17 %1398
  br %BB:243

#pred = {%BB:240}
%BB:242:
  %1399 = const i32 0
  local.set %17 %1399
  br %BB:243

#pred = {%BB:242, %BB:241}
%BB:243:
  %1400 = local.get %20
  %1401 = local.get %17
  memory.guard %memory:0 %1400 32
  store.32 %memory:0 %1400 %1401
  %1402 = local.get %20
  %1403 = const i32 4
  %1404 = int.add %1402 %1403
  local.set %20 %1404
  %1405 = local.get %34
  %1406 = local.get %17
  %1407 = cast.u f64 %1406
  %1408 = fp.sub %1405 %1407
  %1409 = const f64 1000000000
  %1410 = fp.mul %1408 %1409
  local.set %34 %1410
  %1411 = const f64 0
  %1412 = fp.ne %1410 %1411
  br.cond %1412 %BB:240 %BB:244

#pred = {%BB:243}
%BB:244:
  %1413 = local.get %18
  %1414 = const i32 1
  %1415 = int.ge.s %1413 %1414
  br.cond %1415 %BB:246 %BB:245

#pred = {%BB:244}
%BB:245:
  %1416 = local.get %20
  local.set %17 %1416
  %1417 = local.get %30
  local.set %19 %1417
  br %BB:258

#pred = {%BB:244}
%BB:246:
  %1418 = local.get %30
  local.set %19 %1418
  br %BB:247

#pred = {%BB:256, %BB:246}
%BB:247:
  %1419 = local.get %18
  %1420 = const i32 29
  %1421 = local.get %18
  %1422 = const i32 29
  %1423 = int.lt.s %1421 %1422
  %1424 = select %1423 %1419 %1420
  local.set %18 %1424
  %1425 = local.get %20
  %1426 = const i32 -4
  %1427 = int.add %1425 %1426
  local.set %17 %1427
  %1428 = local.get %19
  %1429 = int.lt.u %1427 %1428
  br.cond %1429 %BB:252 %BB:248

#pred = {%BB:247}
%BB:248:
  %1430 = local.get %18
  %1431 = cast.u i64 %1430
  local.set %33 %1431
  %1432 = const i64 0
  local.set %32 %1432
  br %BB:249

#pred = {%BB:249, %BB:248}
%BB:249:
  %1433 = local.get %17
  %1434 = local.get %17
  memory.guard %memory:0 %1434 32
  %1435 = load.32 i64 %memory:0 %1434
  %1436 = local.get %33
  %1437 = int.shl %1435 %1436
  %1438 = local.get %32
  %1439 = const i64 4294967295
  %1440 = int.and %1438 %1439
  %1441 = int.add %1437 %1440
  local.set %32 %1441
  %1442 = local.get %32
  %1443 = const i64 1000000000
  %1444 = int.div.u %1442 %1443
  local.set %32 %1444
  %1445 = const i64 1000000000
  %1446 = int.mul %1444 %1445
  %1447 = int.sub %1441 %1446
  memory.guard %memory:0 %1433 32
  store.32 %memory:0 %1433 %1447
  %1448 = local.get %17
  %1449 = const i32 -4
  %1450 = int.add %1448 %1449
  local.set %17 %1450
  %1451 = local.get %19
  %1452 = int.ge.u %1450 %1451
  br.cond %1452 %BB:249 %BB:250

#pred = {%BB:249}
%BB:250:
  %1453 = local.get %32
  %1454 = cast i32 %1453
  local.set %17 %1454
  %1455 = int.eqz %1454
  br.cond %1455 %BB:252 %BB:251

#pred = {%BB:250}
%BB:251:
  %1456 = local.get %19
  %1457 = const i32 -4
  %1458 = int.add %1456 %1457
  local.set %19 %1458
  %1459 = local.get %17
  memory.guard %memory:0 %1458 32
  store.32 %memory:0 %1458 %1459
  br %BB:252

#pred = {%BB:251, %BB:250, %BB:247}
%BB:252:
  br %BB:253

#pred = {%BB:254, %BB:252}
%BB:253:
  %1460 = local.get %20
  local.set %17 %1460
  %1461 = local.get %19
  %1462 = int.le.u %1460 %1461
  br.cond %1462 %BB:256 %BB:254

#pred = {%BB:253}
%BB:254:
  %1463 = local.get %17
  %1464 = const i32 -4
  %1465 = int.add %1463 %1464
  local.set %20 %1465
  memory.guard %memory:0 %1465 32
  %1466 = load.32 i32 %memory:0 %1465
  %1467 = int.eqz %1466
  br.cond %1467 %BB:253 %BB:255

#pred = {%BB:254}
%BB:255:
  br %BB:256

#pred = {%BB:255, %BB:253}
%BB:256:
  %1468 = local.get %5
  %1469 = local.get %5
  %1470 = const i32 364
  %1471 = int.add %1469 %1470
  memory.guard %memory:0 %1471 32
  %1472 = load.32 i32 %memory:0 %1471
  %1473 = local.get %18
  %1474 = int.sub %1472 %1473
  local.set %18 %1474
  %1475 = const i32 364
  %1476 = int.add %1468 %1475
  memory.guard %memory:0 %1476 32
  store.32 %memory:0 %1476 %1474
  %1477 = local.get %17
  local.set %20 %1477
  %1478 = local.get %18
  %1479 = const i32 0
  %1480 = int.gt.s %1478 %1479
  br.cond %1480 %BB:247 %BB:257

#pred = {%BB:256}
%BB:257:
  br %BB:258

#pred = {%BB:257, %BB:245}
%BB:258:
  %1481 = local.get %18
  %1482 = const i32 -1
  %1483 = int.gt.s %1481 %1482
  br.cond %1483 %BB:268 %BB:259

#pred = {%BB:258}
%BB:259:
  %1484 = local.get %28
  %1485 = const i32 25
  %1486 = int.add %1484 %1485
  %1487 = const i32 9
  %1488 = int.div.u %1486 %1487
  %1489 = const i32 1
  %1490 = int.add %1488 %1489
  local.set %25 %1490
  br %BB:260

#pred = {%BB:266, %BB:259}
%BB:260:
  %1491 = const i32 9
  %1492 = const i32 0
  %1493 = local.get %18
  %1494 = int.sub %1492 %1493
  %1495 = local.get %18
  %1496 = const i32 -9
  %1497 = int.lt.s %1495 %1496
  %1498 = select %1497 %1491 %1494
  local.set %21 %1498
  %1499 = local.get %19
  %1500 = local.get %17
  %1501 = int.lt.u %1499 %1500
  br.cond %1501 %BB:262 %BB:261

#pred = {%BB:260}
%BB:261:
  %1502 = local.get %19
  %1503 = local.get %19
  %1504 = const i32 4
  %1505 = int.add %1503 %1504
  %1506 = local.get %19
  memory.guard %memory:0 %1506 32
  %1507 = load.32 i32 %memory:0 %1506
  %1508 = select %1507 %1502 %1505
  local.set %19 %1508
  br %BB:266

#pred = {%BB:260}
%BB:262:
  %1509 = const i32 1000000000
  %1510 = local.get %21
  %1511 = int.shr.u %1509 %1510
  local.set %27 %1511
  %1512 = const i32 -1
  %1513 = local.get %21
  %1514 = int.shl %1512 %1513
  %1515 = const i32 -1
  %1516 = int.xor %1514 %1515
  local.set %26 %1516
  %1517 = const i32 0
  local.set %18 %1517
  %1518 = local.get %19
  local.set %20 %1518
  br %BB:263

#pred = {%BB:263, %BB:262}
%BB:263:
  %1519 = local.get %20
  %1520 = local.get %20
  memory.guard %memory:0 %1520 32
  %1521 = load.32 i32 %memory:0 %1520
  local.set %22 %1521
  %1522 = local.get %21
  %1523 = int.shr.u %1521 %1522
  %1524 = local.get %18
  %1525 = int.add %1523 %1524
  memory.guard %memory:0 %1519 32
  store.32 %memory:0 %1519 %1525
  %1526 = local.get %22
  %1527 = local.get %26
  %1528 = int.and %1526 %1527
  %1529 = local.get %27
  %1530 = int.mul %1528 %1529
  local.set %18 %1530
  %1531 = local.get %20
  %1532 = const i32 4
  %1533 = int.add %1531 %1532
  local.set %20 %1533
  %1534 = local.get %17
  %1535 = int.lt.u %1533 %1534
  br.cond %1535 %BB:263 %BB:264

#pred = {%BB:263}
%BB:264:
  %1536 = local.get %19
  %1537 = local.get %19
  %1538 = const i32 4
  %1539 = int.add %1537 %1538
  %1540 = local.get %19
  memory.guard %memory:0 %1540 32
  %1541 = load.32 i32 %memory:0 %1540
  %1542 = select %1541 %1536 %1539
  local.set %19 %1542
  %1543 = local.get %18
  %1544 = int.eqz %1543
  br.cond %1544 %BB:266 %BB:265

#pred = {%BB:264}
%BB:265:
  %1545 = local.get %17
  %1546 = local.get %18
  memory.guard %memory:0 %1545 32
  store.32 %memory:0 %1545 %1546
  %1547 = local.get %17
  %1548 = const i32 4
  %1549 = int.add %1547 %1548
  local.set %17 %1549
  br %BB:266

#pred = {%BB:265, %BB:264, %BB:261}
%BB:266:
  %1550 = local.get %5
  %1551 = local.get %5
  %1552 = const i32 364
  %1553 = int.add %1551 %1552
  memory.guard %memory:0 %1553 32
  %1554 = load.32 i32 %memory:0 %1553
  %1555 = local.get %21
  %1556 = int.add %1554 %1555
  local.set %18 %1556
  %1557 = const i32 364
  %1558 = int.add %1550 %1557
  memory.guard %memory:0 %1558 32
  store.32 %memory:0 %1558 %1556
  %1559 = local.get %30
  %1560 = local.get %19
  %1561 = local.get %31
  %1562 = const i32 102
  %1563 = int.eq %1561 %1562
  %1564 = select %1563 %1559 %1560
  local.set %20 %1564
  %1565 = local.get %25
  %1566 = const i32 2
  %1567 = int.shl %1565 %1566
  %1568 = int.add %1564 %1567
  %1569 = local.get %17
  %1570 = local.get %17
  %1571 = local.get %20
  %1572 = int.sub %1570 %1571
  %1573 = const i32 2
  %1574 = int.shr.s %1572 %1573
  %1575 = local.get %25
  %1576 = int.gt.s %1574 %1575
  %1577 = select %1576 %1568 %1569
  local.set %17 %1577
  %1578 = local.get %18
  %1579 = const i32 0
  %1580 = int.lt.s %1578 %1579
  br.cond %1580 %BB:260 %BB:267

#pred = {%BB:266}
%BB:267:
  br %BB:268

#pred = {%BB:267, %BB:258}
%BB:268:
  %1581 = const i32 0
  local.set %20 %1581
  %1582 = local.get %19
  %1583 = local.get %17
  %1584 = int.ge.u %1582 %1583
  br.cond %1584 %BB:273 %BB:269

#pred = {%BB:268}
%BB:269:
  %1585 = local.get %30
  %1586 = local.get %19
  %1587 = int.sub %1585 %1586
  %1588 = const i32 2
  %1589 = int.shr.s %1587 %1588
  %1590 = const i32 9
  %1591 = int.mul %1589 %1590
  local.set %20 %1591
  %1592 = local.get %19
  memory.guard %memory:0 %1592 32
  %1593 = load.32 i32 %memory:0 %1592
  local.set %22 %1593
  %1594 = const i32 10
  %1595 = int.lt.u %1593 %1594
  br.cond %1595 %BB:273 %BB:270

#pred = {%BB:269}
%BB:270:
  %1596 = const i32 10
  local.set %18 %1596
  br %BB:271

#pred = {%BB:271, %BB:270}
%BB:271:
  %1597 = local.get %20
  %1598 = const i32 1
  %1599 = int.add %1597 %1598
  local.set %20 %1599
  %1600 = local.get %22
  %1601 = local.get %18
  %1602 = const i32 10
  %1603 = int.mul %1601 %1602
  local.set %18 %1603
  %1604 = int.ge.u %1600 %1603
  br.cond %1604 %BB:271 %BB:272

#pred = {%BB:271}
%BB:272:
  br %BB:273

#pred = {%BB:272, %BB:269, %BB:268}
%BB:273:
  %1605 = local.get %28
  %1606 = const i32 0
  %1607 = local.get %20
  %1608 = local.get %31
  %1609 = const i32 102
  %1610 = int.eq %1608 %1609
  %1611 = select %1610 %1606 %1607
  %1612 = int.sub %1605 %1611
  %1613 = local.get %28
  %1614 = const i32 0
  %1615 = int.ne %1613 %1614
  %1616 = local.get %31
  %1617 = const i32 103
  %1618 = int.eq %1616 %1617
  local.set %25 %1618
  %1619 = int.and %1615 %1618
  %1620 = int.sub %1612 %1619
  local.set %18 %1620
  %1621 = local.get %17
  %1622 = local.get %30
  %1623 = int.sub %1621 %1622
  %1624 = const i32 2
  %1625 = int.shr.s %1623 %1624
  %1626 = const i32 9
  %1627 = int.mul %1625 %1626
  %1628 = const i32 -9
  %1629 = int.add %1627 %1628
  %1630 = int.ge.s %1620 %1629
  br.cond %1630 %BB:302 %BB:274

#pred = {%BB:273}
%BB:274:
  %1631 = local.get %18
  %1632 = const i32 9216
  %1633 = int.add %1631 %1632
  local.set %18 %1633
  %1634 = const i32 9
  %1635 = int.div.s %1633 %1634
  local.set %21 %1635
  %1636 = const i32 2
  %1637 = int.shl %1635 %1636
  %1638 = local.get %10
  %1639 = local.get %9
  %1640 = local.get %38
  %1641 = select %1640 %1638 %1639
  %1642 = int.add %1637 %1641
  local.set %38 %1642
  %1643 = const i32 -4096
  %1644 = int.add %1642 %1643
  local.set %26 %1644
  %1645 = const i32 10
  local.set %22 %1645
  %1646 = local.get %18
  %1647 = local.get %21
  %1648 = const i32 9
  %1649 = int.mul %1647 %1648
  %1650 = int.sub %1646 %1649
  local.set %18 %1650
  %1651 = const i32 7
  %1652 = int.gt.s %1650 %1651
  br.cond %1652 %BB:278 %BB:275

#pred = {%BB:274}
%BB:275:
  %1653 = local.get %18
  %1654 = const i32 -8
  %1655 = int.add %1653 %1654
  local.set %18 %1655
  %1656 = const i32 10
  local.set %22 %1656
  br %BB:276

#pred = {%BB:276, %BB:275}
%BB:276:
  %1657 = local.get %22
  %1658 = const i32 10
  %1659 = int.mul %1657 %1658
  local.set %22 %1659
  %1660 = local.get %18
  %1661 = const i32 1
  %1662 = int.add %1660 %1661
  local.set %21 %1662
  %1663 = local.get %18
  %1664 = int.ge.u %1662 %1663
  local.set %27 %1664
  %1665 = local.get %21
  local.set %18 %1665
  %1666 = local.get %27
  br.cond %1666 %BB:276 %BB:277

#pred = {%BB:276}
%BB:277:
  br %BB:278

#pred = {%BB:277, %BB:274}
%BB:278:
  %1667 = local.get %26
  memory.guard %memory:0 %1667 32
  %1668 = load.32 i32 %memory:0 %1667
  local.set %21 %1668
  %1669 = local.get %21
  %1670 = local.get %22
  %1671 = int.div.u %1669 %1670
  local.set %27 %1671
  %1672 = local.get %22
  %1673 = int.mul %1671 %1672
  %1674 = int.sub %1668 %1673
  local.set %18 %1674
  %1675 = local.get %26
  %1676 = const i32 4
  %1677 = int.add %1675 %1676
  local.set %31 %1677
  %1678 = local.get %17
  %1679 = int.ne %1677 %1678
  br.cond %1679 %BB:281 %BB:279

#pred = {%BB:278}
%BB:279:
  %1680 = local.get %18
  %1681 = int.eqz %1680
  br.cond %1681 %BB:301 %BB:280

#pred = {%BB:279}
%BB:280:
  br %BB:281

#pred = {%BB:280, %BB:278}
%BB:281:
  %1682 = local.get %27
  %1683 = const i32 1
  %1684 = int.and %1682 %1683
  br.cond %1684 %BB:286 %BB:282

#pred = {%BB:281}
%BB:282:
  %1685 = const f64 9007199254740992
  local.set %34 %1685
  %1686 = local.get %26
  %1687 = local.get %19
  %1688 = int.le.u %1686 %1687
  br.cond %1688 %BB:287 %BB:283

#pred = {%BB:282}
%BB:283:
  %1689 = local.get %22
  %1690 = const i32 1000000000
  %1691 = int.ne %1689 %1690
  br.cond %1691 %BB:287 %BB:284

#pred = {%BB:283}
%BB:284:
  %1692 = local.get %26
  %1693 = const i32 -4
  %1694 = int.add %1692 %1693
  memory.guard %memory:0 %1694 8
  %1695 = load.8 i32 %memory:0 %1694
  %1696 = const i32 1
  %1697 = int.and %1695 %1696
  %1698 = int.eqz %1697
  br.cond %1698 %BB:287 %BB:285

#pred = {%BB:284}
%BB:285:
  br %BB:286

#pred = {%BB:285, %BB:281}
%BB:286:
  %1699 = const f64 9007199254740994
  local.set %34 %1699
  br %BB:287

#pred = {%BB:286, %BB:284, %BB:283, %BB:282}
%BB:287:
  %1700 = const f64 0.5
  %1701 = const f64 1
  %1702 = const f64 1.5
  %1703 = local.get %18
  %1704 = local.get %22
  %1705 = const i32 1
  %1706 = int.shr.u %1704 %1705
  local.set %27 %1706
  %1707 = int.eq %1703 %1706
  %1708 = select %1707 %1701 %1702
  %1709 = const f64 1.5
  %1710 = local.get %31
  %1711 = local.get %17
  %1712 = int.eq %1710 %1711
  %1713 = select %1712 %1708 %1709
  %1714 = local.get %18
  %1715 = local.get %27
  %1716 = int.lt.u %1714 %1715
  %1717 = select %1716 %1700 %1713
  local.set %39 %1717
  %1718 = local.get %36
  br.cond %1718 %BB:290 %BB:288

#pred = {%BB:287}
%BB:288:
  %1719 = local.get %37
  memory.guard %memory:0 %1719 8
  %1720 = load.8 i32 %memory:0 %1719
  %1721 = const i32 45
  %1722 = int.ne %1720 %1721
  br.cond %1722 %BB:290 %BB:289

#pred = {%BB:288}
%BB:289:
  %1723 = local.get %39
  %1724 = fp.neg %1723
  local.set %39 %1724
  %1725 = local.get %34
  %1726 = fp.neg %1725
  local.set %34 %1726
  br %BB:290

#pred = {%BB:289, %BB:288, %BB:287}
%BB:290:
  %1727 = local.get %26
  %1728 = local.get %21
  %1729 = local.get %18
  %1730 = int.sub %1728 %1729
  local.set %18 %1730
  memory.guard %memory:0 %1727 32
  store.32 %memory:0 %1727 %1730
  %1731 = local.get %34
  %1732 = local.get %39
  %1733 = fp.add %1731 %1732
  %1734 = local.get %34
  %1735 = fp.eq %1733 %1734
  br.cond %1735 %BB:301 %BB:291

#pred = {%BB:290}
%BB:291:
  %1736 = local.get %26
  %1737 = local.get %18
  %1738 = local.get %22
  %1739 = int.add %1737 %1738
  local.set %20 %1739
  memory.guard %memory:0 %1736 32
  store.32 %memory:0 %1736 %1739
  %1740 = local.get %20
  %1741 = const i32 1000000000
  %1742 = int.lt.u %1740 %1741
  br.cond %1742 %BB:297 %BB:292

#pred = {%BB:291}
%BB:292:
  %1743 = local.get %38
  %1744 = const i32 -4100
  %1745 = int.add %1743 %1744
  local.set %20 %1745
  br %BB:293

#pred = {%BB:295, %BB:292}
%BB:293:
  %1746 = local.get %20
  %1747 = const i32 4
  %1748 = int.add %1746 %1747
  %1749 = const i32 0
  memory.guard %memory:0 %1748 32
  store.32 %memory:0 %1748 %1749
  %1750 = local.get %20
  %1751 = local.get %19
  %1752 = int.ge.u %1750 %1751
  br.cond %1752 %BB:295 %BB:294

#pred = {%BB:293}
%BB:294:
  %1753 = local.get %19
  %1754 = const i32 -4
  %1755 = int.add %1753 %1754
  local.set %19 %1755
  %1756 = const i32 0
  memory.guard %memory:0 %1755 32
  store.32 %memory:0 %1755 %1756
  br %BB:295

#pred = {%BB:294, %BB:293}
%BB:295:
  %1757 = local.get %20
  %1758 = local.get %20
  memory.guard %memory:0 %1758 32
  %1759 = load.32 i32 %memory:0 %1758
  %1760 = const i32 1
  %1761 = int.add %1759 %1760
  local.set %18 %1761
  memory.guard %memory:0 %1757 32
  store.32 %memory:0 %1757 %1761
  %1762 = local.get %20
  %1763 = const i32 -4
  %1764 = int.add %1762 %1763
  local.set %20 %1764
  %1765 = local.get %18
  %1766 = const i32 999999999
  %1767 = int.gt.u %1765 %1766
  br.cond %1767 %BB:293 %BB:296

#pred = {%BB:295}
%BB:296:
  %1768 = local.get %20
  %1769 = const i32 4
  %1770 = int.add %1768 %1769
  local.set %26 %1770
  br %BB:297

#pred = {%BB:296, %BB:291}
%BB:297:
  %1771 = local.get %30
  %1772 = local.get %19
  %1773 = int.sub %1771 %1772
  %1774 = const i32 2
  %1775 = int.shr.s %1773 %1774
  %1776 = const i32 9
  %1777 = int.mul %1775 %1776
  local.set %20 %1777
  %1778 = local.get %19
  memory.guard %memory:0 %1778 32
  %1779 = load.32 i32 %memory:0 %1778
  local.set %22 %1779
  %1780 = const i32 10
  %1781 = int.lt.u %1779 %1780
  br.cond %1781 %BB:301 %BB:298

#pred = {%BB:297}
%BB:298:
  %1782 = const i32 10
  local.set %18 %1782
  br %BB:299

#pred = {%BB:299, %BB:298}
%BB:299:
  %1783 = local.get %20
  %1784 = const i32 1
  %1785 = int.add %1783 %1784
  local.set %20 %1785
  %1786 = local.get %22
  %1787 = local.get %18
  %1788 = const i32 10
  %1789 = int.mul %1787 %1788
  local.set %18 %1789
  %1790 = int.ge.u %1786 %1789
  br.cond %1790 %BB:299 %BB:300

#pred = {%BB:299}
%BB:300:
  br %BB:301

#pred = {%BB:300, %BB:297, %BB:290, %BB:279}
%BB:301:
  %1791 = local.get %26
  %1792 = const i32 4
  %1793 = int.add %1791 %1792
  local.set %18 %1793
  %1794 = local.get %17
  %1795 = local.get %17
  %1796 = local.get %18
  %1797 = int.gt.u %1795 %1796
  %1798 = select %1797 %1793 %1794
  local.set %17 %1798
  br %BB:302

#pred = {%BB:301, %BB:273}
%BB:302:
  br %BB:303

#pred = {%BB:305, %BB:302}
%BB:303:
  %1799 = local.get %17
  local.set %22 %1799
  %1800 = local.get %19
  %1801 = int.gt.u %1799 %1800
  br.cond %1801 %BB:305 %BB:304

#pred = {%BB:303}
%BB:304:
  %1802 = const i32 0
  local.set %31 %1802
  br %BB:307

#pred = {%BB:303}
%BB:305:
  %1803 = local.get %22
  %1804 = const i32 -4
  %1805 = int.add %1803 %1804
  local.set %17 %1805
  memory.guard %memory:0 %1805 32
  %1806 = load.32 i32 %memory:0 %1805
  %1807 = int.eqz %1806
  br.cond %1807 %BB:303 %BB:306

#pred = {%BB:305}
%BB:306:
  %1808 = const i32 1
  local.set %31 %1808
  br %BB:307

#pred = {%BB:306, %BB:304}
%BB:307:
  %1809 = local.get %25
  br.cond %1809 %BB:309 %BB:308

#pred = {%BB:307}
%BB:308:
  %1810 = local.get %23
  %1811 = const i32 8
  %1812 = int.and %1810 %1811
  local.set %26 %1812
  br %BB:319

#pred = {%BB:307}
%BB:309:
  %1813 = local.get %20
  %1814 = const i32 -1
  %1815 = int.xor %1813 %1814
  %1816 = const i32 -1
  %1817 = local.get %28
  %1818 = const i32 1
  %1819 = local.get %28
  %1820 = select %1819 %1817 %1818
  local.set %17 %1820
  %1821 = local.get %20
  %1822 = int.gt.s %1820 %1821
  %1823 = local.get %20
  %1824 = const i32 -5
  %1825 = int.gt.s %1823 %1824
  %1826 = int.and %1822 %1825
  local.set %18 %1826
  %1827 = select %1826 %1815 %1816
  %1828 = local.get %17
  %1829 = int.add %1827 %1828
  local.set %28 %1829
  %1830 = const i32 -1
  %1831 = const i32 -2
  %1832 = local.get %18
  %1833 = select %1832 %1830 %1831
  %1834 = local.get %29
  %1835 = int.add %1833 %1834
  local.set %29 %1835
  %1836 = local.get %23
  %1837 = const i32 8
  %1838 = int.and %1836 %1837
  local.set %26 %1838
  br.cond %1838 %BB:319 %BB:310

#pred = {%BB:309}
%BB:310:
  %1839 = const i32 9
  local.set %17 %1839
  %1840 = local.get %31
  %1841 = int.eqz %1840
  br.cond %1841 %BB:316 %BB:311

#pred = {%BB:310}
%BB:311:
  %1842 = local.get %22
  %1843 = const i32 -4
  %1844 = int.add %1842 %1843
  memory.guard %memory:0 %1844 32
  %1845 = load.32 i32 %memory:0 %1844
  local.set %21 %1845
  %1846 = int.eqz %1845
  br.cond %1846 %BB:316 %BB:312

#pred = {%BB:311}
%BB:312:
  %1847 = const i32 0
  local.set %17 %1847
  %1848 = local.get %21
  %1849 = const i32 10
  %1850 = int.rem.u %1848 %1849
  br.cond %1850 %BB:316 %BB:313

#pred = {%BB:312}
%BB:313:
  %1851 = const i32 10
  local.set %18 %1851
  %1852 = const i32 0
  local.set %17 %1852
  br %BB:314

#pred = {%BB:314, %BB:313}
%BB:314:
  %1853 = local.get %17
  %1854 = const i32 1
  %1855 = int.add %1853 %1854
  local.set %17 %1855
  %1856 = local.get %21
  %1857 = local.get %18
  %1858 = const i32 10
  %1859 = int.mul %1857 %1858
  local.set %18 %1859
  %1860 = int.rem.u %1856 %1859
  %1861 = int.eqz %1860
  br.cond %1861 %BB:314 %BB:315

#pred = {%BB:314}
%BB:315:
  br %BB:316

#pred = {%BB:315, %BB:312, %BB:311, %BB:310}
%BB:316:
  %1862 = local.get %22
  %1863 = local.get %30
  %1864 = int.sub %1862 %1863
  %1865 = const i32 2
  %1866 = int.shr.s %1864 %1865
  %1867 = const i32 9
  %1868 = int.mul %1866 %1867
  %1869 = const i32 -9
  %1870 = int.add %1868 %1869
  local.set %18 %1870
  %1871 = local.get %29
  %1872 = const i32 -33
  %1873 = int.and %1871 %1872
  %1874 = const i32 70
  %1875 = int.ne %1873 %1874
  br.cond %1875 %BB:318 %BB:317

#pred = {%BB:316}
%BB:317:
  %1876 = const i32 0
  local.set %26 %1876
  %1877 = local.get %28
  %1878 = local.get %18
  %1879 = local.get %17
  %1880 = int.sub %1878 %1879
  local.set %17 %1880
  %1881 = const i32 0
  %1882 = local.get %17
  %1883 = const i32 0
  %1884 = int.gt.s %1882 %1883
  %1885 = select %1884 %1880 %1881
  local.set %17 %1885
  %1886 = local.get %28
  %1887 = local.get %17
  %1888 = int.lt.s %1886 %1887
  %1889 = select %1888 %1877 %1885
  local.set %28 %1889
  br %BB:319

#pred = {%BB:316}
%BB:318:
  %1890 = const i32 0
  local.set %26 %1890
  %1891 = local.get %28
  %1892 = local.get %18
  %1893 = local.get %20
  %1894 = int.add %1892 %1893
  %1895 = local.get %17
  %1896 = int.sub %1894 %1895
  local.set %17 %1896
  %1897 = const i32 0
  %1898 = local.get %17
  %1899 = const i32 0
  %1900 = int.gt.s %1898 %1899
  %1901 = select %1900 %1896 %1897
  local.set %17 %1901
  %1902 = local.get %28
  %1903 = local.get %17
  %1904 = int.lt.s %1902 %1903
  %1905 = select %1904 %1891 %1901
  local.set %28 %1905
  br %BB:319

#pred = {%BB:318, %BB:317, %BB:309, %BB:308}
%BB:319:
  %1906 = const i32 -1
  local.set %17 %1906
  %1907 = local.get %28
  %1908 = const i32 2147483645
  %1909 = const i32 2147483646
  %1910 = local.get %28
  %1911 = local.get %26
  %1912 = int.or %1910 %1911
  local.set %25 %1912
  %1913 = select %1912 %1908 %1909
  %1914 = int.gt.s %1907 %1913
  br.cond %1914 %BB:567 %BB:320

#pred = {%BB:319}
%BB:320:
  %1915 = local.get %28
  %1916 = local.get %25
  %1917 = const i32 0
  %1918 = int.ne %1916 %1917
  %1919 = int.add %1915 %1918
  %1920 = const i32 1
  %1921 = int.add %1919 %1920
  local.set %36 %1921
  %1922 = local.get %29
  %1923 = const i32 -33
  %1924 = int.and %1922 %1923
  %1925 = const i32 70
  %1926 = int.ne %1924 %1925
  local.set %40 %1926
  br.cond %1926 %BB:323 %BB:321

#pred = {%BB:320}
%BB:321:
  %1927 = local.get %20
  %1928 = const i32 2147483647
  %1929 = local.get %36
  %1930 = int.sub %1928 %1929
  %1931 = int.gt.s %1927 %1930
  br.cond %1931 %BB:567 %BB:322

#pred = {%BB:321}
%BB:322:
  %1932 = local.get %20
  %1933 = const i32 0
  %1934 = local.get %20
  %1935 = const i32 0
  %1936 = int.gt.s %1934 %1935
  %1937 = select %1936 %1932 %1933
  local.set %20 %1937
  br %BB:333

#pred = {%BB:320}
%BB:323:
  %1938 = local.get %12
  local.set %18 %1938
  %1939 = local.get %20
  %1940 = local.get %20
  %1941 = const i32 31
  %1942 = int.shr.s %1940 %1941
  local.set %17 %1942
  %1943 = int.add %1939 %1942
  %1944 = local.get %17
  %1945 = int.xor %1943 %1944
  local.set %17 %1945
  %1946 = int.eqz %1945
  br.cond %1946 %BB:327 %BB:324

#pred = {%BB:323}
%BB:324:
  br %BB:325

#pred = {%BB:325, %BB:324}
%BB:325:
  %1947 = local.get %18
  %1948 = const i32 -1
  %1949 = int.add %1947 %1948
  local.set %18 %1949
  %1950 = local.get %17
  %1951 = local.get %17
  %1952 = const i32 10
  %1953 = int.div.u %1951 %1952
  local.set %21 %1953
  %1954 = const i32 10
  %1955 = int.mul %1953 %1954
  %1956 = int.sub %1950 %1955
  %1957 = const i32 48
  %1958 = int.or %1956 %1957
  memory.guard %memory:0 %1949 8
  store.8 %memory:0 %1949 %1958
  %1959 = local.get %17
  %1960 = const i32 9
  %1961 = int.gt.u %1959 %1960
  local.set %27 %1961
  %1962 = local.get %21
  local.set %17 %1962
  %1963 = local.get %27
  br.cond %1963 %BB:325 %BB:326

#pred = {%BB:325}
%BB:326:
  br %BB:327

#pred = {%BB:326, %BB:323}
%BB:327:
  %1964 = local.get %12
  %1965 = local.get %18
  %1966 = int.sub %1964 %1965
  %1967 = const i32 1
  %1968 = int.gt.s %1966 %1967
  br.cond %1968 %BB:331 %BB:328

#pred = {%BB:327}
%BB:328:
  %1969 = local.get %18
  %1970 = const i32 -1
  %1971 = int.add %1969 %1970
  local.set %17 %1971
  br %BB:329

#pred = {%BB:329, %BB:328}
%BB:329:
  %1972 = local.get %17
  %1973 = const i32 48
  memory.guard %memory:0 %1972 8
  store.8 %memory:0 %1972 %1973
  %1974 = local.get %12
  %1975 = local.get %17
  %1976 = int.sub %1974 %1975
  local.set %18 %1976
  %1977 = local.get %17
  %1978 = const i32 -1
  %1979 = int.add %1977 %1978
  local.set %21 %1979
  local.set %17 %1979
  %1980 = local.get %18
  %1981 = const i32 2
  %1982 = int.lt.s %1980 %1981
  br.cond %1982 %BB:329 %BB:330

#pred = {%BB:329}
%BB:330:
  %1983 = local.get %21
  %1984 = const i32 1
  %1985 = int.add %1983 %1984
  local.set %18 %1985
  br %BB:331

#pred = {%BB:330, %BB:327}
%BB:331:
  %1986 = local.get %18
  %1987 = const i32 -2
  %1988 = int.add %1986 %1987
  local.set %38 %1988
  %1989 = local.get %29
  memory.guard %memory:0 %1988 8
  store.8 %memory:0 %1988 %1989
  %1990 = const i32 -1
  local.set %17 %1990
  %1991 = local.get %18
  %1992 = const i32 -1
  %1993 = int.add %1991 %1992
  %1994 = const i32 45
  %1995 = const i32 43
  %1996 = local.get %20
  %1997 = const i32 0
  %1998 = int.lt.s %1996 %1997
  %1999 = select %1998 %1994 %1995
  memory.guard %memory:0 %1993 8
  store.8 %memory:0 %1993 %1999
  %2000 = local.get %12
  %2001 = local.get %38
  %2002 = int.sub %2000 %2001
  local.set %20 %2002
  %2003 = const i32 2147483647
  %2004 = local.get %36
  %2005 = int.sub %2003 %2004
  %2006 = int.gt.s %2002 %2005
  br.cond %2006 %BB:567 %BB:332

#pred = {%BB:331}
%BB:332:
  br %BB:333

#pred = {%BB:332, %BB:322}
%BB:333:
  %2007 = const i32 -1
  local.set %17 %2007
  %2008 = local.get %20
  %2009 = local.get %36
  %2010 = int.add %2008 %2009
  local.set %20 %2010
  %2011 = local.get %35
  %2012 = const i32 2147483647
  %2013 = int.xor %2011 %2012
  %2014 = int.gt.s %2010 %2013
  br.cond %2014 %BB:567 %BB:334

#pred = {%BB:333}
%BB:334:
  %2015 = local.get %20
  %2016 = local.get %35
  %2017 = int.add %2015 %2016
  local.set %29 %2017
  %2018 = local.get %23
  %2019 = const i32 73728
  %2020 = int.and %2018 %2019
  local.set %23 %2020
  br.cond %2020 %BB:344 %BB:335

#pred = {%BB:334}
%BB:335:
  %2021 = local.get %24
  %2022 = local.get %29
  %2023 = int.le.s %2021 %2022
  br.cond %2023 %BB:344 %BB:336

#pred = {%BB:335}
%BB:336:
  %2024 = local.get %5
  %2025 = const i32 64
  %2026 = int.add %2024 %2025
  %2027 = const i32 32
  %2028 = local.get %24
  %2029 = local.get %29
  %2030 = int.sub %2028 %2029
  local.set %17 %2030
  %2031 = const i32 256
  %2032 = local.get %17
  %2033 = const i32 256
  %2034 = int.lt.u %2032 %2033
  local.set %21 %2034
  %2035 = select %2034 %2030 %2031
  %2036 = call %function:97(%2026, %2027, %2035)
  %2037 = local.get (arg)%0
  memory.guard %memory:0 %2037 32
  %2038 = load.32 i32 %memory:0 %2037
  local.set %18 %2038
  %2039 = const i32 32
  %2040 = int.and %2038 %2039
  %2041 = int.eqz %2040
  local.set %20 %2041
  %2042 = local.get %21
  br.cond %2042 %BB:342 %BB:337

#pred = {%BB:336}
%BB:337:
  br %BB:338

#pred = {%BB:340, %BB:337}
%BB:338:
  %2043 = local.get %20
  %2044 = const i32 1
  %2045 = int.and %2043 %2044
  %2046 = int.eqz %2045
  br.cond %2046 %BB:340 %BB:339

#pred = {%BB:338}
%BB:339:
  %2047 = local.get %5
  %2048 = const i32 64
  %2049 = int.add %2047 %2048
  %2050 = const i32 256
  %2051 = local.get (arg)%0
  %2052 = call %function:72(%2049, %2050, %2051)
  %2053 = local.get (arg)%0
  memory.guard %memory:0 %2053 32
  %2054 = load.32 i32 %memory:0 %2053
  local.set %18 %2054
  br %BB:340

#pred = {%BB:339, %BB:338}
%BB:340:
  %2055 = local.get %18
  %2056 = const i32 32
  %2057 = int.and %2055 %2056
  %2058 = int.eqz %2057
  local.set %20 %2058
  %2059 = local.get %17
  %2060 = const i32 -256
  %2061 = int.add %2059 %2060
  local.set %17 %2061
  %2062 = const i32 255
  %2063 = int.gt.u %2061 %2062
  br.cond %2063 %BB:338 %BB:341

#pred = {%BB:340}
%BB:341:
  br %BB:342

#pred = {%BB:341, %BB:336}
%BB:342:
  %2064 = local.get %20
  %2065 = int.eqz %2064
  br.cond %2065 %BB:344 %BB:343

#pred = {%BB:342}
%BB:343:
  %2066 = local.get %5
  %2067 = const i32 64
  %2068 = int.add %2066 %2067
  %2069 = local.get %17
  %2070 = local.get (arg)%0
  %2071 = call %function:72(%2068, %2069, %2070)
  br %BB:344

#pred = {%BB:343, %BB:342, %BB:335, %BB:334}
%BB:344:
  %2072 = local.get (arg)%0
  memory.guard %memory:0 %2072 8
  %2073 = load.8 i32 %memory:0 %2072
  %2074 = const i32 32
  %2075 = int.and %2073 %2074
  br.cond %2075 %BB:346 %BB:345

#pred = {%BB:344}
%BB:345:
  %2076 = local.get %37
  %2077 = local.get %35
  %2078 = local.get (arg)%0
  %2079 = call %function:72(%2076, %2077, %2078)
  br %BB:346

#pred = {%BB:345, %BB:344}
%BB:346:
  %2080 = local.get %23
  %2081 = const i32 65536
  %2082 = int.ne %2080 %2081
  br.cond %2082 %BB:356 %BB:347

#pred = {%BB:346}
%BB:347:
  %2083 = local.get %24
  %2084 = local.get %29
  %2085 = int.le.s %2083 %2084
  br.cond %2085 %BB:356 %BB:348

#pred = {%BB:347}
%BB:348:
  %2086 = local.get %5
  %2087 = const i32 64
  %2088 = int.add %2086 %2087
  %2089 = const i32 48
  %2090 = local.get %24
  %2091 = local.get %29
  %2092 = int.sub %2090 %2091
  local.set %17 %2092
  %2093 = const i32 256
  %2094 = local.get %17
  %2095 = const i32 256
  %2096 = int.lt.u %2094 %2095
  local.set %21 %2096
  %2097 = select %2096 %2092 %2093
  %2098 = call %function:97(%2088, %2089, %2097)
  %2099 = local.get (arg)%0
  memory.guard %memory:0 %2099 32
  %2100 = load.32 i32 %memory:0 %2099
  local.set %18 %2100
  %2101 = const i32 32
  %2102 = int.and %2100 %2101
  %2103 = int.eqz %2102
  local.set %20 %2103
  %2104 = local.get %21
  br.cond %2104 %BB:354 %BB:349

#pred = {%BB:348}
%BB:349:
  br %BB:350

#pred = {%BB:352, %BB:349}
%BB:350:
  %2105 = local.get %20
  %2106 = const i32 1
  %2107 = int.and %2105 %2106
  %2108 = int.eqz %2107
  br.cond %2108 %BB:352 %BB:351

#pred = {%BB:350}
%BB:351:
  %2109 = local.get %5
  %2110 = const i32 64
  %2111 = int.add %2109 %2110
  %2112 = const i32 256
  %2113 = local.get (arg)%0
  %2114 = call %function:72(%2111, %2112, %2113)
  %2115 = local.get (arg)%0
  memory.guard %memory:0 %2115 32
  %2116 = load.32 i32 %memory:0 %2115
  local.set %18 %2116
  br %BB:352

#pred = {%BB:351, %BB:350}
%BB:352:
  %2117 = local.get %18
  %2118 = const i32 32
  %2119 = int.and %2117 %2118
  %2120 = int.eqz %2119
  local.set %20 %2120
  %2121 = local.get %17
  %2122 = const i32 -256
  %2123 = int.add %2121 %2122
  local.set %17 %2123
  %2124 = const i32 255
  %2125 = int.gt.u %2123 %2124
  br.cond %2125 %BB:350 %BB:353

#pred = {%BB:352}
%BB:353:
  br %BB:354

#pred = {%BB:353, %BB:348}
%BB:354:
  %2126 = local.get %20
  %2127 = int.eqz %2126
  br.cond %2127 %BB:356 %BB:355

#pred = {%BB:354}
%BB:355:
  %2128 = local.get %5
  %2129 = const i32 64
  %2130 = int.add %2128 %2129
  %2131 = local.get %17
  %2132 = local.get (arg)%0
  %2133 = call %function:72(%2130, %2131, %2132)
  br %BB:356

#pred = {%BB:355, %BB:354, %BB:347, %BB:346}
%BB:356:
  %2134 = local.get %40
  br.cond %2134 %BB:449 %BB:357

#pred = {%BB:356}
%BB:357:
  %2135 = local.get %30
  %2136 = local.get %19
  %2137 = local.get %19
  %2138 = local.get %30
  %2139 = int.gt.u %2137 %2138
  %2140 = select %2139 %2135 %2136
  local.set %27 %2140
  local.set %21 %2140
  br %BB:358

#pred = {%BB:372, %BB:357}
%BB:358:
  %2141 = local.get %21
  memory.guard %memory:0 %2141 32
  %2142 = load.32 i32 %memory:0 %2141
  local.set %17 %2142
  %2143 = int.eqz %2142
  br.cond %2143 %BB:366 %BB:359

#pred = {%BB:358}
%BB:359:
  %2144 = const i32 0
  local.set %19 %2144
  br %BB:360

#pred = {%BB:360, %BB:359}
%BB:360:
  %2145 = local.get %5
  %2146 = const i32 336
  %2147 = int.add %2145 %2146
  %2148 = local.get %19
  %2149 = int.add %2147 %2148
  %2150 = const i32 8
  %2151 = int.add %2149 %2150
  %2152 = local.get %17
  %2153 = local.get %17
  %2154 = const i32 10
  %2155 = int.div.u %2153 %2154
  local.set %20 %2155
  %2156 = const i32 10
  %2157 = int.mul %2155 %2156
  %2158 = int.sub %2152 %2157
  %2159 = const i32 48
  %2160 = int.or %2158 %2159
  memory.guard %memory:0 %2151 8
  store.8 %memory:0 %2151 %2160
  %2161 = local.get %19
  %2162 = const i32 -1
  %2163 = int.add %2161 %2162
  local.set %19 %2163
  %2164 = local.get %17
  %2165 = const i32 9
  %2166 = int.gt.u %2164 %2165
  local.set %18 %2166
  %2167 = local.get %20
  local.set %17 %2167
  %2168 = local.get %18
  br.cond %2168 %BB:360 %BB:361

#pred = {%BB:360}
%BB:361:
  %2169 = local.get %5
  %2170 = const i32 336
  %2171 = int.add %2169 %2170
  %2172 = local.get %19
  %2173 = int.add %2171 %2172
  %2174 = const i32 9
  %2175 = int.add %2173 %2174
  local.set %17 %2175
  %2176 = local.get %21
  %2177 = local.get %27
  %2178 = int.eq %2176 %2177
  br.cond %2178 %BB:364 %BB:362

#pred = {%BB:361}
%BB:362:
  %2179 = local.get %17
  %2180 = local.get %5
  %2181 = const i32 336
  %2182 = int.add %2180 %2181
  %2183 = int.le.u %2179 %2182
  br.cond %2183 %BB:370 %BB:363

#pred = {%BB:362}
%BB:363:
  br %BB:369

#pred = {%BB:361}
%BB:364:
  %2184 = local.get %19
  br.cond %2184 %BB:370 %BB:365

#pred = {%BB:364}
%BB:365:
  br %BB:368

#pred = {%BB:358}
%BB:366:
  %2185 = const i32 0
  local.set %19 %2185
  %2186 = local.get %8
  local.set %17 %2186
  %2187 = local.get %21
  %2188 = local.get %27
  %2189 = int.ne %2187 %2188
  br.cond %2189 %BB:369 %BB:367

#pred = {%BB:366}
%BB:367:
  br %BB:368

#pred = {%BB:367, %BB:365}
%BB:368:
  %2190 = local.get %17
  %2191 = const i32 -1
  %2192 = int.add %2190 %2191
  local.set %17 %2192
  %2193 = const i32 48
  memory.guard %memory:0 %2192 8
  store.8 %memory:0 %2192 %2193
  br %BB:370

#pred = {%BB:366, %BB:363}
%BB:369:
  %2194 = local.get %5
  %2195 = const i32 336
  %2196 = int.add %2194 %2195
  %2197 = const i32 48
  %2198 = local.get %19
  %2199 = const i32 9
  %2200 = int.add %2198 %2199
  %2201 = call %function:97(%2196, %2197, %2200)
  %2202 = local.get %5
  %2203 = const i32 336
  %2204 = int.add %2202 %2203
  local.set %17 %2204
  br %BB:370

#pred = {%BB:369, %BB:368, %BB:364, %BB:362}
%BB:370:
  %2205 = local.get (arg)%0
  memory.guard %memory:0 %2205 8
  %2206 = load.8 i32 %memory:0 %2205
  %2207 = const i32 32
  %2208 = int.and %2206 %2207
  br.cond %2208 %BB:372 %BB:371

#pred = {%BB:370}
%BB:371:
  %2209 = local.get %17
  %2210 = local.get %8
  %2211 = local.get %17
  %2212 = int.sub %2210 %2211
  %2213 = local.get (arg)%0
  %2214 = call %function:72(%2209, %2212, %2213)
  br %BB:372

#pred = {%BB:371, %BB:370}
%BB:372:
  %2215 = local.get %21
  %2216 = const i32 4
  %2217 = int.add %2215 %2216
  local.set %21 %2217
  %2218 = local.get %30
  %2219 = int.le.u %2217 %2218
  br.cond %2219 %BB:358 %BB:373

#pred = {%BB:372}
%BB:373:
  %2220 = local.get %25
  %2221 = int.eqz %2220
  br.cond %2221 %BB:376 %BB:374

#pred = {%BB:373}
%BB:374:
  %2222 = local.get (arg)%0
  memory.guard %memory:0 %2222 8
  %2223 = load.8 i32 %memory:0 %2222
  %2224 = const i32 32
  %2225 = int.and %2223 %2224
  br.cond %2225 %BB:376 %BB:375

#pred = {%BB:374}
%BB:375:
  %2226 = const i32 68915
  %2227 = const i32 1
  %2228 = local.get (arg)%0
  %2229 = call %function:72(%2226, %2227, %2228)
  br %BB:376

#pred = {%BB:375, %BB:374, %BB:373}
%BB:376:
  %2230 = local.get %28
  %2231 = const i32 1
  %2232 = int.ge.s %2230 %2231
  br.cond %2232 %BB:378 %BB:377

#pred = {%BB:376}
%BB:377:
  %2233 = local.get %28
  local.set %17 %2233
  br %BB:394

#pred = {%BB:376}
%BB:378:
  %2234 = local.get %21
  %2235 = local.get %22
  %2236 = int.lt.u %2234 %2235
  br.cond %2236 %BB:380 %BB:379

#pred = {%BB:378}
%BB:379:
  %2237 = local.get %28
  local.set %17 %2237
  br %BB:394

#pred = {%BB:378}
%BB:380:
  br %BB:381

#pred = {%BB:392, %BB:380}
%BB:381:
  %2238 = local.get %8
  local.set %17 %2238
  %2239 = local.get %21
  memory.guard %memory:0 %2239 32
  %2240 = load.32 i32 %memory:0 %2239
  local.set %19 %2240
  %2241 = int.eqz %2240
  br.cond %2241 %BB:386 %BB:382

#pred = {%BB:381}
%BB:382:
  %2242 = local.get %8
  local.set %17 %2242
  br %BB:383

#pred = {%BB:383, %BB:382}
%BB:383:
  %2243 = local.get %17
  %2244 = const i32 -1
  %2245 = int.add %2243 %2244
  local.set %17 %2245
  %2246 = local.get %19
  %2247 = local.get %19
  %2248 = const i32 10
  %2249 = int.div.u %2247 %2248
  local.set %20 %2249
  %2250 = const i32 10
  %2251 = int.mul %2249 %2250
  %2252 = int.sub %2246 %2251
  %2253 = const i32 48
  %2254 = int.or %2252 %2253
  memory.guard %memory:0 %2245 8
  store.8 %memory:0 %2245 %2254
  %2255 = local.get %19
  %2256 = const i32 9
  %2257 = int.gt.u %2255 %2256
  local.set %18 %2257
  %2258 = local.get %20
  local.set %19 %2258
  %2259 = local.get %18
  br.cond %2259 %BB:383 %BB:384

#pred = {%BB:383}
%BB:384:
  %2260 = local.get %17
  %2261 = local.get %5
  %2262 = const i32 336
  %2263 = int.add %2261 %2262
  %2264 = int.le.u %2260 %2263
  br.cond %2264 %BB:389 %BB:385

#pred = {%BB:384}
%BB:385:
  br %BB:386

#pred = {%BB:385, %BB:381}
%BB:386:
  %2265 = local.get %5
  %2266 = const i32 336
  %2267 = int.add %2265 %2266
  %2268 = const i32 48
  %2269 = local.get %17
  %2270 = local.get %13
  %2271 = int.add %2269 %2270
  %2272 = call %function:97(%2267, %2268, %2271)
  br %BB:387

#pred = {%BB:387, %BB:386}
%BB:387:
  %2273 = local.get %17
  %2274 = const i32 -1
  %2275 = int.add %2273 %2274
  local.set %17 %2275
  %2276 = local.get %5
  %2277 = const i32 336
  %2278 = int.add %2276 %2277
  %2279 = int.gt.u %2275 %2278
  br.cond %2279 %BB:387 %BB:388

#pred = {%BB:387}
%BB:388:
  br %BB:389

#pred = {%BB:388, %BB:384}
%BB:389:
  %2280 = local.get (arg)%0
  memory.guard %memory:0 %2280 8
  %2281 = load.8 i32 %memory:0 %2280
  %2282 = const i32 32
  %2283 = int.and %2281 %2282
  br.cond %2283 %BB:391 %BB:390

#pred = {%BB:389}
%BB:390:
  %2284 = local.get %17
  %2285 = local.get %28
  %2286 = const i32 9
  %2287 = local.get %28
  %2288 = const i32 9
  %2289 = int.lt.s %2287 %2288
  %2290 = select %2289 %2285 %2286
  %2291 = local.get (arg)%0
  %2292 = call %function:72(%2284, %2290, %2291)
  br %BB:391

#pred = {%BB:390, %BB:389}
%BB:391:
  %2293 = local.get %28
  %2294 = const i32 -9
  %2295 = int.add %2293 %2294
  local.set %17 %2295
  %2296 = local.get %28
  %2297 = const i32 10
  %2298 = int.lt.s %2296 %2297
  br.cond %2298 %BB:394 %BB:392

#pred = {%BB:391}
%BB:392:
  %2299 = local.get %17
  local.set %28 %2299
  %2300 = local.get %21
  %2301 = const i32 4
  %2302 = int.add %2300 %2301
  local.set %21 %2302
  %2303 = local.get %22
  %2304 = int.lt.u %2302 %2303
  br.cond %2304 %BB:381 %BB:393

#pred = {%BB:392}
%BB:393:
  br %BB:394

#pred = {%BB:393, %BB:391, %BB:379, %BB:377}
%BB:394:
  %2305 = local.get %17
  %2306 = const i32 1
  %2307 = int.lt.s %2305 %2306
  br.cond %2307 %BB:485 %BB:395

#pred = {%BB:394}
%BB:395:
  %2308 = local.get %5
  %2309 = const i32 64
  %2310 = int.add %2308 %2309
  %2311 = const i32 48
  %2312 = local.get %17
  %2313 = const i32 256
  %2314 = local.get %17
  %2315 = const i32 256
  %2316 = int.lt.u %2314 %2315
  local.set %18 %2316
  %2317 = select %2316 %2312 %2313
  %2318 = call %function:97(%2310, %2311, %2317)
  %2319 = local.get (arg)%0
  memory.guard %memory:0 %2319 32
  %2320 = load.32 i32 %memory:0 %2319
  local.set %20 %2320
  %2321 = const i32 32
  %2322 = int.and %2320 %2321
  %2323 = int.eqz %2322
  local.set %19 %2323
  %2324 = local.get %18
  br.cond %2324 %BB:401 %BB:396

#pred = {%BB:395}
%BB:396:
  br %BB:397

#pred = {%BB:399, %BB:396}
%BB:397:
  %2325 = local.get %19
  %2326 = const i32 1
  %2327 = int.and %2325 %2326
  %2328 = int.eqz %2327
  br.cond %2328 %BB:399 %BB:398

#pred = {%BB:397}
%BB:398:
  %2329 = local.get %5
  %2330 = const i32 64
  %2331 = int.add %2329 %2330
  %2332 = const i32 256
  %2333 = local.get (arg)%0
  %2334 = call %function:72(%2331, %2332, %2333)
  %2335 = local.get (arg)%0
  memory.guard %memory:0 %2335 32
  %2336 = load.32 i32 %memory:0 %2335
  local.set %20 %2336
  br %BB:399

#pred = {%BB:398, %BB:397}
%BB:399:
  %2337 = local.get %20
  %2338 = const i32 32
  %2339 = int.and %2337 %2338
  %2340 = int.eqz %2339
  local.set %19 %2340
  %2341 = local.get %17
  %2342 = const i32 -256
  %2343 = int.add %2341 %2342
  local.set %17 %2343
  %2344 = const i32 255
  %2345 = int.gt.u %2343 %2344
  br.cond %2345 %BB:397 %BB:400

#pred = {%BB:399}
%BB:400:
  br %BB:401

#pred = {%BB:400, %BB:395}
%BB:401:
  %2346 = local.get %19
  %2347 = int.eqz %2346
  br.cond %2347 %BB:485 %BB:402

#pred = {%BB:401}
%BB:402:
  %2348 = local.get %5
  %2349 = const i32 64
  %2350 = int.add %2348 %2349
  %2351 = local.get %17
  %2352 = local.get (arg)%0
  %2353 = call %function:72(%2350, %2351, %2352)
  br %BB:485

#pred = {%BB:106}
%BB:403:
  %2354 = const i32 0
  local.set %30 %2354
  %2355 = const i32 68234
  local.set %31 %2355
  %2356 = local.get %14
  local.set %17 %2356
  %2357 = local.get %23
  local.set %28 %2357
  %2358 = local.get %21
  local.set %27 %2358
  br %BB:404

#pred = {%BB:151, %BB:155, %BB:154, %BB:149, %BB:403, %BB:150}
%BB:404:
  %2359 = local.get %17
  %2360 = local.get %18
  %2361 = int.sub %2359 %2360
  local.set %26 %2361
  %2362 = local.get %27
  %2363 = local.get %27
  %2364 = local.get %26
  %2365 = int.lt.s %2363 %2364
  %2366 = select %2365 %2361 %2362
  local.set %23 %2366
  %2367 = const i32 2147483647
  %2368 = local.get %30
  %2369 = int.sub %2367 %2368
  %2370 = int.gt.s %2366 %2369
  br.cond %2370 %BB:569 %BB:405

#pred = {%BB:404}
%BB:405:
  %2371 = local.get %30
  %2372 = local.get %23
  %2373 = int.add %2371 %2372
  local.set %21 %2373
  %2374 = local.get %24
  %2375 = local.get %24
  %2376 = local.get %21
  %2377 = int.lt.s %2375 %2376
  %2378 = select %2377 %2373 %2374
  local.set %17 %2378
  %2379 = local.get %20
  %2380 = int.gt.s %2378 %2379
  br.cond %2380 %BB:569 %BB:406

#pred = {%BB:405}
%BB:406:
  %2381 = local.get %28
  %2382 = const i32 73728
  %2383 = int.and %2381 %2382
  local.set %25 %2383
  br.cond %2383 %BB:416 %BB:407

#pred = {%BB:406}
%BB:407:
  %2384 = local.get %21
  %2385 = local.get %24
  %2386 = int.ge.s %2384 %2385
  br.cond %2386 %BB:416 %BB:408

#pred = {%BB:407}
%BB:408:
  %2387 = local.get %5
  %2388 = const i32 64
  %2389 = int.add %2387 %2388
  %2390 = const i32 32
  %2391 = local.get %17
  %2392 = local.get %21
  %2393 = int.sub %2391 %2392
  local.set %19 %2393
  %2394 = const i32 256
  %2395 = local.get %19
  %2396 = const i32 256
  %2397 = int.lt.u %2395 %2396
  local.set %28 %2397
  %2398 = select %2397 %2393 %2394
  %2399 = call %function:97(%2389, %2390, %2398)
  %2400 = local.get (arg)%0
  memory.guard %memory:0 %2400 32
  %2401 = load.32 i32 %memory:0 %2400
  local.set %22 %2401
  %2402 = const i32 32
  %2403 = int.and %2401 %2402
  %2404 = int.eqz %2403
  local.set %20 %2404
  %2405 = local.get %28
  br.cond %2405 %BB:414 %BB:409

#pred = {%BB:408}
%BB:409:
  br %BB:410

#pred = {%BB:412, %BB:409}
%BB:410:
  %2406 = local.get %20
  %2407 = const i32 1
  %2408 = int.and %2406 %2407
  %2409 = int.eqz %2408
  br.cond %2409 %BB:412 %BB:411

#pred = {%BB:410}
%BB:411:
  %2410 = local.get %5
  %2411 = const i32 64
  %2412 = int.add %2410 %2411
  %2413 = const i32 256
  %2414 = local.get (arg)%0
  %2415 = call %function:72(%2412, %2413, %2414)
  %2416 = local.get (arg)%0
  memory.guard %memory:0 %2416 32
  %2417 = load.32 i32 %memory:0 %2416
  local.set %22 %2417
  br %BB:412

#pred = {%BB:411, %BB:410}
%BB:412:
  %2418 = local.get %22
  %2419 = const i32 32
  %2420 = int.and %2418 %2419
  %2421 = int.eqz %2420
  local.set %20 %2421
  %2422 = local.get %19
  %2423 = const i32 -256
  %2424 = int.add %2422 %2423
  local.set %19 %2424
  %2425 = const i32 255
  %2426 = int.gt.u %2424 %2425
  br.cond %2426 %BB:410 %BB:413

#pred = {%BB:412}
%BB:413:
  br %BB:414

#pred = {%BB:413, %BB:408}
%BB:414:
  %2427 = local.get %20
  %2428 = int.eqz %2427
  br.cond %2428 %BB:416 %BB:415

#pred = {%BB:414}
%BB:415:
  %2429 = local.get %5
  %2430 = const i32 64
  %2431 = int.add %2429 %2430
  %2432 = local.get %19
  %2433 = local.get (arg)%0
  %2434 = call %function:72(%2431, %2432, %2433)
  br %BB:416

#pred = {%BB:415, %BB:414, %BB:407, %BB:406}
%BB:416:
  %2435 = local.get (arg)%0
  memory.guard %memory:0 %2435 8
  %2436 = load.8 i32 %memory:0 %2435
  %2437 = const i32 32
  %2438 = int.and %2436 %2437
  br.cond %2438 %BB:418 %BB:417

#pred = {%BB:416}
%BB:417:
  %2439 = local.get %31
  %2440 = local.get %30
  %2441 = local.get (arg)%0
  %2442 = call %function:72(%2439, %2440, %2441)
  br %BB:418

#pred = {%BB:417, %BB:416}
%BB:418:
  %2443 = local.get %25
  %2444 = const i32 65536
  %2445 = int.ne %2443 %2444
  br.cond %2445 %BB:428 %BB:419

#pred = {%BB:418}
%BB:419:
  %2446 = local.get %21
  %2447 = local.get %24
  %2448 = int.ge.s %2446 %2447
  br.cond %2448 %BB:428 %BB:420

#pred = {%BB:419}
%BB:420:
  %2449 = local.get %5
  %2450 = const i32 64
  %2451 = int.add %2449 %2450
  %2452 = const i32 48
  %2453 = local.get %17
  %2454 = local.get %21
  %2455 = int.sub %2453 %2454
  local.set %19 %2455
  %2456 = const i32 256
  %2457 = local.get %19
  %2458 = const i32 256
  %2459 = int.lt.u %2457 %2458
  local.set %28 %2459
  %2460 = select %2459 %2455 %2456
  %2461 = call %function:97(%2451, %2452, %2460)
  %2462 = local.get (arg)%0
  memory.guard %memory:0 %2462 32
  %2463 = load.32 i32 %memory:0 %2462
  local.set %22 %2463
  %2464 = const i32 32
  %2465 = int.and %2463 %2464
  %2466 = int.eqz %2465
  local.set %20 %2466
  %2467 = local.get %28
  br.cond %2467 %BB:426 %BB:421

#pred = {%BB:420}
%BB:421:
  br %BB:422

#pred = {%BB:424, %BB:421}
%BB:422:
  %2468 = local.get %20
  %2469 = const i32 1
  %2470 = int.and %2468 %2469
  %2471 = int.eqz %2470
  br.cond %2471 %BB:424 %BB:423

#pred = {%BB:422}
%BB:423:
  %2472 = local.get %5
  %2473 = const i32 64
  %2474 = int.add %2472 %2473
  %2475 = const i32 256
  %2476 = local.get (arg)%0
  %2477 = call %function:72(%2474, %2475, %2476)
  %2478 = local.get (arg)%0
  memory.guard %memory:0 %2478 32
  %2479 = load.32 i32 %memory:0 %2478
  local.set %22 %2479
  br %BB:424

#pred = {%BB:423, %BB:422}
%BB:424:
  %2480 = local.get %22
  %2481 = const i32 32
  %2482 = int.and %2480 %2481
  %2483 = int.eqz %2482
  local.set %20 %2483
  %2484 = local.get %19
  %2485 = const i32 -256
  %2486 = int.add %2484 %2485
  local.set %19 %2486
  %2487 = const i32 255
  %2488 = int.gt.u %2486 %2487
  br.cond %2488 %BB:422 %BB:425

#pred = {%BB:424}
%BB:425:
  br %BB:426

#pred = {%BB:425, %BB:420}
%BB:426:
  %2489 = local.get %20
  %2490 = int.eqz %2489
  br.cond %2490 %BB:428 %BB:427

#pred = {%BB:426}
%BB:427:
  %2491 = local.get %5
  %2492 = const i32 64
  %2493 = int.add %2491 %2492
  %2494 = local.get %19
  %2495 = local.get (arg)%0
  %2496 = call %function:72(%2493, %2494, %2495)
  br %BB:428

#pred = {%BB:427, %BB:426, %BB:419, %BB:418}
%BB:428:
  %2497 = local.get %26
  %2498 = local.get %27
  %2499 = int.ge.s %2497 %2498
  br.cond %2499 %BB:437 %BB:429

#pred = {%BB:428}
%BB:429:
  %2500 = local.get %5
  %2501 = const i32 64
  %2502 = int.add %2500 %2501
  %2503 = const i32 48
  %2504 = local.get %23
  %2505 = local.get %26
  %2506 = int.sub %2504 %2505
  local.set %19 %2506
  %2507 = const i32 256
  %2508 = local.get %19
  %2509 = const i32 256
  %2510 = int.lt.u %2508 %2509
  local.set %27 %2510
  %2511 = select %2510 %2506 %2507
  %2512 = call %function:97(%2502, %2503, %2511)
  %2513 = local.get (arg)%0
  memory.guard %memory:0 %2513 32
  %2514 = load.32 i32 %memory:0 %2513
  local.set %22 %2514
  %2515 = const i32 32
  %2516 = int.and %2514 %2515
  %2517 = int.eqz %2516
  local.set %20 %2517
  %2518 = local.get %27
  br.cond %2518 %BB:435 %BB:430

#pred = {%BB:429}
%BB:430:
  br %BB:431

#pred = {%BB:433, %BB:430}
%BB:431:
  %2519 = local.get %20
  %2520 = const i32 1
  %2521 = int.and %2519 %2520
  %2522 = int.eqz %2521
  br.cond %2522 %BB:433 %BB:432

#pred = {%BB:431}
%BB:432:
  %2523 = local.get %5
  %2524 = const i32 64
  %2525 = int.add %2523 %2524
  %2526 = const i32 256
  %2527 = local.get (arg)%0
  %2528 = call %function:72(%2525, %2526, %2527)
  %2529 = local.get (arg)%0
  memory.guard %memory:0 %2529 32
  %2530 = load.32 i32 %memory:0 %2529
  local.set %22 %2530
  br %BB:433

#pred = {%BB:432, %BB:431}
%BB:433:
  %2531 = local.get %22
  %2532 = const i32 32
  %2533 = int.and %2531 %2532
  %2534 = int.eqz %2533
  local.set %20 %2534
  %2535 = local.get %19
  %2536 = const i32 -256
  %2537 = int.add %2535 %2536
  local.set %19 %2537
  %2538 = const i32 255
  %2539 = int.gt.u %2537 %2538
  br.cond %2539 %BB:431 %BB:434

#pred = {%BB:433}
%BB:434:
  br %BB:435

#pred = {%BB:434, %BB:429}
%BB:435:
  %2540 = local.get %20
  %2541 = int.eqz %2540
  br.cond %2541 %BB:437 %BB:436

#pred = {%BB:435}
%BB:436:
  %2542 = local.get %5
  %2543 = const i32 64
  %2544 = int.add %2542 %2543
  %2545 = local.get %19
  %2546 = local.get (arg)%0
  %2547 = call %function:72(%2544, %2545, %2546)
  br %BB:437

#pred = {%BB:436, %BB:435, %BB:428}
%BB:437:
  %2548 = local.get (arg)%0
  memory.guard %memory:0 %2548 8
  %2549 = load.8 i32 %memory:0 %2548
  %2550 = const i32 32
  %2551 = int.and %2549 %2550
  br.cond %2551 %BB:439 %BB:438

#pred = {%BB:437}
%BB:438:
  %2552 = local.get %18
  %2553 = local.get %26
  %2554 = local.get (arg)%0
  %2555 = call %function:72(%2552, %2553, %2554)
  br %BB:439

#pred = {%BB:438, %BB:437}
%BB:439:
  %2556 = local.get %25
  %2557 = const i32 8192
  %2558 = int.ne %2556 %2557
  br.cond %2558 %BB:0 %BB:440

#pred = {%BB:439}
%BB:440:
  %2559 = local.get %21
  %2560 = local.get %24
  %2561 = int.ge.s %2559 %2560
  br.cond %2561 %BB:0 %BB:441

#pred = {%BB:440}
%BB:441:
  %2562 = local.get %5
  %2563 = const i32 64
  %2564 = int.add %2562 %2563
  %2565 = const i32 32
  %2566 = local.get %17
  %2567 = local.get %21
  %2568 = int.sub %2566 %2567
  local.set %19 %2568
  %2569 = const i32 256
  %2570 = local.get %19
  %2571 = const i32 256
  %2572 = int.lt.u %2570 %2571
  local.set %22 %2572
  %2573 = select %2572 %2568 %2569
  %2574 = call %function:97(%2564, %2565, %2573)
  %2575 = local.get (arg)%0
  memory.guard %memory:0 %2575 32
  %2576 = load.32 i32 %memory:0 %2575
  local.set %18 %2576
  %2577 = const i32 32
  %2578 = int.and %2576 %2577
  %2579 = int.eqz %2578
  local.set %20 %2579
  %2580 = local.get %22
  br.cond %2580 %BB:447 %BB:442

#pred = {%BB:441}
%BB:442:
  br %BB:443

#pred = {%BB:445, %BB:442}
%BB:443:
  %2581 = local.get %20
  %2582 = const i32 1
  %2583 = int.and %2581 %2582
  %2584 = int.eqz %2583
  br.cond %2584 %BB:445 %BB:444

#pred = {%BB:443}
%BB:444:
  %2585 = local.get %5
  %2586 = const i32 64
  %2587 = int.add %2585 %2586
  %2588 = const i32 256
  %2589 = local.get (arg)%0
  %2590 = call %function:72(%2587, %2588, %2589)
  %2591 = local.get (arg)%0
  memory.guard %memory:0 %2591 32
  %2592 = load.32 i32 %memory:0 %2591
  local.set %18 %2592
  br %BB:445

#pred = {%BB:444, %BB:443}
%BB:445:
  %2593 = local.get %18
  %2594 = const i32 32
  %2595 = int.and %2593 %2594
  %2596 = int.eqz %2595
  local.set %20 %2596
  %2597 = local.get %19
  %2598 = const i32 -256
  %2599 = int.add %2597 %2598
  local.set %19 %2599
  %2600 = const i32 255
  %2601 = int.gt.u %2599 %2600
  br.cond %2601 %BB:443 %BB:446

#pred = {%BB:445}
%BB:446:
  br %BB:447

#pred = {%BB:446, %BB:441}
%BB:447:
  %2602 = local.get %20
  %2603 = int.eqz %2602
  br.cond %2603 %BB:0 %BB:448

#pred = {%BB:447}
%BB:448:
  %2604 = local.get %5
  %2605 = const i32 64
  %2606 = int.add %2604 %2605
  %2607 = local.get %19
  %2608 = local.get (arg)%0
  %2609 = call %function:72(%2606, %2607, %2608)
  br %BB:0

#pred = {%BB:356}
%BB:449:
  %2610 = local.get %28
  %2611 = const i32 0
  %2612 = int.lt.s %2610 %2611
  br.cond %2612 %BB:483 %BB:450

#pred = {%BB:449}
%BB:450:
  %2613 = local.get %22
  %2614 = local.get %19
  %2615 = const i32 4
  %2616 = int.add %2614 %2615
  %2617 = local.get %31
  %2618 = select %2617 %2613 %2616
  local.set %27 %2618
  %2619 = local.get %19
  local.set %21 %2619
  br %BB:451

#pred = {%BB:472, %BB:450}
%BB:451:
  %2620 = local.get %8
  local.set %18 %2620
  %2621 = local.get %21
  memory.guard %memory:0 %2621 32
  %2622 = load.32 i32 %memory:0 %2621
  local.set %17 %2622
  %2623 = int.eqz %2622
  br.cond %2623 %BB:456 %BB:452

#pred = {%BB:451}
%BB:452:
  %2624 = const i32 0
  local.set %20 %2624
  br %BB:453

#pred = {%BB:453, %BB:452}
%BB:453:
  %2625 = local.get %5
  %2626 = const i32 336
  %2627 = int.add %2625 %2626
  %2628 = local.get %20
  %2629 = int.add %2627 %2628
  %2630 = const i32 8
  %2631 = int.add %2629 %2630
  %2632 = local.get %17
  %2633 = local.get %17
  %2634 = const i32 10
  %2635 = int.div.u %2633 %2634
  local.set %18 %2635
  %2636 = const i32 10
  %2637 = int.mul %2635 %2636
  %2638 = int.sub %2632 %2637
  %2639 = const i32 48
  %2640 = int.or %2638 %2639
  memory.guard %memory:0 %2631 8
  store.8 %memory:0 %2631 %2640
  %2641 = local.get %20
  %2642 = const i32 -1
  %2643 = int.add %2641 %2642
  local.set %20 %2643
  %2644 = local.get %17
  %2645 = const i32 9
  %2646 = int.gt.u %2644 %2645
  local.set %22 %2646
  %2647 = local.get %18
  local.set %17 %2647
  %2648 = local.get %22
  br.cond %2648 %BB:453 %BB:454

#pred = {%BB:453}
%BB:454:
  %2649 = local.get %5
  %2650 = const i32 336
  %2651 = int.add %2649 %2650
  %2652 = local.get %20
  %2653 = int.add %2651 %2652
  %2654 = const i32 9
  %2655 = int.add %2653 %2654
  local.set %18 %2655
  %2656 = local.get %20
  br.cond %2656 %BB:457 %BB:455

#pred = {%BB:454}
%BB:455:
  br %BB:456

#pred = {%BB:455, %BB:451}
%BB:456:
  %2657 = local.get %18
  %2658 = const i32 -1
  %2659 = int.add %2657 %2658
  local.set %18 %2659
  %2660 = const i32 48
  memory.guard %memory:0 %2659 8
  store.8 %memory:0 %2659 %2660
  br %BB:457

#pred = {%BB:456, %BB:454}
%BB:457:
  %2661 = local.get %21
  %2662 = local.get %19
  %2663 = int.eq %2661 %2662
  br.cond %2663 %BB:462 %BB:458

#pred = {%BB:457}
%BB:458:
  %2664 = local.get %18
  %2665 = local.get %5
  %2666 = const i32 336
  %2667 = int.add %2665 %2666
  %2668 = int.le.u %2664 %2667
  br.cond %2668 %BB:469 %BB:459

#pred = {%BB:458}
%BB:459:
  %2669 = local.get %5
  %2670 = const i32 336
  %2671 = int.add %2669 %2670
  %2672 = const i32 48
  %2673 = local.get %18
  %2674 = local.get %13
  %2675 = int.add %2673 %2674
  %2676 = call %function:97(%2671, %2672, %2675)
  br %BB:460

#pred = {%BB:460, %BB:459}
%BB:460:
  %2677 = local.get %18
  %2678 = const i32 -1
  %2679 = int.add %2677 %2678
  local.set %18 %2679
  %2680 = local.get %5
  %2681 = const i32 336
  %2682 = int.add %2680 %2681
  %2683 = int.gt.u %2679 %2682
  br.cond %2683 %BB:460 %BB:461

#pred = {%BB:460}
%BB:461:
  br %BB:469

#pred = {%BB:457}
%BB:462:
  %2684 = local.get (arg)%0
  memory.guard %memory:0 %2684 8
  %2685 = load.8 i32 %memory:0 %2684
  %2686 = const i32 32
  %2687 = int.and %2685 %2686
  br.cond %2687 %BB:464 %BB:463

#pred = {%BB:462}
%BB:463:
  %2688 = local.get %18
  %2689 = const i32 1
  %2690 = local.get (arg)%0
  %2691 = call %function:72(%2688, %2689, %2690)
  br %BB:464

#pred = {%BB:463, %BB:462}
%BB:464:
  %2692 = local.get %18
  %2693 = const i32 1
  %2694 = int.add %2692 %2693
  local.set %18 %2694
  %2695 = local.get %26
  br.cond %2695 %BB:467 %BB:465

#pred = {%BB:464}
%BB:465:
  %2696 = local.get %28
  %2697 = const i32 1
  %2698 = int.lt.s %2696 %2697
  br.cond %2698 %BB:469 %BB:466

#pred = {%BB:465}
%BB:466:
  br %BB:467

#pred = {%BB:466, %BB:464}
%BB:467:
  %2699 = local.get (arg)%0
  memory.guard %memory:0 %2699 8
  %2700 = load.8 i32 %memory:0 %2699
  %2701 = const i32 32
  %2702 = int.and %2700 %2701
  br.cond %2702 %BB:469 %BB:468

#pred = {%BB:467}
%BB:468:
  %2703 = const i32 68915
  %2704 = const i32 1
  %2705 = local.get (arg)%0
  %2706 = call %function:72(%2703, %2704, %2705)
  br %BB:469

#pred = {%BB:465, %BB:468, %BB:467, %BB:458, %BB:461}
%BB:469:
  %2707 = local.get %8
  %2708 = local.get %18
  %2709 = int.sub %2707 %2708
  local.set %17 %2709
  %2710 = local.get (arg)%0
  memory.guard %memory:0 %2710 8
  %2711 = load.8 i32 %memory:0 %2710
  %2712 = const i32 32
  %2713 = int.and %2711 %2712
  br.cond %2713 %BB:471 %BB:470

#pred = {%BB:469}
%BB:470:
  %2714 = local.get %18
  %2715 = local.get %17
  %2716 = local.get %28
  %2717 = local.get %28
  %2718 = local.get %17
  %2719 = int.gt.s %2717 %2718
  %2720 = select %2719 %2715 %2716
  %2721 = local.get (arg)%0
  %2722 = call %function:72(%2714, %2720, %2721)
  br %BB:471

#pred = {%BB:470, %BB:469}
%BB:471:
  %2723 = local.get %28
  %2724 = local.get %17
  %2725 = int.sub %2723 %2724
  local.set %28 %2725
  %2726 = local.get %21
  %2727 = const i32 4
  %2728 = int.add %2726 %2727
  local.set %21 %2728
  %2729 = local.get %27
  %2730 = int.ge.u %2728 %2729
  br.cond %2730 %BB:474 %BB:472

#pred = {%BB:471}
%BB:472:
  %2731 = local.get %28
  %2732 = const i32 -1
  %2733 = int.gt.s %2731 %2732
  br.cond %2733 %BB:451 %BB:473

#pred = {%BB:472}
%BB:473:
  br %BB:474

#pred = {%BB:473, %BB:471}
%BB:474:
  %2734 = local.get %28
  %2735 = const i32 1
  %2736 = int.lt.s %2734 %2735
  br.cond %2736 %BB:483 %BB:475

#pred = {%BB:474}
%BB:475:
  %2737 = local.get %5
  %2738 = const i32 64
  %2739 = int.add %2737 %2738
  %2740 = const i32 48
  %2741 = local.get %28
  %2742 = const i32 256
  %2743 = local.get %28
  %2744 = const i32 256
  %2745 = int.lt.u %2743 %2744
  local.set %20 %2745
  %2746 = select %2745 %2741 %2742
  %2747 = call %function:97(%2739, %2740, %2746)
  %2748 = local.get (arg)%0
  memory.guard %memory:0 %2748 32
  %2749 = load.32 i32 %memory:0 %2748
  local.set %19 %2749
  %2750 = const i32 32
  %2751 = int.and %2749 %2750
  %2752 = int.eqz %2751
  local.set %17 %2752
  %2753 = local.get %20
  br.cond %2753 %BB:481 %BB:476

#pred = {%BB:475}
%BB:476:
  br %BB:477

#pred = {%BB:479, %BB:476}
%BB:477:
  %2754 = local.get %17
  %2755 = const i32 1
  %2756 = int.and %2754 %2755
  %2757 = int.eqz %2756
  br.cond %2757 %BB:479 %BB:478

#pred = {%BB:477}
%BB:478:
  %2758 = local.get %5
  %2759 = const i32 64
  %2760 = int.add %2758 %2759
  %2761 = const i32 256
  %2762 = local.get (arg)%0
  %2763 = call %function:72(%2760, %2761, %2762)
  %2764 = local.get (arg)%0
  memory.guard %memory:0 %2764 32
  %2765 = load.32 i32 %memory:0 %2764
  local.set %19 %2765
  br %BB:479

#pred = {%BB:478, %BB:477}
%BB:479:
  %2766 = local.get %19
  %2767 = const i32 32
  %2768 = int.and %2766 %2767
  %2769 = int.eqz %2768
  local.set %17 %2769
  %2770 = local.get %28
  %2771 = const i32 -256
  %2772 = int.add %2770 %2771
  local.set %28 %2772
  %2773 = const i32 255
  %2774 = int.gt.u %2772 %2773
  br.cond %2774 %BB:477 %BB:480

#pred = {%BB:479}
%BB:480:
  br %BB:481

#pred = {%BB:480, %BB:475}
%BB:481:
  %2775 = local.get %17
  %2776 = int.eqz %2775
  br.cond %2776 %BB:483 %BB:482

#pred = {%BB:481}
%BB:482:
  %2777 = local.get %5
  %2778 = const i32 64
  %2779 = int.add %2777 %2778
  %2780 = local.get %28
  %2781 = local.get (arg)%0
  %2782 = call %function:72(%2779, %2780, %2781)
  br %BB:483

#pred = {%BB:482, %BB:481, %BB:474, %BB:449}
%BB:483:
  %2783 = local.get (arg)%0
  memory.guard %memory:0 %2783 8
  %2784 = load.8 i32 %memory:0 %2783
  %2785 = const i32 32
  %2786 = int.and %2784 %2785
  br.cond %2786 %BB:485 %BB:484

#pred = {%BB:483}
%BB:484:
  %2787 = local.get %38
  %2788 = local.get %12
  %2789 = local.get %38
  %2790 = int.sub %2788 %2789
  %2791 = local.get (arg)%0
  %2792 = call %function:72(%2787, %2790, %2791)
  br %BB:485

#pred = {%BB:402, %BB:394, %BB:401, %BB:484, %BB:483}
%BB:485:
  %2793 = local.get %23
  %2794 = const i32 8192
  %2795 = int.ne %2793 %2794
  br.cond %2795 %BB:495 %BB:486

#pred = {%BB:485}
%BB:486:
  %2796 = local.get %24
  %2797 = local.get %29
  %2798 = int.le.s %2796 %2797
  br.cond %2798 %BB:495 %BB:487

#pred = {%BB:486}
%BB:487:
  %2799 = local.get %5
  %2800 = const i32 64
  %2801 = int.add %2799 %2800
  %2802 = const i32 32
  %2803 = local.get %24
  %2804 = local.get %29
  %2805 = int.sub %2803 %2804
  local.set %17 %2805
  %2806 = const i32 256
  %2807 = local.get %17
  %2808 = const i32 256
  %2809 = int.lt.u %2807 %2808
  local.set %18 %2809
  %2810 = select %2809 %2805 %2806
  %2811 = call %function:97(%2801, %2802, %2810)
  %2812 = local.get (arg)%0
  memory.guard %memory:0 %2812 32
  %2813 = load.32 i32 %memory:0 %2812
  local.set %20 %2813
  %2814 = const i32 32
  %2815 = int.and %2813 %2814
  %2816 = int.eqz %2815
  local.set %19 %2816
  %2817 = local.get %18
  br.cond %2817 %BB:493 %BB:488

#pred = {%BB:487}
%BB:488:
  br %BB:489

#pred = {%BB:491, %BB:488}
%BB:489:
  %2818 = local.get %19
  %2819 = const i32 1
  %2820 = int.and %2818 %2819
  %2821 = int.eqz %2820
  br.cond %2821 %BB:491 %BB:490

#pred = {%BB:489}
%BB:490:
  %2822 = local.get %5
  %2823 = const i32 64
  %2824 = int.add %2822 %2823
  %2825 = const i32 256
  %2826 = local.get (arg)%0
  %2827 = call %function:72(%2824, %2825, %2826)
  %2828 = local.get (arg)%0
  memory.guard %memory:0 %2828 32
  %2829 = load.32 i32 %memory:0 %2828
  local.set %20 %2829
  br %BB:491

#pred = {%BB:490, %BB:489}
%BB:491:
  %2830 = local.get %20
  %2831 = const i32 32
  %2832 = int.and %2830 %2831
  %2833 = int.eqz %2832
  local.set %19 %2833
  %2834 = local.get %17
  %2835 = const i32 -256
  %2836 = int.add %2834 %2835
  local.set %17 %2836
  %2837 = const i32 255
  %2838 = int.gt.u %2836 %2837
  br.cond %2838 %BB:489 %BB:492

#pred = {%BB:491}
%BB:492:
  br %BB:493

#pred = {%BB:492, %BB:487}
%BB:493:
  %2839 = local.get %19
  %2840 = int.eqz %2839
  br.cond %2840 %BB:495 %BB:494

#pred = {%BB:493}
%BB:494:
  %2841 = local.get %5
  %2842 = const i32 64
  %2843 = int.add %2841 %2842
  %2844 = local.get %17
  %2845 = local.get (arg)%0
  %2846 = call %function:72(%2843, %2844, %2845)
  br %BB:495

#pred = {%BB:494, %BB:493, %BB:486, %BB:485}
%BB:495:
  %2847 = local.get %24
  %2848 = local.get %29
  %2849 = local.get %24
  %2850 = local.get %29
  %2851 = int.gt.s %2849 %2850
  %2852 = select %2851 %2847 %2848
  local.set %17 %2852
  br %BB:567

#pred = {%BB:236, %BB:235}
%BB:496:
  %2853 = local.get %37
  %2854 = const i32 9
  %2855 = int.add %2853 %2854
  %2856 = local.get %37
  %2857 = local.get %29
  %2858 = const i32 32
  %2859 = int.and %2857 %2858
  local.set %22 %2859
  %2860 = select %2859 %2855 %2856
  local.set %28 %2860
  %2861 = local.get %21
  %2862 = const i32 11
  %2863 = int.gt.u %2861 %2862
  br.cond %2863 %BB:503 %BB:497

#pred = {%BB:496}
%BB:497:
  %2864 = const i32 12
  %2865 = local.get %21
  %2866 = int.sub %2864 %2865
  %2867 = int.eqz %2866
  br.cond %2867 %BB:503 %BB:498

#pred = {%BB:497}
%BB:498:
  %2868 = local.get %21
  %2869 = const i32 -12
  %2870 = int.add %2868 %2869
  local.set %17 %2870
  %2871 = const f64 16
  local.set %39 %2871
  br %BB:499

#pred = {%BB:499, %BB:498}
%BB:499:
  %2872 = local.get %39
  %2873 = const f64 16
  %2874 = fp.mul %2872 %2873
  local.set %39 %2874
  %2875 = local.get %17
  %2876 = const i32 1
  %2877 = int.add %2875 %2876
  local.set %19 %2877
  %2878 = local.get %17
  %2879 = int.ge.u %2877 %2878
  local.set %20 %2879
  %2880 = local.get %19
  local.set %17 %2880
  %2881 = local.get %20
  br.cond %2881 %BB:499 %BB:500

#pred = {%BB:499}
%BB:500:
  %2882 = local.get %28
  memory.guard %memory:0 %2882 8
  %2883 = load.8 i32 %memory:0 %2882
  %2884 = const i32 45
  %2885 = int.ne %2883 %2884
  br.cond %2885 %BB:502 %BB:501

#pred = {%BB:500}
%BB:501:
  %2886 = local.get %39
  %2887 = local.get %34
  %2888 = fp.neg %2887
  %2889 = local.get %39
  %2890 = fp.sub %2888 %2889
  %2891 = fp.add %2886 %2890
  %2892 = fp.neg %2891
  local.set %34 %2892
  br %BB:503

#pred = {%BB:500}
%BB:502:
  %2893 = local.get %34
  %2894 = local.get %39
  %2895 = fp.add %2893 %2894
  %2896 = local.get %39
  %2897 = fp.sub %2895 %2896
  local.set %34 %2897
  br %BB:503

#pred = {%BB:502, %BB:501, %BB:497, %BB:496}
%BB:503:
  %2898 = local.get %12
  local.set %20 %2898
  %2899 = local.get %5
  %2900 = const i32 364
  %2901 = int.add %2899 %2900
  memory.guard %memory:0 %2901 32
  %2902 = load.32 i32 %memory:0 %2901
  local.set %27 %2902
  %2903 = local.get %27
  %2904 = const i32 31
  %2905 = int.shr.s %2903 %2904
  local.set %17 %2905
  %2906 = int.add %2902 %2905
  %2907 = local.get %17
  %2908 = int.xor %2906 %2907
  local.set %17 %2908
  %2909 = int.eqz %2908
  br.cond %2909 %BB:508 %BB:504

#pred = {%BB:503}
%BB:504:
  %2910 = const i32 0
  local.set %19 %2910
  br %BB:505

#pred = {%BB:505, %BB:504}
%BB:505:
  %2911 = local.get %5
  %2912 = const i32 324
  %2913 = int.add %2911 %2912
  %2914 = local.get %19
  %2915 = int.add %2913 %2914
  %2916 = const i32 11
  %2917 = int.add %2915 %2916
  %2918 = local.get %17
  %2919 = local.get %17
  %2920 = const i32 10
  %2921 = int.div.u %2919 %2920
  local.set %20 %2921
  %2922 = const i32 10
  %2923 = int.mul %2921 %2922
  %2924 = int.sub %2918 %2923
  %2925 = const i32 48
  %2926 = int.or %2924 %2925
  memory.guard %memory:0 %2917 8
  store.8 %memory:0 %2917 %2926
  %2927 = local.get %19
  %2928 = const i32 -1
  %2929 = int.add %2927 %2928
  local.set %19 %2929
  %2930 = local.get %17
  %2931 = const i32 9
  %2932 = int.gt.u %2930 %2931
  local.set %18 %2932
  %2933 = local.get %20
  local.set %17 %2933
  %2934 = local.get %18
  br.cond %2934 %BB:505 %BB:506

#pred = {%BB:505}
%BB:506:
  %2935 = local.get %5
  %2936 = const i32 324
  %2937 = int.add %2935 %2936
  %2938 = local.get %19
  %2939 = int.add %2937 %2938
  %2940 = const i32 12
  %2941 = int.add %2939 %2940
  local.set %20 %2941
  %2942 = local.get %19
  br.cond %2942 %BB:509 %BB:507

#pred = {%BB:506}
%BB:507:
  br %BB:508

#pred = {%BB:507, %BB:503}
%BB:508:
  %2943 = local.get %20
  %2944 = const i32 -1
  %2945 = int.add %2943 %2944
  local.set %20 %2945
  %2946 = const i32 48
  memory.guard %memory:0 %2945 8
  store.8 %memory:0 %2945 %2946
  br %BB:509

#pred = {%BB:508, %BB:506}
%BB:509:
  %2947 = local.get %35
  %2948 = const i32 2
  %2949 = int.or %2947 %2948
  local.set %26 %2949
  %2950 = local.get %20
  %2951 = const i32 -2
  %2952 = int.add %2950 %2951
  local.set %25 %2952
  %2953 = local.get %29
  %2954 = const i32 15
  %2955 = int.add %2953 %2954
  memory.guard %memory:0 %2952 8
  store.8 %memory:0 %2952 %2955
  %2956 = local.get %20
  %2957 = const i32 -1
  %2958 = int.add %2956 %2957
  %2959 = const i32 45
  %2960 = const i32 43
  %2961 = local.get %27
  %2962 = const i32 0
  %2963 = int.lt.s %2961 %2962
  %2964 = select %2963 %2959 %2960
  memory.guard %memory:0 %2958 8
  store.8 %memory:0 %2958 %2964
  %2965 = local.get %23
  %2966 = const i32 8
  %2967 = int.and %2965 %2966
  local.set %20 %2967
  %2968 = local.get %5
  %2969 = const i32 336
  %2970 = int.add %2968 %2969
  local.set %19 %2970
  br %BB:510

#pred = {%BB:519, %BB:509}
%BB:510:
  %2971 = local.get %19
  local.set %17 %2971
  %2972 = local.get %34
  %2973 = fp.abs %2972
  %2974 = const f64 2147483648
  %2975 = fp.lt %2973 %2974
  %2976 = int.eqz %2975
  br.cond %2976 %BB:512 %BB:511

#pred = {%BB:510}
%BB:511:
  %2977 = local.get %34
  %2978 = cast.s i32 %2977
  local.set %19 %2978
  br %BB:513

#pred = {%BB:510}
%BB:512:
  %2979 = const i32 -2147483648
  local.set %19 %2979
  br %BB:513

#pred = {%BB:512, %BB:511}
%BB:513:
  %2980 = local.get %17
  %2981 = local.get %19
  %2982 = const i32 68864
  %2983 = int.add %2981 %2982
  memory.guard %memory:0 %2983 8
  %2984 = load.8 i32 %memory:0 %2983
  %2985 = local.get %22
  %2986 = int.or %2984 %2985
  memory.guard %memory:0 %2980 8
  store.8 %memory:0 %2980 %2986
  %2987 = local.get %34
  %2988 = local.get %19
  %2989 = cast.s f64 %2988
  %2990 = fp.sub %2987 %2989
  %2991 = const f64 16
  %2992 = fp.mul %2990 %2991
  local.set %34 %2992
  %2993 = local.get %17
  %2994 = const i32 1
  %2995 = int.add %2993 %2994
  local.set %19 %2995
  %2996 = local.get %5
  %2997 = const i32 336
  %2998 = int.add %2996 %2997
  %2999 = int.sub %2995 %2998
  %3000 = const i32 1
  %3001 = int.ne %2999 %3000
  br.cond %3001 %BB:519 %BB:514

#pred = {%BB:513}
%BB:514:
  %3002 = local.get %20
  br.cond %3002 %BB:518 %BB:515

#pred = {%BB:514}
%BB:515:
  %3003 = local.get %21
  %3004 = const i32 0
  %3005 = int.gt.s %3003 %3004
  br.cond %3005 %BB:518 %BB:516

#pred = {%BB:515}
%BB:516:
  %3006 = local.get %34
  %3007 = const f64 0
  %3008 = fp.eq %3006 %3007
  br.cond %3008 %BB:519 %BB:517

#pred = {%BB:516}
%BB:517:
  br %BB:518

#pred = {%BB:517, %BB:515, %BB:514}
%BB:518:
  %3009 = local.get %17
  %3010 = const i32 46
  %3011 = const i32 1
  %3012 = int.add %3009 %3011
  memory.guard %memory:0 %3012 8
  store.8 %memory:0 %3012 %3010
  %3013 = local.get %17
  %3014 = const i32 2
  %3015 = int.add %3013 %3014
  local.set %19 %3015
  br %BB:519

#pred = {%BB:518, %BB:516, %BB:513}
%BB:519:
  %3016 = local.get %34
  %3017 = const f64 0
  %3018 = fp.ne %3016 %3017
  br.cond %3018 %BB:510 %BB:520

#pred = {%BB:519}
%BB:520:
  %3019 = const i32 -1
  local.set %17 %3019
  %3020 = const i32 2147483645
  %3021 = local.get %26
  %3022 = local.get %12
  %3023 = local.get %25
  %3024 = int.sub %3022 %3023
  local.set %27 %3024
  %3025 = int.add %3021 %3024
  local.set %20 %3025
  %3026 = int.sub %3020 %3025
  %3027 = local.get %21
  %3028 = int.lt.s %3026 %3027
  br.cond %3028 %BB:567 %BB:521

#pred = {%BB:520}
%BB:521:
  %3029 = local.get %20
  %3030 = local.get %21
  %3031 = const i32 2
  %3032 = int.add %3030 %3031
  %3033 = local.get %19
  %3034 = local.get %5
  %3035 = const i32 336
  %3036 = int.add %3034 %3035
  %3037 = int.sub %3033 %3036
  local.set %22 %3037
  %3038 = local.get %7
  %3039 = local.get %19
  %3040 = int.add %3038 %3039
  %3041 = local.get %21
  %3042 = int.lt.s %3040 %3041
  %3043 = select %3042 %3032 %3037
  %3044 = local.get %22
  %3045 = local.get %21
  %3046 = select %3045 %3043 %3044
  local.set %30 %3046
  %3047 = int.add %3029 %3046
  local.set %18 %3047
  %3048 = local.get %23
  %3049 = const i32 73728
  %3050 = int.and %3048 %3049
  local.set %21 %3050
  br.cond %3050 %BB:531 %BB:522

#pred = {%BB:521}
%BB:522:
  %3051 = local.get %24
  %3052 = local.get %18
  %3053 = int.le.s %3051 %3052
  br.cond %3053 %BB:531 %BB:523

#pred = {%BB:522}
%BB:523:
  %3054 = local.get %5
  %3055 = const i32 64
  %3056 = int.add %3054 %3055
  %3057 = const i32 32
  %3058 = local.get %24
  %3059 = local.get %18
  %3060 = int.sub %3058 %3059
  local.set %17 %3060
  %3061 = const i32 256
  %3062 = local.get %17
  %3063 = const i32 256
  %3064 = int.lt.u %3062 %3063
  local.set %23 %3064
  %3065 = select %3064 %3060 %3061
  %3066 = call %function:97(%3056, %3057, %3065)
  %3067 = local.get (arg)%0
  memory.guard %memory:0 %3067 32
  %3068 = load.32 i32 %memory:0 %3067
  local.set %20 %3068
  %3069 = const i32 32
  %3070 = int.and %3068 %3069
  %3071 = int.eqz %3070
  local.set %19 %3071
  %3072 = local.get %23
  br.cond %3072 %BB:529 %BB:524

#pred = {%BB:523}
%BB:524:
  br %BB:525

#pred = {%BB:527, %BB:524}
%BB:525:
  %3073 = local.get %19
  %3074 = const i32 1
  %3075 = int.and %3073 %3074
  %3076 = int.eqz %3075
  br.cond %3076 %BB:527 %BB:526

#pred = {%BB:525}
%BB:526:
  %3077 = local.get %5
  %3078 = const i32 64
  %3079 = int.add %3077 %3078
  %3080 = const i32 256
  %3081 = local.get (arg)%0
  %3082 = call %function:72(%3079, %3080, %3081)
  %3083 = local.get (arg)%0
  memory.guard %memory:0 %3083 32
  %3084 = load.32 i32 %memory:0 %3083
  local.set %20 %3084
  br %BB:527

#pred = {%BB:526, %BB:525}
%BB:527:
  %3085 = local.get %20
  %3086 = const i32 32
  %3087 = int.and %3085 %3086
  %3088 = int.eqz %3087
  local.set %19 %3088
  %3089 = local.get %17
  %3090 = const i32 -256
  %3091 = int.add %3089 %3090
  local.set %17 %3091
  %3092 = const i32 255
  %3093 = int.gt.u %3091 %3092
  br.cond %3093 %BB:525 %BB:528

#pred = {%BB:527}
%BB:528:
  br %BB:529

#pred = {%BB:528, %BB:523}
%BB:529:
  %3094 = local.get %19
  %3095 = int.eqz %3094
  br.cond %3095 %BB:531 %BB:530

#pred = {%BB:529}
%BB:530:
  %3096 = local.get %5
  %3097 = const i32 64
  %3098 = int.add %3096 %3097
  %3099 = local.get %17
  %3100 = local.get (arg)%0
  %3101 = call %function:72(%3098, %3099, %3100)
  br %BB:531

#pred = {%BB:530, %BB:529, %BB:522, %BB:521}
%BB:531:
  %3102 = local.get (arg)%0
  memory.guard %memory:0 %3102 8
  %3103 = load.8 i32 %memory:0 %3102
  %3104 = const i32 32
  %3105 = int.and %3103 %3104
  br.cond %3105 %BB:533 %BB:532

#pred = {%BB:531}
%BB:532:
  %3106 = local.get %28
  %3107 = local.get %26
  %3108 = local.get (arg)%0
  %3109 = call %function:72(%3106, %3107, %3108)
  br %BB:533

#pred = {%BB:532, %BB:531}
%BB:533:
  %3110 = local.get %21
  %3111 = const i32 65536
  %3112 = int.ne %3110 %3111
  br.cond %3112 %BB:543 %BB:534

#pred = {%BB:533}
%BB:534:
  %3113 = local.get %24
  %3114 = local.get %18
  %3115 = int.le.s %3113 %3114
  br.cond %3115 %BB:543 %BB:535

#pred = {%BB:534}
%BB:535:
  %3116 = local.get %5
  %3117 = const i32 64
  %3118 = int.add %3116 %3117
  %3119 = const i32 48
  %3120 = local.get %24
  %3121 = local.get %18
  %3122 = int.sub %3120 %3121
  local.set %17 %3122
  %3123 = const i32 256
  %3124 = local.get %17
  %3125 = const i32 256
  %3126 = int.lt.u %3124 %3125
  local.set %26 %3126
  %3127 = select %3126 %3122 %3123
  %3128 = call %function:97(%3118, %3119, %3127)
  %3129 = local.get (arg)%0
  memory.guard %memory:0 %3129 32
  %3130 = load.32 i32 %memory:0 %3129
  local.set %20 %3130
  %3131 = const i32 32
  %3132 = int.and %3130 %3131
  %3133 = int.eqz %3132
  local.set %19 %3133
  %3134 = local.get %26
  br.cond %3134 %BB:541 %BB:536

#pred = {%BB:535}
%BB:536:
  br %BB:537

#pred = {%BB:539, %BB:536}
%BB:537:
  %3135 = local.get %19
  %3136 = const i32 1
  %3137 = int.and %3135 %3136
  %3138 = int.eqz %3137
  br.cond %3138 %BB:539 %BB:538

#pred = {%BB:537}
%BB:538:
  %3139 = local.get %5
  %3140 = const i32 64
  %3141 = int.add %3139 %3140
  %3142 = const i32 256
  %3143 = local.get (arg)%0
  %3144 = call %function:72(%3141, %3142, %3143)
  %3145 = local.get (arg)%0
  memory.guard %memory:0 %3145 32
  %3146 = load.32 i32 %memory:0 %3145
  local.set %20 %3146
  br %BB:539

#pred = {%BB:538, %BB:537}
%BB:539:
  %3147 = local.get %20
  %3148 = const i32 32
  %3149 = int.and %3147 %3148
  %3150 = int.eqz %3149
  local.set %19 %3150
  %3151 = local.get %17
  %3152 = const i32 -256
  %3153 = int.add %3151 %3152
  local.set %17 %3153
  %3154 = const i32 255
  %3155 = int.gt.u %3153 %3154
  br.cond %3155 %BB:537 %BB:540

#pred = {%BB:539}
%BB:540:
  br %BB:541

#pred = {%BB:540, %BB:535}
%BB:541:
  %3156 = local.get %19
  %3157 = int.eqz %3156
  br.cond %3157 %BB:543 %BB:542

#pred = {%BB:541}
%BB:542:
  %3158 = local.get %5
  %3159 = const i32 64
  %3160 = int.add %3158 %3159
  %3161 = local.get %17
  %3162 = local.get (arg)%0
  %3163 = call %function:72(%3160, %3161, %3162)
  br %BB:543

#pred = {%BB:542, %BB:541, %BB:534, %BB:533}
%BB:543:
  %3164 = local.get (arg)%0
  memory.guard %memory:0 %3164 8
  %3165 = load.8 i32 %memory:0 %3164
  %3166 = const i32 32
  %3167 = int.and %3165 %3166
  br.cond %3167 %BB:545 %BB:544

#pred = {%BB:543}
%BB:544:
  %3168 = local.get %5
  %3169 = const i32 336
  %3170 = int.add %3168 %3169
  %3171 = local.get %22
  %3172 = local.get (arg)%0
  %3173 = call %function:72(%3170, %3171, %3172)
  br %BB:545

#pred = {%BB:544, %BB:543}
%BB:545:
  %3174 = local.get %30
  %3175 = local.get %22
  %3176 = int.sub %3174 %3175
  local.set %17 %3176
  %3177 = const i32 1
  %3178 = int.lt.s %3176 %3177
  br.cond %3178 %BB:554 %BB:546

#pred = {%BB:545}
%BB:546:
  %3179 = local.get %5
  %3180 = const i32 64
  %3181 = int.add %3179 %3180
  %3182 = const i32 48
  %3183 = local.get %17
  %3184 = const i32 256
  %3185 = local.get %17
  %3186 = const i32 256
  %3187 = int.lt.u %3185 %3186
  local.set %22 %3187
  %3188 = select %3187 %3183 %3184
  %3189 = call %function:97(%3181, %3182, %3188)
  %3190 = local.get (arg)%0
  memory.guard %memory:0 %3190 32
  %3191 = load.32 i32 %memory:0 %3190
  local.set %20 %3191
  %3192 = const i32 32
  %3193 = int.and %3191 %3192
  %3194 = int.eqz %3193
  local.set %19 %3194
  %3195 = local.get %22
  br.cond %3195 %BB:552 %BB:547

#pred = {%BB:546}
%BB:547:
  br %BB:548

#pred = {%BB:550, %BB:547}
%BB:548:
  %3196 = local.get %19
  %3197 = const i32 1
  %3198 = int.and %3196 %3197
  %3199 = int.eqz %3198
  br.cond %3199 %BB:550 %BB:549

#pred = {%BB:548}
%BB:549:
  %3200 = local.get %5
  %3201 = const i32 64
  %3202 = int.add %3200 %3201
  %3203 = const i32 256
  %3204 = local.get (arg)%0
  %3205 = call %function:72(%3202, %3203, %3204)
  %3206 = local.get (arg)%0
  memory.guard %memory:0 %3206 32
  %3207 = load.32 i32 %memory:0 %3206
  local.set %20 %3207
  br %BB:550

#pred = {%BB:549, %BB:548}
%BB:550:
  %3208 = local.get %20
  %3209 = const i32 32
  %3210 = int.and %3208 %3209
  %3211 = int.eqz %3210
  local.set %19 %3211
  %3212 = local.get %17
  %3213 = const i32 -256
  %3214 = int.add %3212 %3213
  local.set %17 %3214
  %3215 = const i32 255
  %3216 = int.gt.u %3214 %3215
  br.cond %3216 %BB:548 %BB:551

#pred = {%BB:550}
%BB:551:
  br %BB:552

#pred = {%BB:551, %BB:546}
%BB:552:
  %3217 = local.get %19
  %3218 = int.eqz %3217
  br.cond %3218 %BB:554 %BB:553

#pred = {%BB:552}
%BB:553:
  %3219 = local.get %5
  %3220 = const i32 64
  %3221 = int.add %3219 %3220
  %3222 = local.get %17
  %3223 = local.get (arg)%0
  %3224 = call %function:72(%3221, %3222, %3223)
  br %BB:554

#pred = {%BB:553, %BB:552, %BB:545}
%BB:554:
  %3225 = local.get (arg)%0
  memory.guard %memory:0 %3225 8
  %3226 = load.8 i32 %memory:0 %3225
  %3227 = const i32 32
  %3228 = int.and %3226 %3227
  br.cond %3228 %BB:556 %BB:555

#pred = {%BB:554}
%BB:555:
  %3229 = local.get %25
  %3230 = local.get %27
  %3231 = local.get (arg)%0
  %3232 = call %function:72(%3229, %3230, %3231)
  br %BB:556

#pred = {%BB:555, %BB:554}
%BB:556:
  %3233 = local.get %21
  %3234 = const i32 8192
  %3235 = int.ne %3233 %3234
  br.cond %3235 %BB:566 %BB:557

#pred = {%BB:556}
%BB:557:
  %3236 = local.get %24
  %3237 = local.get %18
  %3238 = int.le.s %3236 %3237
  br.cond %3238 %BB:566 %BB:558

#pred = {%BB:557}
%BB:558:
  %3239 = local.get %5
  %3240 = const i32 64
  %3241 = int.add %3239 %3240
  %3242 = const i32 32
  %3243 = local.get %24
  %3244 = local.get %18
  %3245 = int.sub %3243 %3244
  local.set %17 %3245
  %3246 = const i32 256
  %3247 = local.get %17
  %3248 = const i32 256
  %3249 = int.lt.u %3247 %3248
  local.set %22 %3249
  %3250 = select %3249 %3245 %3246
  %3251 = call %function:97(%3241, %3242, %3250)
  %3252 = local.get (arg)%0
  memory.guard %memory:0 %3252 32
  %3253 = load.32 i32 %memory:0 %3252
  local.set %20 %3253
  %3254 = const i32 32
  %3255 = int.and %3253 %3254
  %3256 = int.eqz %3255
  local.set %19 %3256
  %3257 = local.get %22
  br.cond %3257 %BB:564 %BB:559

#pred = {%BB:558}
%BB:559:
  br %BB:560

#pred = {%BB:562, %BB:559}
%BB:560:
  %3258 = local.get %19
  %3259 = const i32 1
  %3260 = int.and %3258 %3259
  %3261 = int.eqz %3260
  br.cond %3261 %BB:562 %BB:561

#pred = {%BB:560}
%BB:561:
  %3262 = local.get %5
  %3263 = const i32 64
  %3264 = int.add %3262 %3263
  %3265 = const i32 256
  %3266 = local.get (arg)%0
  %3267 = call %function:72(%3264, %3265, %3266)
  %3268 = local.get (arg)%0
  memory.guard %memory:0 %3268 32
  %3269 = load.32 i32 %memory:0 %3268
  local.set %20 %3269
  br %BB:562

#pred = {%BB:561, %BB:560}
%BB:562:
  %3270 = local.get %20
  %3271 = const i32 32
  %3272 = int.and %3270 %3271
  %3273 = int.eqz %3272
  local.set %19 %3273
  %3274 = local.get %17
  %3275 = const i32 -256
  %3276 = int.add %3274 %3275
  local.set %17 %3276
  %3277 = const i32 255
  %3278 = int.gt.u %3276 %3277
  br.cond %3278 %BB:560 %BB:563

#pred = {%BB:562}
%BB:563:
  br %BB:564

#pred = {%BB:563, %BB:558}
%BB:564:
  %3279 = local.get %19
  %3280 = int.eqz %3279
  br.cond %3280 %BB:566 %BB:565

#pred = {%BB:564}
%BB:565:
  %3281 = local.get %5
  %3282 = const i32 64
  %3283 = int.add %3281 %3282
  %3284 = local.get %17
  %3285 = local.get (arg)%0
  %3286 = call %function:72(%3283, %3284, %3285)
  br %BB:566

#pred = {%BB:565, %BB:564, %BB:557, %BB:556}
%BB:566:
  %3287 = local.get %24
  %3288 = local.get %18
  %3289 = local.get %24
  %3290 = local.get %18
  %3291 = int.gt.s %3289 %3290
  %3292 = select %3291 %3287 %3288
  local.set %17 %3292
  br %BB:567

#pred = {%BB:321, %BB:232, %BB:319, %BB:495, %BB:566, %BB:331, %BB:333, %BB:520}
%BB:567:
  %3293 = local.get %17
  %3294 = const i32 0
  %3295 = int.ge.s %3293 %3294
  br.cond %3295 %BB:0 %BB:568

#pred = {%BB:567}
%BB:568:
  br %BB:569

#pred = {%BB:168, %BB:405, %BB:200, %BB:11, %BB:568, %BB:45, %BB:42, %BB:404, %BB:145, %BB:156, %BB:0}
%BB:569:
  %3296 = const i32 0
  %3297 = const i32 61
  %3298 = const i32 79096
  %3299 = int.add %3296 %3298
  memory.guard %memory:0 %3299 32
  store.32 %memory:0 %3299 %3297
  br %BB:570

#pred = {%BB:569, %BB:166, %BB:98}
%BB:570:
  %3300 = const i32 -1
  local.set %16 %3300
  br %BB:571

#pred = {%BB:47, %BB:49, %BB:104, %BB:68, %BB:570, %BB:72}
%BB:571:
  %3301 = local.get %5
  %3302 = const i32 880
  %3303 = int.add %3301 %3302
  global.set %global:0%3303
  %3304 = local.get %16
  ret %3304

}

function %function:87 : [i32, i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32}
#pred = {}
%entry:
  %3 = local.get (arg)%1
  %4 = const i32 -9
  %5 = int.add %3 %4
  br.table %BB:18 0:%BB:17 1:%BB:0 2:%BB:1 3:%BB:4 4:%BB:2 5:%BB:3 6:%BB:5 7:%BB:6 8:%BB:7 9:%BB:8 10:%BB:9 11:%BB:10 12:%BB:11 13:%BB:12 14:%BB:13 15:%BB:14 16:%BB:15 17:%BB:16

#pred = {%entry}
%BB:0:
  %6 = local.get (arg)%2
  %7 = local.get (arg)%2
  memory.guard %memory:0 %7 32
  %8 = load.32 i32 %memory:0 %7
  local.set (arg)%1 %8
  %9 = const i32 4
  %10 = int.add %8 %9
  memory.guard %memory:0 %6 32
  store.32 %memory:0 %6 %10
  %11 = local.get (arg)%0
  %12 = local.get (arg)%1
  memory.guard %memory:0 %12 32
  %13 = load.32 i64 %memory:0 %12
  %14 = extend.32 %13
  memory.guard %memory:0 %11 64
  store.64 %memory:0 %11 %14
  br %exit

#pred = {%entry}
%BB:1:
  %15 = local.get (arg)%2
  %16 = local.get (arg)%2
  memory.guard %memory:0 %16 32
  %17 = load.32 i32 %memory:0 %16
  local.set (arg)%1 %17
  %18 = const i32 4
  %19 = int.add %17 %18
  memory.guard %memory:0 %15 32
  store.32 %memory:0 %15 %19
  %20 = local.get (arg)%0
  %21 = local.get (arg)%1
  memory.guard %memory:0 %21 32
  %22 = load.32 i64 %memory:0 %21
  memory.guard %memory:0 %20 64
  store.64 %memory:0 %20 %22
  br %exit

#pred = {%entry}
%BB:2:
  %23 = local.get (arg)%2
  %24 = local.get (arg)%2
  memory.guard %memory:0 %24 32
  %25 = load.32 i32 %memory:0 %24
  local.set (arg)%1 %25
  %26 = const i32 4
  %27 = int.add %25 %26
  memory.guard %memory:0 %23 32
  store.32 %memory:0 %23 %27
  %28 = local.get (arg)%0
  %29 = local.get (arg)%1
  memory.guard %memory:0 %29 32
  %30 = load.32 i64 %memory:0 %29
  %31 = extend.32 %30
  memory.guard %memory:0 %28 64
  store.64 %memory:0 %28 %31
  br %exit

#pred = {%entry}
%BB:3:
  %32 = local.get (arg)%2
  %33 = local.get (arg)%2
  memory.guard %memory:0 %33 32
  %34 = load.32 i32 %memory:0 %33
  local.set (arg)%1 %34
  %35 = const i32 4
  %36 = int.add %34 %35
  memory.guard %memory:0 %32 32
  store.32 %memory:0 %32 %36
  %37 = local.get (arg)%0
  %38 = local.get (arg)%1
  memory.guard %memory:0 %38 32
  %39 = load.32 i64 %memory:0 %38
  memory.guard %memory:0 %37 64
  store.64 %memory:0 %37 %39
  br %exit

#pred = {%entry}
%BB:4:
  %40 = local.get (arg)%2
  %41 = local.get (arg)%2
  memory.guard %memory:0 %41 32
  %42 = load.32 i32 %memory:0 %41
  %43 = const i32 7
  %44 = int.add %42 %43
  %45 = const i32 -8
  %46 = int.and %44 %45
  local.set (arg)%1 %46
  %47 = const i32 8
  %48 = int.add %46 %47
  memory.guard %memory:0 %40 32
  store.32 %memory:0 %40 %48
  %49 = local.get (arg)%0
  %50 = local.get (arg)%1
  memory.guard %memory:0 %50 64
  %51 = load.64 i64 %memory:0 %50
  memory.guard %memory:0 %49 64
  store.64 %memory:0 %49 %51
  br %exit

#pred = {%entry}
%BB:5:
  %52 = local.get (arg)%2
  %53 = local.get (arg)%2
  memory.guard %memory:0 %53 32
  %54 = load.32 i32 %memory:0 %53
  local.set (arg)%1 %54
  %55 = const i32 4
  %56 = int.add %54 %55
  memory.guard %memory:0 %52 32
  store.32 %memory:0 %52 %56
  %57 = local.get (arg)%0
  %58 = local.get (arg)%1
  memory.guard %memory:0 %58 16
  %59 = load.16 i64 %memory:0 %58
  %60 = extend.16 %59
  memory.guard %memory:0 %57 64
  store.64 %memory:0 %57 %60
  br %exit

#pred = {%entry}
%BB:6:
  %61 = local.get (arg)%2
  %62 = local.get (arg)%2
  memory.guard %memory:0 %62 32
  %63 = load.32 i32 %memory:0 %62
  local.set (arg)%1 %63
  %64 = const i32 4
  %65 = int.add %63 %64
  memory.guard %memory:0 %61 32
  store.32 %memory:0 %61 %65
  %66 = local.get (arg)%0
  %67 = local.get (arg)%1
  memory.guard %memory:0 %67 16
  %68 = load.16 i64 %memory:0 %67
  memory.guard %memory:0 %66 64
  store.64 %memory:0 %66 %68
  br %exit

#pred = {%entry}
%BB:7:
  %69 = local.get (arg)%2
  %70 = local.get (arg)%2
  memory.guard %memory:0 %70 32
  %71 = load.32 i32 %memory:0 %70
  local.set (arg)%1 %71
  %72 = const i32 4
  %73 = int.add %71 %72
  memory.guard %memory:0 %69 32
  store.32 %memory:0 %69 %73
  %74 = local.get (arg)%0
  %75 = local.get (arg)%1
  memory.guard %memory:0 %75 8
  %76 = load.8 i64 %memory:0 %75
  %77 = extend.8 %76
  memory.guard %memory:0 %74 64
  store.64 %memory:0 %74 %77
  br %exit

#pred = {%entry}
%BB:8:
  %78 = local.get (arg)%2
  %79 = local.get (arg)%2
  memory.guard %memory:0 %79 32
  %80 = load.32 i32 %memory:0 %79
  local.set (arg)%1 %80
  %81 = const i32 4
  %82 = int.add %80 %81
  memory.guard %memory:0 %78 32
  store.32 %memory:0 %78 %82
  %83 = local.get (arg)%0
  %84 = local.get (arg)%1
  memory.guard %memory:0 %84 8
  %85 = load.8 i64 %memory:0 %84
  memory.guard %memory:0 %83 64
  store.64 %memory:0 %83 %85
  br %exit

#pred = {%entry}
%BB:9:
  %86 = local.get (arg)%2
  %87 = local.get (arg)%2
  memory.guard %memory:0 %87 32
  %88 = load.32 i32 %memory:0 %87
  %89 = const i32 7
  %90 = int.add %88 %89
  %91 = const i32 -8
  %92 = int.and %90 %91
  local.set (arg)%1 %92
  %93 = const i32 8
  %94 = int.add %92 %93
  memory.guard %memory:0 %86 32
  store.32 %memory:0 %86 %94
  %95 = local.get (arg)%0
  %96 = local.get (arg)%1
  memory.guard %memory:0 %96 64
  %97 = load.64 i64 %memory:0 %96
  memory.guard %memory:0 %95 64
  store.64 %memory:0 %95 %97
  br %exit

#pred = {%entry}
%BB:10:
  %98 = local.get (arg)%2
  %99 = local.get (arg)%2
  memory.guard %memory:0 %99 32
  %100 = load.32 i32 %memory:0 %99
  local.set (arg)%1 %100
  %101 = const i32 4
  %102 = int.add %100 %101
  memory.guard %memory:0 %98 32
  store.32 %memory:0 %98 %102
  %103 = local.get (arg)%0
  %104 = local.get (arg)%1
  memory.guard %memory:0 %104 32
  %105 = load.32 i64 %memory:0 %104
  memory.guard %memory:0 %103 64
  store.64 %memory:0 %103 %105
  br %exit

#pred = {%entry}
%BB:11:
  %106 = local.get (arg)%2
  %107 = local.get (arg)%2
  memory.guard %memory:0 %107 32
  %108 = load.32 i32 %memory:0 %107
  %109 = const i32 7
  %110 = int.add %108 %109
  %111 = const i32 -8
  %112 = int.and %110 %111
  local.set (arg)%1 %112
  %113 = const i32 8
  %114 = int.add %112 %113
  memory.guard %memory:0 %106 32
  store.32 %memory:0 %106 %114
  %115 = local.get (arg)%0
  %116 = local.get (arg)%1
  memory.guard %memory:0 %116 64
  %117 = load.64 i64 %memory:0 %116
  memory.guard %memory:0 %115 64
  store.64 %memory:0 %115 %117
  br %exit

#pred = {%entry}
%BB:12:
  %118 = local.get (arg)%2
  %119 = local.get (arg)%2
  memory.guard %memory:0 %119 32
  %120 = load.32 i32 %memory:0 %119
  %121 = const i32 7
  %122 = int.add %120 %121
  %123 = const i32 -8
  %124 = int.and %122 %123
  local.set (arg)%1 %124
  %125 = const i32 8
  %126 = int.add %124 %125
  memory.guard %memory:0 %118 32
  store.32 %memory:0 %118 %126
  %127 = local.get (arg)%0
  %128 = local.get (arg)%1
  memory.guard %memory:0 %128 64
  %129 = load.64 i64 %memory:0 %128
  memory.guard %memory:0 %127 64
  store.64 %memory:0 %127 %129
  br %exit

#pred = {%entry}
%BB:13:
  %130 = local.get (arg)%2
  %131 = local.get (arg)%2
  memory.guard %memory:0 %131 32
  %132 = load.32 i32 %memory:0 %131
  local.set (arg)%1 %132
  %133 = const i32 4
  %134 = int.add %132 %133
  memory.guard %memory:0 %130 32
  store.32 %memory:0 %130 %134
  %135 = local.get (arg)%0
  %136 = local.get (arg)%1
  memory.guard %memory:0 %136 32
  %137 = load.32 i64 %memory:0 %136
  %138 = extend.32 %137
  memory.guard %memory:0 %135 64
  store.64 %memory:0 %135 %138
  br %exit

#pred = {%entry}
%BB:14:
  %139 = local.get (arg)%2
  %140 = local.get (arg)%2
  memory.guard %memory:0 %140 32
  %141 = load.32 i32 %memory:0 %140
  local.set (arg)%1 %141
  %142 = const i32 4
  %143 = int.add %141 %142
  memory.guard %memory:0 %139 32
  store.32 %memory:0 %139 %143
  %144 = local.get (arg)%0
  %145 = local.get (arg)%1
  memory.guard %memory:0 %145 32
  %146 = load.32 i64 %memory:0 %145
  memory.guard %memory:0 %144 64
  store.64 %memory:0 %144 %146
  br %exit

#pred = {%entry}
%BB:15:
  %147 = local.get (arg)%2
  %148 = local.get (arg)%2
  memory.guard %memory:0 %148 32
  %149 = load.32 i32 %memory:0 %148
  %150 = const i32 7
  %151 = int.add %149 %150
  %152 = const i32 -8
  %153 = int.and %151 %152
  local.set (arg)%1 %153
  %154 = const i32 8
  %155 = int.add %153 %154
  memory.guard %memory:0 %147 32
  store.32 %memory:0 %147 %155
  %156 = local.get (arg)%0
  %157 = local.get (arg)%1
  memory.guard %memory:0 %157 64
  %158 = load.64 i64 %memory:0 %157
  memory.guard %memory:0 %156 64
  store.64 %memory:0 %156 %158
  br %exit

#pred = {%entry}
%BB:16:
  call %function:88()
  unreachable

#pred = {%entry}
%BB:17:
  %160 = local.get (arg)%2
  %161 = local.get (arg)%2
  memory.guard %memory:0 %161 32
  %162 = load.32 i32 %memory:0 %161
  local.set (arg)%1 %162
  %163 = const i32 4
  %164 = int.add %162 %163
  memory.guard %memory:0 %160 32
  store.32 %memory:0 %160 %164
  %165 = local.get (arg)%0
  %166 = local.get (arg)%1
  memory.guard %memory:0 %166 32
  %167 = load.32 i32 %memory:0 %166
  memory.guard %memory:0 %165 32
  store.32 %memory:0 %165 %167
  br %BB:18

#pred = {%BB:17, %entry}
%BB:18:
  br %exit

#pred = {%BB:0, %BB:9, %BB:4, %BB:10, %BB:6, %BB:11, %BB:18, %BB:3, %BB:1, %BB:5, %BB:2, %BB:14, %BB:12, %BB:13, %BB:8, %BB:15, %BB:7}
%exit:
  ret

}

function %function:88 : [] -> [] {
{}
#pred = {}
%entry:
  %0 = const i32 68720
  %1 = const i32 69552
  %2 = call %function:84(%0, %1)
  call %function:65()
  unreachable

}

function %function:89 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, %3:i32}
#pred = {}
%entry:
  %4 = global.get %global:0
  %5 = const i32 16
  %6 = int.sub %4 %5
  local.set %3 %6
  global.set %global:0%6
  %7 = local.get %3
  %8 = local.get (arg)%2
  %9 = const i32 12
  %10 = int.add %7 %9
  memory.guard %memory:0 %10 32
  store.32 %memory:0 %10 %8
  %11 = local.get (arg)%0
  %12 = local.get (arg)%1
  %13 = local.get (arg)%2
  %14 = call %function:85(%11, %12, %13)
  local.set (arg)%2 %14
  %15 = local.get %3
  %16 = const i32 16
  %17 = int.add %15 %16
  global.set %global:0%17
  %18 = local.get (arg)%2
  ret %18

}

function %function:90 : [i32] -> [i32] {
{(arg)%0:i32}
#pred = {}
%entry:
  %1 = local.get (arg)%0
  %2 = call %function:6(%1)
  local.set (arg)%0 %2
  br.cond %2 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %3 = const i32 0
  br %exit

#pred = {%entry}
%BB:1:
  %4 = const i32 0
  %5 = local.get (arg)%0
  %6 = const i32 79096
  %7 = int.add %4 %6
  memory.guard %memory:0 %7 32
  store.32 %memory:0 %7 %5
  %8 = const i32 -1
  br %exit

#pred = {%BB:1, %BB:0}
%exit:
  %9 = phi i32 [%3, %BB:0] [%8, %BB:1]
  ret %9

}

function %function:91 : [i32] -> [i32] {
{(arg)%0:i32}
#pred = {}
%entry:
  %1 = local.get (arg)%0
  %2 = const i32 56
  %3 = int.add %1 %2
  memory.guard %memory:0 %3 32
  %4 = load.32 i32 %memory:0 %3
  %5 = call %function:90(%4)
  ret %5

}

function %function:92 : [i32] -> [i32] {
{(arg)%0:i32, %1:i32, %2:i32}
#pred = {}
%entry:
  %3 = global.get %global:0
  %4 = const i32 32
  %5 = int.sub %3 %4
  local.set %1 %5
  global.set %global:0%5
  %6 = local.get (arg)%0
  %7 = local.get %1
  %8 = const i32 8
  %9 = int.add %7 %8
  %10 = call %function:7(%6, %9)
  local.set (arg)%0 %10
  br.cond %10 %BB:3 %BB:0

#pred = {%entry}
%BB:0:
  %11 = const i32 59
  local.set (arg)%0 %11
  %12 = local.get %1
  %13 = const i32 8
  %14 = int.add %12 %13
  memory.guard %memory:0 %14 8
  %15 = load.8 i32 %memory:0 %14
  %16 = const i32 2
  %17 = int.ne %15 %16
  br.cond %17 %BB:3 %BB:1

#pred = {%BB:0}
%BB:1:
  %18 = local.get %1
  %19 = const i32 16
  %20 = int.add %18 %19
  memory.guard %memory:0 %20 8
  %21 = load.8 i32 %memory:0 %20
  %22 = const i32 36
  %23 = int.and %21 %22
  br.cond %23 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %24 = const i32 1
  local.set %2 %24
  br %BB:4

#pred = {%BB:1, %BB:0, %entry}
%BB:3:
  %25 = const i32 0
  local.set %2 %25
  %26 = const i32 0
  %27 = local.get (arg)%0
  %28 = const i32 79096
  %29 = int.add %26 %28
  memory.guard %memory:0 %29 32
  store.32 %memory:0 %29 %27
  br %BB:4

#pred = {%BB:3, %BB:2}
%BB:4:
  %30 = local.get %1
  %31 = const i32 32
  %32 = int.add %30 %31
  global.set %global:0%32
  %33 = local.get %2
  ret %33

}

function %function:93 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32}
#pred = {}
%entry:
  %3 = local.get (arg)%0
  %4 = const i32 16
  %5 = const i32 32
  %6 = int.add %3 %5
  memory.guard %memory:0 %6 32
  store.32 %memory:0 %6 %4
  %7 = local.get (arg)%0
  memory.guard %memory:0 %7 8
  %8 = load.8 i32 %memory:0 %7
  %9 = const i32 64
  %10 = int.and %8 %9
  br.cond %10 %BB:2 %BB:0

#pred = {%entry}
%BB:0:
  %11 = local.get (arg)%0
  %12 = const i32 56
  %13 = int.add %11 %12
  memory.guard %memory:0 %13 32
  %14 = load.32 i32 %memory:0 %13
  %15 = call %function:92(%14)
  br.cond %15 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  %16 = local.get (arg)%0
  %17 = const i32 -1
  %18 = const i32 64
  %19 = int.add %16 %18
  memory.guard %memory:0 %19 32
  store.32 %memory:0 %19 %17
  br %BB:2

#pred = {%BB:1, %BB:0, %entry}
%BB:2:
  %20 = local.get (arg)%0
  %21 = local.get (arg)%1
  %22 = local.get (arg)%2
  %23 = call %function:82(%20, %21, %22)
  ret %23

}

function %function:94 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, %2:i32}
#pred = {}
%entry:
  %3 = local.get (arg)%0
  %4 = const i32 0
  %5 = local.get (arg)%1
  %6 = call %function:99(%3, %4, %5)
  local.set %2 %6
  %7 = local.get (arg)%0
  %8 = int.sub %6 %7
  %9 = local.get (arg)%1
  %10 = local.get %2
  %11 = select %10 %8 %9
  ret %11

}

function %function:95 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, %3:i32, %4:i32, %5:i32, %6:i32, %7:i32, %8:i32}
#pred = {}
%entry:
  %9 = local.get (arg)%2
  %10 = int.eqz %9
  br.cond %10 %BB:5 %BB:0

#pred = {%entry}
%BB:0:
  %11 = local.get (arg)%1
  %12 = const i32 3
  %13 = int.and %11 %12
  %14 = int.eqz %13
  br.cond %14 %BB:5 %BB:1

#pred = {%BB:0}
%BB:1:
  %15 = local.get (arg)%0
  local.set %3 %15
  br %BB:2

#pred = {%BB:3, %BB:1}
%BB:2:
  %16 = local.get %3
  %17 = local.get (arg)%1
  memory.guard %memory:0 %17 8
  %18 = load.8 i32 %memory:0 %17
  memory.guard %memory:0 %16 8
  store.8 %memory:0 %16 %18
  %19 = local.get (arg)%2
  %20 = const i32 -1
  %21 = int.add %19 %20
  local.set %4 %21
  %22 = local.get %3
  %23 = const i32 1
  %24 = int.add %22 %23
  local.set %3 %24
  %25 = local.get (arg)%1
  %26 = const i32 1
  %27 = int.add %25 %26
  local.set (arg)%1 %27
  %28 = local.get (arg)%2
  %29 = const i32 1
  %30 = int.eq %28 %29
  br.cond %30 %BB:6 %BB:3

#pred = {%BB:2}
%BB:3:
  %31 = local.get %4
  local.set (arg)%2 %31
  %32 = local.get (arg)%1
  %33 = const i32 3
  %34 = int.and %32 %33
  br.cond %34 %BB:2 %BB:4

#pred = {%BB:3}
%BB:4:
  br %BB:6

#pred = {%BB:0, %entry}
%BB:5:
  %35 = local.get (arg)%2
  local.set %4 %35
  %36 = local.get (arg)%0
  local.set %3 %36
  br %BB:6

#pred = {%BB:5, %BB:4, %BB:2}
%BB:6:
  %37 = local.get %3
  %38 = const i32 3
  %39 = int.and %37 %38
  local.set (arg)%2 %39
  br.cond %39 %BB:19 %BB:7

#pred = {%BB:6}
%BB:7:
  %40 = local.get %4
  %41 = const i32 16
  %42 = int.lt.u %40 %41
  br.cond %42 %BB:11 %BB:8

#pred = {%BB:7}
%BB:8:
  br %BB:9

#pred = {%BB:9, %BB:8}
%BB:9:
  %43 = local.get %3
  %44 = local.get (arg)%1
  memory.guard %memory:0 %44 32
  %45 = load.32 i32 %memory:0 %44
  memory.guard %memory:0 %43 32
  store.32 %memory:0 %43 %45
  %46 = local.get %3
  %47 = const i32 4
  %48 = int.add %46 %47
  %49 = local.get (arg)%1
  %50 = const i32 4
  %51 = int.add %49 %50
  memory.guard %memory:0 %51 32
  %52 = load.32 i32 %memory:0 %51
  memory.guard %memory:0 %48 32
  store.32 %memory:0 %48 %52
  %53 = local.get %3
  %54 = const i32 8
  %55 = int.add %53 %54
  %56 = local.get (arg)%1
  %57 = const i32 8
  %58 = int.add %56 %57
  memory.guard %memory:0 %58 32
  %59 = load.32 i32 %memory:0 %58
  memory.guard %memory:0 %55 32
  store.32 %memory:0 %55 %59
  %60 = local.get %3
  %61 = const i32 12
  %62 = int.add %60 %61
  %63 = local.get (arg)%1
  %64 = const i32 12
  %65 = int.add %63 %64
  memory.guard %memory:0 %65 32
  %66 = load.32 i32 %memory:0 %65
  memory.guard %memory:0 %62 32
  store.32 %memory:0 %62 %66
  %67 = local.get %3
  %68 = const i32 16
  %69 = int.add %67 %68
  local.set %3 %69
  %70 = local.get (arg)%1
  %71 = const i32 16
  %72 = int.add %70 %71
  local.set (arg)%1 %72
  %73 = local.get %4
  %74 = const i32 -16
  %75 = int.add %73 %74
  local.set %4 %75
  %76 = const i32 15
  %77 = int.gt.u %75 %76
  br.cond %77 %BB:9 %BB:10

#pred = {%BB:9}
%BB:10:
  br %BB:11

#pred = {%BB:10, %BB:7}
%BB:11:
  %78 = local.get %4
  %79 = const i32 8
  %80 = int.and %78 %79
  %81 = int.eqz %80
  br.cond %81 %BB:13 %BB:12

#pred = {%BB:11}
%BB:12:
  %82 = local.get %3
  %83 = local.get (arg)%1
  memory.guard %memory:0 %83 64
  %84 = load.64 i64 %memory:0 %83
  memory.guard %memory:0 %82 64
  store.64 %memory:0 %82 %84
  %85 = local.get (arg)%1
  %86 = const i32 8
  %87 = int.add %85 %86
  local.set (arg)%1 %87
  %88 = local.get %3
  %89 = const i32 8
  %90 = int.add %88 %89
  local.set %3 %90
  br %BB:13

#pred = {%BB:12, %BB:11}
%BB:13:
  %91 = local.get %4
  %92 = const i32 4
  %93 = int.and %91 %92
  %94 = int.eqz %93
  br.cond %94 %BB:15 %BB:14

#pred = {%BB:13}
%BB:14:
  %95 = local.get %3
  %96 = local.get (arg)%1
  memory.guard %memory:0 %96 32
  %97 = load.32 i32 %memory:0 %96
  memory.guard %memory:0 %95 32
  store.32 %memory:0 %95 %97
  %98 = local.get (arg)%1
  %99 = const i32 4
  %100 = int.add %98 %99
  local.set (arg)%1 %100
  %101 = local.get %3
  %102 = const i32 4
  %103 = int.add %101 %102
  local.set %3 %103
  br %BB:15

#pred = {%BB:14, %BB:13}
%BB:15:
  %104 = local.get %4
  %105 = const i32 2
  %106 = int.and %104 %105
  %107 = int.eqz %106
  br.cond %107 %BB:17 %BB:16

#pred = {%BB:15}
%BB:16:
  %108 = local.get %3
  %109 = local.get (arg)%1
  memory.guard %memory:0 %109 8
  %110 = load.8 i32 %memory:0 %109
  memory.guard %memory:0 %108 8
  store.8 %memory:0 %108 %110
  %111 = local.get %3
  %112 = local.get (arg)%1
  %113 = const i32 1
  %114 = int.add %112 %113
  memory.guard %memory:0 %114 8
  %115 = load.8 i32 %memory:0 %114
  %116 = const i32 1
  %117 = int.add %111 %116
  memory.guard %memory:0 %117 8
  store.8 %memory:0 %117 %115
  %118 = local.get %3
  %119 = const i32 2
  %120 = int.add %118 %119
  local.set %3 %120
  %121 = local.get (arg)%1
  %122 = const i32 2
  %123 = int.add %121 %122
  local.set (arg)%1 %123
  br %BB:17

#pred = {%BB:16, %BB:15}
%BB:17:
  %124 = local.get %4
  %125 = const i32 1
  %126 = int.and %124 %125
  %127 = int.eqz %126
  br.cond %127 %BB:40 %BB:18

#pred = {%BB:17}
%BB:18:
  %128 = local.get %3
  %129 = local.get (arg)%1
  memory.guard %memory:0 %129 8
  %130 = load.8 i32 %memory:0 %129
  memory.guard %memory:0 %128 8
  store.8 %memory:0 %128 %130
  %131 = local.get (arg)%0
  br %exit

#pred = {%BB:6}
%BB:19:
  %132 = local.get %4
  %133 = const i32 32
  %134 = int.lt.u %132 %133
  br.cond %134 %BB:30 %BB:20

#pred = {%BB:19}
%BB:20:
  %135 = local.get (arg)%2
  %136 = const i32 -1
  %137 = int.add %135 %136
  br.table %BB:30 0:%BB:21 1:%BB:24 2:%BB:27

#pred = {%BB:20}
%BB:21:
  %138 = local.get %3
  %139 = local.get (arg)%1
  %140 = const i32 1
  %141 = int.add %139 %140
  memory.guard %memory:0 %141 8
  %142 = load.8 i32 %memory:0 %141
  %143 = const i32 1
  %144 = int.add %138 %143
  memory.guard %memory:0 %144 8
  store.8 %memory:0 %144 %142
  %145 = local.get %3
  %146 = local.get (arg)%1
  memory.guard %memory:0 %146 32
  %147 = load.32 i32 %memory:0 %146
  local.set %5 %147
  memory.guard %memory:0 %145 8
  store.8 %memory:0 %145 %147
  %148 = local.get %3
  %149 = local.get (arg)%1
  %150 = const i32 2
  %151 = int.add %149 %150
  memory.guard %memory:0 %151 8
  %152 = load.8 i32 %memory:0 %151
  %153 = const i32 2
  %154 = int.add %148 %153
  memory.guard %memory:0 %154 8
  store.8 %memory:0 %154 %152
  %155 = local.get %4
  %156 = const i32 -3
  %157 = int.add %155 %156
  local.set %4 %157
  %158 = local.get %3
  %159 = const i32 3
  %160 = int.add %158 %159
  local.set %6 %160
  %161 = const i32 0
  local.set (arg)%2 %161
  br %BB:22

#pred = {%BB:22, %BB:21}
%BB:22:
  %162 = local.get %6
  %163 = local.get (arg)%2
  %164 = int.add %162 %163
  local.set %3 %164
  %165 = local.get (arg)%1
  %166 = local.get (arg)%2
  %167 = int.add %165 %166
  local.set %7 %167
  %168 = const i32 4
  %169 = int.add %167 %168
  memory.guard %memory:0 %169 32
  %170 = load.32 i32 %memory:0 %169
  local.set %8 %170
  %171 = const i32 8
  %172 = int.shl %170 %171
  %173 = local.get %5
  %174 = const i32 24
  %175 = int.shr.u %173 %174
  %176 = int.or %172 %175
  memory.guard %memory:0 %164 32
  store.32 %memory:0 %164 %176
  %177 = local.get %3
  %178 = const i32 4
  %179 = int.add %177 %178
  %180 = local.get %7
  %181 = const i32 8
  %182 = int.add %180 %181
  memory.guard %memory:0 %182 32
  %183 = load.32 i32 %memory:0 %182
  local.set %5 %183
  %184 = const i32 8
  %185 = int.shl %183 %184
  %186 = local.get %8
  %187 = const i32 24
  %188 = int.shr.u %186 %187
  %189 = int.or %185 %188
  memory.guard %memory:0 %179 32
  store.32 %memory:0 %179 %189
  %190 = local.get %3
  %191 = const i32 8
  %192 = int.add %190 %191
  %193 = local.get %7
  %194 = const i32 12
  %195 = int.add %193 %194
  memory.guard %memory:0 %195 32
  %196 = load.32 i32 %memory:0 %195
  local.set %8 %196
  %197 = const i32 8
  %198 = int.shl %196 %197
  %199 = local.get %5
  %200 = const i32 24
  %201 = int.shr.u %199 %200
  %202 = int.or %198 %201
  memory.guard %memory:0 %192 32
  store.32 %memory:0 %192 %202
  %203 = local.get %3
  %204 = const i32 12
  %205 = int.add %203 %204
  %206 = local.get %7
  %207 = const i32 16
  %208 = int.add %206 %207
  memory.guard %memory:0 %208 32
  %209 = load.32 i32 %memory:0 %208
  local.set %5 %209
  %210 = const i32 8
  %211 = int.shl %209 %210
  %212 = local.get %8
  %213 = const i32 24
  %214 = int.shr.u %212 %213
  %215 = int.or %211 %214
  memory.guard %memory:0 %205 32
  store.32 %memory:0 %205 %215
  %216 = local.get (arg)%2
  %217 = const i32 16
  %218 = int.add %216 %217
  local.set (arg)%2 %218
  %219 = local.get %4
  %220 = const i32 -16
  %221 = int.add %219 %220
  local.set %4 %221
  %222 = const i32 16
  %223 = int.gt.u %221 %222
  br.cond %223 %BB:22 %BB:23

#pred = {%BB:22}
%BB:23:
  %224 = local.get %6
  %225 = local.get (arg)%2
  %226 = int.add %224 %225
  local.set %3 %226
  %227 = local.get (arg)%1
  %228 = local.get (arg)%2
  %229 = int.add %227 %228
  %230 = const i32 3
  %231 = int.add %229 %230
  local.set (arg)%1 %231
  br %BB:30

#pred = {%BB:20}
%BB:24:
  %232 = local.get %3
  %233 = local.get (arg)%1
  memory.guard %memory:0 %233 32
  %234 = load.32 i32 %memory:0 %233
  local.set %5 %234
  memory.guard %memory:0 %232 8
  store.8 %memory:0 %232 %234
  %235 = local.get %3
  %236 = local.get (arg)%1
  %237 = const i32 1
  %238 = int.add %236 %237
  memory.guard %memory:0 %238 8
  %239 = load.8 i32 %memory:0 %238
  %240 = const i32 1
  %241 = int.add %235 %240
  memory.guard %memory:0 %241 8
  store.8 %memory:0 %241 %239
  %242 = local.get %4
  %243 = const i32 -2
  %244 = int.add %242 %243
  local.set %4 %244
  %245 = local.get %3
  %246 = const i32 2
  %247 = int.add %245 %246
  local.set %6 %247
  %248 = const i32 0
  local.set (arg)%2 %248
  br %BB:25

#pred = {%BB:25, %BB:24}
%BB:25:
  %249 = local.get %6
  %250 = local.get (arg)%2
  %251 = int.add %249 %250
  local.set %3 %251
  %252 = local.get (arg)%1
  %253 = local.get (arg)%2
  %254 = int.add %252 %253
  local.set %7 %254
  %255 = const i32 4
  %256 = int.add %254 %255
  memory.guard %memory:0 %256 32
  %257 = load.32 i32 %memory:0 %256
  local.set %8 %257
  %258 = const i32 16
  %259 = int.shl %257 %258
  %260 = local.get %5
  %261 = const i32 16
  %262 = int.shr.u %260 %261
  %263 = int.or %259 %262
  memory.guard %memory:0 %251 32
  store.32 %memory:0 %251 %263
  %264 = local.get %3
  %265 = const i32 4
  %266 = int.add %264 %265
  %267 = local.get %7
  %268 = const i32 8
  %269 = int.add %267 %268
  memory.guard %memory:0 %269 32
  %270 = load.32 i32 %memory:0 %269
  local.set %5 %270
  %271 = const i32 16
  %272 = int.shl %270 %271
  %273 = local.get %8
  %274 = const i32 16
  %275 = int.shr.u %273 %274
  %276 = int.or %272 %275
  memory.guard %memory:0 %266 32
  store.32 %memory:0 %266 %276
  %277 = local.get %3
  %278 = const i32 8
  %279 = int.add %277 %278
  %280 = local.get %7
  %281 = const i32 12
  %282 = int.add %280 %281
  memory.guard %memory:0 %282 32
  %283 = load.32 i32 %memory:0 %282
  local.set %8 %283
  %284 = const i32 16
  %285 = int.shl %283 %284
  %286 = local.get %5
  %287 = const i32 16
  %288 = int.shr.u %286 %287
  %289 = int.or %285 %288
  memory.guard %memory:0 %279 32
  store.32 %memory:0 %279 %289
  %290 = local.get %3
  %291 = const i32 12
  %292 = int.add %290 %291
  %293 = local.get %7
  %294 = const i32 16
  %295 = int.add %293 %294
  memory.guard %memory:0 %295 32
  %296 = load.32 i32 %memory:0 %295
  local.set %5 %296
  %297 = const i32 16
  %298 = int.shl %296 %297
  %299 = local.get %8
  %300 = const i32 16
  %301 = int.shr.u %299 %300
  %302 = int.or %298 %301
  memory.guard %memory:0 %292 32
  store.32 %memory:0 %292 %302
  %303 = local.get (arg)%2
  %304 = const i32 16
  %305 = int.add %303 %304
  local.set (arg)%2 %305
  %306 = local.get %4
  %307 = const i32 -16
  %308 = int.add %306 %307
  local.set %4 %308
  %309 = const i32 17
  %310 = int.gt.u %308 %309
  br.cond %310 %BB:25 %BB:26

#pred = {%BB:25}
%BB:26:
  %311 = local.get %6
  %312 = local.get (arg)%2
  %313 = int.add %311 %312
  local.set %3 %313
  %314 = local.get (arg)%1
  %315 = local.get (arg)%2
  %316 = int.add %314 %315
  %317 = const i32 2
  %318 = int.add %316 %317
  local.set (arg)%1 %318
  br %BB:30

#pred = {%BB:20}
%BB:27:
  %319 = local.get %3
  %320 = local.get (arg)%1
  memory.guard %memory:0 %320 32
  %321 = load.32 i32 %memory:0 %320
  local.set %5 %321
  memory.guard %memory:0 %319 8
  store.8 %memory:0 %319 %321
  %322 = local.get %4
  %323 = const i32 -1
  %324 = int.add %322 %323
  local.set %4 %324
  %325 = local.get %3
  %326 = const i32 1
  %327 = int.add %325 %326
  local.set %6 %327
  %328 = const i32 0
  local.set (arg)%2 %328
  br %BB:28

#pred = {%BB:28, %BB:27}
%BB:28:
  %329 = local.get %6
  %330 = local.get (arg)%2
  %331 = int.add %329 %330
  local.set %3 %331
  %332 = local.get (arg)%1
  %333 = local.get (arg)%2
  %334 = int.add %332 %333
  local.set %7 %334
  %335 = const i32 4
  %336 = int.add %334 %335
  memory.guard %memory:0 %336 32
  %337 = load.32 i32 %memory:0 %336
  local.set %8 %337
  %338 = const i32 24
  %339 = int.shl %337 %338
  %340 = local.get %5
  %341 = const i32 8
  %342 = int.shr.u %340 %341
  %343 = int.or %339 %342
  memory.guard %memory:0 %331 32
  store.32 %memory:0 %331 %343
  %344 = local.get %3
  %345 = const i32 4
  %346 = int.add %344 %345
  %347 = local.get %7
  %348 = const i32 8
  %349 = int.add %347 %348
  memory.guard %memory:0 %349 32
  %350 = load.32 i32 %memory:0 %349
  local.set %5 %350
  %351 = const i32 24
  %352 = int.shl %350 %351
  %353 = local.get %8
  %354 = const i32 8
  %355 = int.shr.u %353 %354
  %356 = int.or %352 %355
  memory.guard %memory:0 %346 32
  store.32 %memory:0 %346 %356
  %357 = local.get %3
  %358 = const i32 8
  %359 = int.add %357 %358
  %360 = local.get %7
  %361 = const i32 12
  %362 = int.add %360 %361
  memory.guard %memory:0 %362 32
  %363 = load.32 i32 %memory:0 %362
  local.set %8 %363
  %364 = const i32 24
  %365 = int.shl %363 %364
  %366 = local.get %5
  %367 = const i32 8
  %368 = int.shr.u %366 %367
  %369 = int.or %365 %368
  memory.guard %memory:0 %359 32
  store.32 %memory:0 %359 %369
  %370 = local.get %3
  %371 = const i32 12
  %372 = int.add %370 %371
  %373 = local.get %7
  %374 = const i32 16
  %375 = int.add %373 %374
  memory.guard %memory:0 %375 32
  %376 = load.32 i32 %memory:0 %375
  local.set %5 %376
  %377 = const i32 24
  %378 = int.shl %376 %377
  %379 = local.get %8
  %380 = const i32 8
  %381 = int.shr.u %379 %380
  %382 = int.or %378 %381
  memory.guard %memory:0 %372 32
  store.32 %memory:0 %372 %382
  %383 = local.get (arg)%2
  %384 = const i32 16
  %385 = int.add %383 %384
  local.set (arg)%2 %385
  %386 = local.get %4
  %387 = const i32 -16
  %388 = int.add %386 %387
  local.set %4 %388
  %389 = const i32 18
  %390 = int.gt.u %388 %389
  br.cond %390 %BB:28 %BB:29

#pred = {%BB:28}
%BB:29:
  %391 = local.get %6
  %392 = local.get (arg)%2
  %393 = int.add %391 %392
  local.set %3 %393
  %394 = local.get (arg)%1
  %395 = local.get (arg)%2
  %396 = int.add %394 %395
  %397 = const i32 1
  %398 = int.add %396 %397
  local.set (arg)%1 %398
  br %BB:30

#pred = {%BB:29, %BB:20, %BB:26, %BB:19, %BB:23}
%BB:30:
  %399 = local.get %4
  %400 = const i32 16
  %401 = int.and %399 %400
  %402 = int.eqz %401
  br.cond %402 %BB:32 %BB:31

#pred = {%BB:30}
%BB:31:
  %403 = local.get %3
  %404 = local.get (arg)%1
  memory.guard %memory:0 %404 16
  %405 = load.16 i32 %memory:0 %404
  memory.guard %memory:0 %403 16
  store.16 %memory:0 %403 %405
  %406 = local.get %3
  %407 = local.get (arg)%1
  %408 = const i32 2
  %409 = int.add %407 %408
  memory.guard %memory:0 %409 8
  %410 = load.8 i32 %memory:0 %409
  %411 = const i32 2
  %412 = int.add %406 %411
  memory.guard %memory:0 %412 8
  store.8 %memory:0 %412 %410
  %413 = local.get %3
  %414 = local.get (arg)%1
  %415 = const i32 3
  %416 = int.add %414 %415
  memory.guard %memory:0 %416 8
  %417 = load.8 i32 %memory:0 %416
  %418 = const i32 3
  %419 = int.add %413 %418
  memory.guard %memory:0 %419 8
  store.8 %memory:0 %419 %417
  %420 = local.get %3
  %421 = local.get (arg)%1
  %422 = const i32 4
  %423 = int.add %421 %422
  memory.guard %memory:0 %423 8
  %424 = load.8 i32 %memory:0 %423
  %425 = const i32 4
  %426 = int.add %420 %425
  memory.guard %memory:0 %426 8
  store.8 %memory:0 %426 %424
  %427 = local.get %3
  %428 = local.get (arg)%1
  %429 = const i32 5
  %430 = int.add %428 %429
  memory.guard %memory:0 %430 8
  %431 = load.8 i32 %memory:0 %430
  %432 = const i32 5
  %433 = int.add %427 %432
  memory.guard %memory:0 %433 8
  store.8 %memory:0 %433 %431
  %434 = local.get %3
  %435 = local.get (arg)%1
  %436 = const i32 6
  %437 = int.add %435 %436
  memory.guard %memory:0 %437 8
  %438 = load.8 i32 %memory:0 %437
  %439 = const i32 6
  %440 = int.add %434 %439
  memory.guard %memory:0 %440 8
  store.8 %memory:0 %440 %438
  %441 = local.get %3
  %442 = local.get (arg)%1
  %443 = const i32 7
  %444 = int.add %442 %443
  memory.guard %memory:0 %444 8
  %445 = load.8 i32 %memory:0 %444
  %446 = const i32 7
  %447 = int.add %441 %446
  memory.guard %memory:0 %447 8
  store.8 %memory:0 %447 %445
  %448 = local.get %3
  %449 = local.get (arg)%1
  %450 = const i32 8
  %451 = int.add %449 %450
  memory.guard %memory:0 %451 8
  %452 = load.8 i32 %memory:0 %451
  %453 = const i32 8
  %454 = int.add %448 %453
  memory.guard %memory:0 %454 8
  store.8 %memory:0 %454 %452
  %455 = local.get %3
  %456 = local.get (arg)%1
  %457 = const i32 9
  %458 = int.add %456 %457
  memory.guard %memory:0 %458 8
  %459 = load.8 i32 %memory:0 %458
  %460 = const i32 9
  %461 = int.add %455 %460
  memory.guard %memory:0 %461 8
  store.8 %memory:0 %461 %459
  %462 = local.get %3
  %463 = local.get (arg)%1
  %464 = const i32 10
  %465 = int.add %463 %464
  memory.guard %memory:0 %465 8
  %466 = load.8 i32 %memory:0 %465
  %467 = const i32 10
  %468 = int.add %462 %467
  memory.guard %memory:0 %468 8
  store.8 %memory:0 %468 %466
  %469 = local.get %3
  %470 = local.get (arg)%1
  %471 = const i32 11
  %472 = int.add %470 %471
  memory.guard %memory:0 %472 8
  %473 = load.8 i32 %memory:0 %472
  %474 = const i32 11
  %475 = int.add %469 %474
  memory.guard %memory:0 %475 8
  store.8 %memory:0 %475 %473
  %476 = local.get %3
  %477 = local.get (arg)%1
  %478 = const i32 12
  %479 = int.add %477 %478
  memory.guard %memory:0 %479 8
  %480 = load.8 i32 %memory:0 %479
  %481 = const i32 12
  %482 = int.add %476 %481
  memory.guard %memory:0 %482 8
  store.8 %memory:0 %482 %480
  %483 = local.get %3
  %484 = local.get (arg)%1
  %485 = const i32 13
  %486 = int.add %484 %485
  memory.guard %memory:0 %486 8
  %487 = load.8 i32 %memory:0 %486
  %488 = const i32 13
  %489 = int.add %483 %488
  memory.guard %memory:0 %489 8
  store.8 %memory:0 %489 %487
  %490 = local.get %3
  %491 = local.get (arg)%1
  %492 = const i32 14
  %493 = int.add %491 %492
  memory.guard %memory:0 %493 8
  %494 = load.8 i32 %memory:0 %493
  %495 = const i32 14
  %496 = int.add %490 %495
  memory.guard %memory:0 %496 8
  store.8 %memory:0 %496 %494
  %497 = local.get %3
  %498 = local.get (arg)%1
  %499 = const i32 15
  %500 = int.add %498 %499
  memory.guard %memory:0 %500 8
  %501 = load.8 i32 %memory:0 %500
  %502 = const i32 15
  %503 = int.add %497 %502
  memory.guard %memory:0 %503 8
  store.8 %memory:0 %503 %501
  %504 = local.get %3
  %505 = const i32 16
  %506 = int.add %504 %505
  local.set %3 %506
  %507 = local.get (arg)%1
  %508 = const i32 16
  %509 = int.add %507 %508
  local.set (arg)%1 %509
  br %BB:32

#pred = {%BB:31, %BB:30}
%BB:32:
  %510 = local.get %4
  %511 = const i32 8
  %512 = int.and %510 %511
  %513 = int.eqz %512
  br.cond %513 %BB:34 %BB:33

#pred = {%BB:32}
%BB:33:
  %514 = local.get %3
  %515 = local.get (arg)%1
  memory.guard %memory:0 %515 8
  %516 = load.8 i32 %memory:0 %515
  memory.guard %memory:0 %514 8
  store.8 %memory:0 %514 %516
  %517 = local.get %3
  %518 = local.get (arg)%1
  %519 = const i32 1
  %520 = int.add %518 %519
  memory.guard %memory:0 %520 8
  %521 = load.8 i32 %memory:0 %520
  %522 = const i32 1
  %523 = int.add %517 %522
  memory.guard %memory:0 %523 8
  store.8 %memory:0 %523 %521
  %524 = local.get %3
  %525 = local.get (arg)%1
  %526 = const i32 2
  %527 = int.add %525 %526
  memory.guard %memory:0 %527 8
  %528 = load.8 i32 %memory:0 %527
  %529 = const i32 2
  %530 = int.add %524 %529
  memory.guard %memory:0 %530 8
  store.8 %memory:0 %530 %528
  %531 = local.get %3
  %532 = local.get (arg)%1
  %533 = const i32 3
  %534 = int.add %532 %533
  memory.guard %memory:0 %534 8
  %535 = load.8 i32 %memory:0 %534
  %536 = const i32 3
  %537 = int.add %531 %536
  memory.guard %memory:0 %537 8
  store.8 %memory:0 %537 %535
  %538 = local.get %3
  %539 = local.get (arg)%1
  %540 = const i32 4
  %541 = int.add %539 %540
  memory.guard %memory:0 %541 8
  %542 = load.8 i32 %memory:0 %541
  %543 = const i32 4
  %544 = int.add %538 %543
  memory.guard %memory:0 %544 8
  store.8 %memory:0 %544 %542
  %545 = local.get %3
  %546 = local.get (arg)%1
  %547 = const i32 5
  %548 = int.add %546 %547
  memory.guard %memory:0 %548 8
  %549 = load.8 i32 %memory:0 %548
  %550 = const i32 5
  %551 = int.add %545 %550
  memory.guard %memory:0 %551 8
  store.8 %memory:0 %551 %549
  %552 = local.get %3
  %553 = local.get (arg)%1
  %554 = const i32 6
  %555 = int.add %553 %554
  memory.guard %memory:0 %555 8
  %556 = load.8 i32 %memory:0 %555
  %557 = const i32 6
  %558 = int.add %552 %557
  memory.guard %memory:0 %558 8
  store.8 %memory:0 %558 %556
  %559 = local.get %3
  %560 = local.get (arg)%1
  %561 = const i32 7
  %562 = int.add %560 %561
  memory.guard %memory:0 %562 8
  %563 = load.8 i32 %memory:0 %562
  %564 = const i32 7
  %565 = int.add %559 %564
  memory.guard %memory:0 %565 8
  store.8 %memory:0 %565 %563
  %566 = local.get %3
  %567 = const i32 8
  %568 = int.add %566 %567
  local.set %3 %568
  %569 = local.get (arg)%1
  %570 = const i32 8
  %571 = int.add %569 %570
  local.set (arg)%1 %571
  br %BB:34

#pred = {%BB:33, %BB:32}
%BB:34:
  %572 = local.get %4
  %573 = const i32 4
  %574 = int.and %572 %573
  %575 = int.eqz %574
  br.cond %575 %BB:36 %BB:35

#pred = {%BB:34}
%BB:35:
  %576 = local.get %3
  %577 = local.get (arg)%1
  memory.guard %memory:0 %577 8
  %578 = load.8 i32 %memory:0 %577
  memory.guard %memory:0 %576 8
  store.8 %memory:0 %576 %578
  %579 = local.get %3
  %580 = local.get (arg)%1
  %581 = const i32 1
  %582 = int.add %580 %581
  memory.guard %memory:0 %582 8
  %583 = load.8 i32 %memory:0 %582
  %584 = const i32 1
  %585 = int.add %579 %584
  memory.guard %memory:0 %585 8
  store.8 %memory:0 %585 %583
  %586 = local.get %3
  %587 = local.get (arg)%1
  %588 = const i32 2
  %589 = int.add %587 %588
  memory.guard %memory:0 %589 8
  %590 = load.8 i32 %memory:0 %589
  %591 = const i32 2
  %592 = int.add %586 %591
  memory.guard %memory:0 %592 8
  store.8 %memory:0 %592 %590
  %593 = local.get %3
  %594 = local.get (arg)%1
  %595 = const i32 3
  %596 = int.add %594 %595
  memory.guard %memory:0 %596 8
  %597 = load.8 i32 %memory:0 %596
  %598 = const i32 3
  %599 = int.add %593 %598
  memory.guard %memory:0 %599 8
  store.8 %memory:0 %599 %597
  %600 = local.get %3
  %601 = const i32 4
  %602 = int.add %600 %601
  local.set %3 %602
  %603 = local.get (arg)%1
  %604 = const i32 4
  %605 = int.add %603 %604
  local.set (arg)%1 %605
  br %BB:36

#pred = {%BB:35, %BB:34}
%BB:36:
  %606 = local.get %4
  %607 = const i32 2
  %608 = int.and %606 %607
  %609 = int.eqz %608
  br.cond %609 %BB:38 %BB:37

#pred = {%BB:36}
%BB:37:
  %610 = local.get %3
  %611 = local.get (arg)%1
  memory.guard %memory:0 %611 8
  %612 = load.8 i32 %memory:0 %611
  memory.guard %memory:0 %610 8
  store.8 %memory:0 %610 %612
  %613 = local.get %3
  %614 = local.get (arg)%1
  %615 = const i32 1
  %616 = int.add %614 %615
  memory.guard %memory:0 %616 8
  %617 = load.8 i32 %memory:0 %616
  %618 = const i32 1
  %619 = int.add %613 %618
  memory.guard %memory:0 %619 8
  store.8 %memory:0 %619 %617
  %620 = local.get %3
  %621 = const i32 2
  %622 = int.add %620 %621
  local.set %3 %622
  %623 = local.get (arg)%1
  %624 = const i32 2
  %625 = int.add %623 %624
  local.set (arg)%1 %625
  br %BB:38

#pred = {%BB:37, %BB:36}
%BB:38:
  %626 = local.get %4
  %627 = const i32 1
  %628 = int.and %626 %627
  %629 = int.eqz %628
  br.cond %629 %BB:40 %BB:39

#pred = {%BB:38}
%BB:39:
  %630 = local.get %3
  %631 = local.get (arg)%1
  memory.guard %memory:0 %631 8
  %632 = load.8 i32 %memory:0 %631
  memory.guard %memory:0 %630 8
  store.8 %memory:0 %630 %632
  br %BB:40

#pred = {%BB:39, %BB:38, %BB:17}
%BB:40:
  %633 = local.get (arg)%0
  br %exit

#pred = {%BB:40, %BB:18}
%exit:
  %634 = phi i32 [%131, %BB:18] [%633, %BB:40]
  ret %634

}

function %function:96 : [i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32}
#pred = {}
%entry:
  %2 = local.get (arg)%0
  %3 = const i32 0
  %4 = local.get (arg)%1
  %5 = call %function:97(%2, %3, %4)
  local.set (arg)%0 %5
  ret

}

function %function:97 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, %3:i32, %4:i32, %5:i32, %6:i64}
#pred = {}
%entry:
  %7 = local.get (arg)%2
  %8 = int.eqz %7
  br.cond %8 %BB:9 %BB:0

#pred = {%entry}
%BB:0:
  %9 = local.get (arg)%0
  %10 = local.get (arg)%1
  memory.guard %memory:0 %9 8
  store.8 %memory:0 %9 %10
  %11 = local.get (arg)%2
  %12 = local.get (arg)%0
  %13 = int.add %11 %12
  local.set %3 %13
  %14 = const i32 -1
  %15 = int.add %13 %14
  %16 = local.get (arg)%1
  memory.guard %memory:0 %15 8
  store.8 %memory:0 %15 %16
  %17 = local.get (arg)%2
  %18 = const i32 3
  %19 = int.lt.u %17 %18
  br.cond %19 %BB:9 %BB:1

#pred = {%BB:0}
%BB:1:
  %20 = local.get (arg)%0
  %21 = local.get (arg)%1
  %22 = const i32 2
  %23 = int.add %20 %22
  memory.guard %memory:0 %23 8
  store.8 %memory:0 %23 %21
  %24 = local.get (arg)%0
  %25 = local.get (arg)%1
  %26 = const i32 1
  %27 = int.add %24 %26
  memory.guard %memory:0 %27 8
  store.8 %memory:0 %27 %25
  %28 = local.get %3
  %29 = const i32 -3
  %30 = int.add %28 %29
  %31 = local.get (arg)%1
  memory.guard %memory:0 %30 8
  store.8 %memory:0 %30 %31
  %32 = local.get %3
  %33 = const i32 -2
  %34 = int.add %32 %33
  %35 = local.get (arg)%1
  memory.guard %memory:0 %34 8
  store.8 %memory:0 %34 %35
  %36 = local.get (arg)%2
  %37 = const i32 7
  %38 = int.lt.u %36 %37
  br.cond %38 %BB:9 %BB:2

#pred = {%BB:1}
%BB:2:
  %39 = local.get (arg)%0
  %40 = local.get (arg)%1
  %41 = const i32 3
  %42 = int.add %39 %41
  memory.guard %memory:0 %42 8
  store.8 %memory:0 %42 %40
  %43 = local.get %3
  %44 = const i32 -4
  %45 = int.add %43 %44
  %46 = local.get (arg)%1
  memory.guard %memory:0 %45 8
  store.8 %memory:0 %45 %46
  %47 = local.get (arg)%2
  %48 = const i32 9
  %49 = int.lt.u %47 %48
  br.cond %49 %BB:9 %BB:3

#pred = {%BB:2}
%BB:3:
  %50 = local.get (arg)%0
  %51 = const i32 0
  %52 = local.get (arg)%0
  %53 = int.sub %51 %52
  %54 = const i32 3
  %55 = int.and %53 %54
  local.set %4 %55
  %56 = int.add %50 %55
  local.set %3 %56
  %57 = local.get (arg)%1
  %58 = const i32 255
  %59 = int.and %57 %58
  %60 = const i32 16843009
  %61 = int.mul %59 %60
  local.set (arg)%1 %61
  memory.guard %memory:0 %56 32
  store.32 %memory:0 %56 %61
  %62 = local.get %3
  %63 = local.get (arg)%2
  %64 = local.get %4
  %65 = int.sub %63 %64
  %66 = const i32 -4
  %67 = int.and %65 %66
  local.set %4 %67
  %68 = int.add %62 %67
  local.set (arg)%2 %68
  %69 = const i32 -4
  %70 = int.add %68 %69
  %71 = local.get (arg)%1
  memory.guard %memory:0 %70 32
  store.32 %memory:0 %70 %71
  %72 = local.get %4
  %73 = const i32 9
  %74 = int.lt.u %72 %73
  br.cond %74 %BB:9 %BB:4

#pred = {%BB:3}
%BB:4:
  %75 = local.get %3
  %76 = local.get (arg)%1
  %77 = const i32 8
  %78 = int.add %75 %77
  memory.guard %memory:0 %78 32
  store.32 %memory:0 %78 %76
  %79 = local.get %3
  %80 = local.get (arg)%1
  %81 = const i32 4
  %82 = int.add %79 %81
  memory.guard %memory:0 %82 32
  store.32 %memory:0 %82 %80
  %83 = local.get (arg)%2
  %84 = const i32 -8
  %85 = int.add %83 %84
  %86 = local.get (arg)%1
  memory.guard %memory:0 %85 32
  store.32 %memory:0 %85 %86
  %87 = local.get (arg)%2
  %88 = const i32 -12
  %89 = int.add %87 %88
  %90 = local.get (arg)%1
  memory.guard %memory:0 %89 32
  store.32 %memory:0 %89 %90
  %91 = local.get %4
  %92 = const i32 25
  %93 = int.lt.u %91 %92
  br.cond %93 %BB:9 %BB:5

#pred = {%BB:4}
%BB:5:
  %94 = local.get %3
  %95 = local.get (arg)%1
  %96 = const i32 24
  %97 = int.add %94 %96
  memory.guard %memory:0 %97 32
  store.32 %memory:0 %97 %95
  %98 = local.get %3
  %99 = local.get (arg)%1
  %100 = const i32 20
  %101 = int.add %98 %100
  memory.guard %memory:0 %101 32
  store.32 %memory:0 %101 %99
  %102 = local.get %3
  %103 = local.get (arg)%1
  %104 = const i32 16
  %105 = int.add %102 %104
  memory.guard %memory:0 %105 32
  store.32 %memory:0 %105 %103
  %106 = local.get %3
  %107 = local.get (arg)%1
  %108 = const i32 12
  %109 = int.add %106 %108
  memory.guard %memory:0 %109 32
  store.32 %memory:0 %109 %107
  %110 = local.get (arg)%2
  %111 = const i32 -16
  %112 = int.add %110 %111
  %113 = local.get (arg)%1
  memory.guard %memory:0 %112 32
  store.32 %memory:0 %112 %113
  %114 = local.get (arg)%2
  %115 = const i32 -20
  %116 = int.add %114 %115
  %117 = local.get (arg)%1
  memory.guard %memory:0 %116 32
  store.32 %memory:0 %116 %117
  %118 = local.get (arg)%2
  %119 = const i32 -24
  %120 = int.add %118 %119
  %121 = local.get (arg)%1
  memory.guard %memory:0 %120 32
  store.32 %memory:0 %120 %121
  %122 = local.get (arg)%2
  %123 = const i32 -28
  %124 = int.add %122 %123
  %125 = local.get (arg)%1
  memory.guard %memory:0 %124 32
  store.32 %memory:0 %124 %125
  %126 = local.get %4
  %127 = local.get %3
  %128 = const i32 4
  %129 = int.and %127 %128
  %130 = const i32 24
  %131 = int.or %129 %130
  local.set %5 %131
  %132 = int.sub %126 %131
  local.set (arg)%2 %132
  %133 = const i32 32
  %134 = int.lt.u %132 %133
  br.cond %134 %BB:9 %BB:6

#pred = {%BB:5}
%BB:6:
  %135 = local.get (arg)%1
  %136 = cast.u i64 %135
  local.set %6 %136
  %137 = const i64 32
  %138 = int.shl %136 %137
  %139 = local.get %6
  %140 = int.or %138 %139
  local.set %6 %140
  %141 = local.get %3
  %142 = local.get %5
  %143 = int.add %141 %142
  local.set (arg)%1 %143
  br %BB:7

#pred = {%BB:7, %BB:6}
%BB:7:
  %144 = local.get (arg)%1
  %145 = local.get %6
  memory.guard %memory:0 %144 64
  store.64 %memory:0 %144 %145
  %146 = local.get (arg)%1
  %147 = const i32 24
  %148 = int.add %146 %147
  %149 = local.get %6
  memory.guard %memory:0 %148 64
  store.64 %memory:0 %148 %149
  %150 = local.get (arg)%1
  %151 = const i32 16
  %152 = int.add %150 %151
  %153 = local.get %6
  memory.guard %memory:0 %152 64
  store.64 %memory:0 %152 %153
  %154 = local.get (arg)%1
  %155 = const i32 8
  %156 = int.add %154 %155
  %157 = local.get %6
  memory.guard %memory:0 %156 64
  store.64 %memory:0 %156 %157
  %158 = local.get (arg)%1
  %159 = const i32 32
  %160 = int.add %158 %159
  local.set (arg)%1 %160
  %161 = local.get (arg)%2
  %162 = const i32 -32
  %163 = int.add %161 %162
  local.set (arg)%2 %163
  %164 = const i32 31
  %165 = int.gt.u %163 %164
  br.cond %165 %BB:7 %BB:8

#pred = {%BB:7}
%BB:8:
  br %BB:9

#pred = {%BB:8, %BB:0, %BB:2, %entry, %BB:3, %BB:5, %BB:4, %BB:1}
%BB:9:
  %166 = local.get (arg)%0
  ret %166

}

function %function:98 : [i32] -> [i32] {
{(arg)%0:i32, %1:i32, %2:i32, %3:i32}
#pred = {}
%entry:
  %4 = local.get (arg)%0
  local.set %1 %4
  %5 = local.get (arg)%0
  %6 = const i32 3
  %7 = int.and %5 %6
  %8 = int.eqz %7
  br.cond %8 %BB:6 %BB:0

#pred = {%entry}
%BB:0:
  %9 = local.get (arg)%0
  memory.guard %memory:0 %9 8
  %10 = load.8 i32 %memory:0 %9
  br.cond %10 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  %11 = local.get (arg)%0
  %12 = local.get (arg)%0
  %13 = int.sub %11 %12
  br %exit

#pred = {%BB:0}
%BB:2:
  %14 = local.get (arg)%0
  %15 = const i32 1
  %16 = int.add %14 %15
  local.set %1 %16
  br %BB:3

#pred = {%BB:5, %BB:2}
%BB:3:
  %17 = local.get %1
  %18 = const i32 3
  %19 = int.and %17 %18
  %20 = int.eqz %19
  br.cond %20 %BB:6 %BB:4

#pred = {%BB:3}
%BB:4:
  %21 = local.get %1
  memory.guard %memory:0 %21 8
  %22 = load.8 i32 %memory:0 %21
  local.set %2 %22
  %23 = local.get %1
  %24 = const i32 1
  %25 = int.add %23 %24
  local.set %3 %25
  local.set %1 %25
  %26 = local.get %2
  %27 = int.eqz %26
  br.cond %27 %BB:13 %BB:5

#pred = {%BB:4}
%BB:5:
  br %BB:3

#pred = {%BB:3, %entry}
%BB:6:
  %28 = local.get %1
  %29 = const i32 -4
  %30 = int.add %28 %29
  local.set %1 %30
  br %BB:7

#pred = {%BB:7, %BB:6}
%BB:7:
  %31 = local.get %1
  %32 = const i32 4
  %33 = int.add %31 %32
  local.set %1 %33
  memory.guard %memory:0 %33 32
  %34 = load.32 i32 %memory:0 %33
  local.set %2 %34
  %35 = const i32 -1
  %36 = int.xor %34 %35
  %37 = local.get %2
  %38 = const i32 -16843009
  %39 = int.add %37 %38
  %40 = int.and %36 %39
  %41 = const i32 -2139062144
  %42 = int.and %40 %41
  %43 = int.eqz %42
  br.cond %43 %BB:7 %BB:8

#pred = {%BB:7}
%BB:8:
  %44 = local.get %2
  %45 = const i32 255
  %46 = int.and %44 %45
  br.cond %46 %BB:10 %BB:9

#pred = {%BB:8}
%BB:9:
  %47 = local.get %1
  %48 = local.get (arg)%0
  %49 = int.sub %47 %48
  br %exit

#pred = {%BB:8}
%BB:10:
  br %BB:11

#pred = {%BB:11, %BB:10}
%BB:11:
  %50 = local.get %1
  %51 = const i32 1
  %52 = int.add %50 %51
  memory.guard %memory:0 %52 8
  %53 = load.8 i32 %memory:0 %52
  local.set %2 %53
  %54 = local.get %1
  %55 = const i32 1
  %56 = int.add %54 %55
  local.set %3 %56
  local.set %1 %56
  %57 = local.get %2
  br.cond %57 %BB:11 %BB:12

#pred = {%BB:11}
%BB:12:
  br %BB:14

#pred = {%BB:4}
%BB:13:
  %58 = local.get %3
  %59 = const i32 -1
  %60 = int.add %58 %59
  local.set %3 %60
  br %BB:14

#pred = {%BB:13, %BB:12}
%BB:14:
  %61 = local.get %3
  %62 = local.get (arg)%0
  %63 = int.sub %61 %62
  br %exit

#pred = {%BB:14, %BB:9, %BB:1}
%exit:
  %64 = phi i32 [%13, %BB:1] [%49, %BB:9] [%63, %BB:14]
  ret %64

}

function %function:99 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, %3:i32, %4:i32, %5:i32}
#pred = {}
%entry:
  %6 = local.get (arg)%2
  %7 = const i32 0
  %8 = int.ne %6 %7
  local.set %3 %8
  %9 = local.get (arg)%2
  br.cond %9 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %10 = local.get (arg)%2
  local.set %4 %10
  br %BB:9

#pred = {%entry}
%BB:1:
  %11 = local.get (arg)%0
  %12 = const i32 3
  %13 = int.and %11 %12
  br.cond %13 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %14 = local.get (arg)%2
  local.set %4 %14
  br %BB:9

#pred = {%BB:1}
%BB:3:
  %15 = local.get (arg)%1
  %16 = const i32 255
  %17 = int.and %15 %16
  local.set %5 %17
  br %BB:4

#pred = {%BB:7, %BB:3}
%BB:4:
  %18 = local.get (arg)%0
  memory.guard %memory:0 %18 8
  %19 = load.8 i32 %memory:0 %18
  %20 = local.get %5
  %21 = int.ne %19 %20
  br.cond %21 %BB:6 %BB:5

#pred = {%BB:4}
%BB:5:
  %22 = local.get (arg)%2
  local.set %4 %22
  br %BB:11

#pred = {%BB:4}
%BB:6:
  %23 = local.get (arg)%2
  %24 = const i32 1
  %25 = int.ne %23 %24
  local.set %3 %25
  %26 = local.get (arg)%2
  %27 = const i32 -1
  %28 = int.add %26 %27
  local.set %4 %28
  %29 = local.get (arg)%0
  %30 = const i32 1
  %31 = int.add %29 %30
  local.set (arg)%0 %31
  %32 = local.get (arg)%2
  %33 = const i32 1
  %34 = int.eq %32 %33
  br.cond %34 %BB:9 %BB:7

#pred = {%BB:6}
%BB:7:
  %35 = local.get %4
  local.set (arg)%2 %35
  %36 = local.get (arg)%0
  %37 = const i32 3
  %38 = int.and %36 %37
  br.cond %38 %BB:4 %BB:8

#pred = {%BB:7}
%BB:8:
  br %BB:9

#pred = {%BB:8, %BB:6, %BB:2, %BB:0}
%BB:9:
  %39 = local.get %3
  %40 = int.eqz %39
  br.cond %40 %BB:23 %BB:10

#pred = {%BB:9}
%BB:10:
  br %BB:11

#pred = {%BB:10, %BB:5}
%BB:11:
  %41 = local.get (arg)%0
  memory.guard %memory:0 %41 8
  %42 = load.8 i32 %memory:0 %41
  %43 = local.get (arg)%1
  %44 = const i32 255
  %45 = int.and %43 %44
  %46 = int.eq %42 %45
  br.cond %46 %BB:17 %BB:12

#pred = {%BB:11}
%BB:12:
  %47 = local.get %4
  %48 = const i32 4
  %49 = int.lt.u %47 %48
  br.cond %49 %BB:17 %BB:13

#pred = {%BB:12}
%BB:13:
  %50 = local.get (arg)%1
  %51 = const i32 255
  %52 = int.and %50 %51
  %53 = const i32 16843009
  %54 = int.mul %52 %53
  local.set %3 %54
  br %BB:14

#pred = {%BB:15, %BB:13}
%BB:14:
  %55 = local.get (arg)%0
  memory.guard %memory:0 %55 32
  %56 = load.32 i32 %memory:0 %55
  %57 = local.get %3
  %58 = int.xor %56 %57
  local.set (arg)%2 %58
  %59 = const i32 -1
  %60 = int.xor %58 %59
  %61 = local.get (arg)%2
  %62 = const i32 -16843009
  %63 = int.add %61 %62
  %64 = int.and %60 %63
  %65 = const i32 -2139062144
  %66 = int.and %64 %65
  br.cond %66 %BB:17 %BB:15

#pred = {%BB:14}
%BB:15:
  %67 = local.get (arg)%0
  %68 = const i32 4
  %69 = int.add %67 %68
  local.set (arg)%0 %69
  %70 = local.get %4
  %71 = const i32 -4
  %72 = int.add %70 %71
  local.set %4 %72
  %73 = const i32 3
  %74 = int.gt.u %72 %73
  br.cond %74 %BB:14 %BB:16

#pred = {%BB:15}
%BB:16:
  br %BB:17

#pred = {%BB:16, %BB:14, %BB:12, %BB:11}
%BB:17:
  %75 = local.get %4
  %76 = int.eqz %75
  br.cond %76 %BB:23 %BB:18

#pred = {%BB:17}
%BB:18:
  %77 = local.get (arg)%1
  %78 = const i32 255
  %79 = int.and %77 %78
  local.set (arg)%2 %79
  br %BB:19

#pred = {%BB:21, %BB:18}
%BB:19:
  %80 = local.get (arg)%0
  memory.guard %memory:0 %80 8
  %81 = load.8 i32 %memory:0 %80
  %82 = local.get (arg)%2
  %83 = int.ne %81 %82
  br.cond %83 %BB:21 %BB:20

#pred = {%BB:19}
%BB:20:
  %84 = local.get (arg)%0
  br %exit

#pred = {%BB:19}
%BB:21:
  %85 = local.get (arg)%0
  %86 = const i32 1
  %87 = int.add %85 %86
  local.set (arg)%0 %87
  %88 = local.get %4
  %89 = const i32 -1
  %90 = int.add %88 %89
  local.set %4 %90
  br.cond %90 %BB:19 %BB:22

#pred = {%BB:21}
%BB:22:
  br %BB:23

#pred = {%BB:22, %BB:17, %BB:9}
%BB:23:
  %91 = const i32 0
  br %exit

#pred = {%BB:23, %BB:20}
%exit:
  %92 = phi i32 [%84, %BB:20] [%91, %BB:23]
  ret %92

}

function %function:100 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32}
#pred = {}
%entry:
  %2 = local.get (arg)%0
  ret %2

}

function %function:101 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32}
#pred = {}
%entry:
  %2 = local.get (arg)%0
  %3 = local.get (arg)%1
  %4 = call %function:100(%2, %3)
  ret %4

}

function %function:102 : [i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32}
#pred = {}
%entry:
  %2 = local.get (arg)%0
  br.cond %2 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %3 = const i32 0
  br %exit

#pred = {%entry}
%BB:1:
  %4 = local.get (arg)%0
  %5 = local.get (arg)%1
  %6 = const i32 0
  %7 = call %function:103(%4, %5, %6)
  br %exit

#pred = {%BB:1, %BB:0}
%exit:
  %8 = phi i32 [%3, %BB:0] [%7, %BB:1]
  ret %8

}

function %function:103 : [i32, i32, i32] -> [i32] {
{(arg)%0:i32, (arg)%1:i32, (arg)%2:i32, %3:i32}
#pred = {}
%entry:
  %4 = const i32 1
  local.set %3 %4
  %5 = local.get (arg)%0
  %6 = int.eqz %5
  br.cond %6 %BB:16 %BB:0

#pred = {%entry}
%BB:0:
  %7 = local.get (arg)%1
  %8 = const i32 127
  %9 = int.gt.u %7 %8
  br.cond %9 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  %10 = local.get (arg)%0
  %11 = local.get (arg)%1
  memory.guard %memory:0 %10 8
  store.8 %memory:0 %10 %11
  %12 = const i32 1
  br %exit

#pred = {%BB:0}
%BB:2:
  %13 = const i32 0
  %14 = const i32 80152
  %15 = int.add %13 %14
  memory.guard %memory:0 %15 32
  %16 = load.32 i32 %memory:0 %15
  br.cond %16 %BB:6 %BB:3

#pred = {%BB:2}
%BB:3:
  %17 = local.get (arg)%1
  %18 = const i32 -128
  %19 = int.and %17 %18
  %20 = const i32 57216
  %21 = int.eq %19 %20
  br.cond %21 %BB:5 %BB:4

#pred = {%BB:3}
%BB:4:
  %22 = const i32 0
  %23 = const i32 25
  %24 = const i32 79096
  %25 = int.add %22 %24
  memory.guard %memory:0 %25 32
  store.32 %memory:0 %25 %23
  br %BB:15

#pred = {%BB:3}
%BB:5:
  %26 = local.get (arg)%0
  %27 = local.get (arg)%1
  memory.guard %memory:0 %26 8
  store.8 %memory:0 %26 %27
  %28 = const i32 1
  br %exit

#pred = {%BB:2}
%BB:6:
  %29 = local.get (arg)%1
  %30 = const i32 2047
  %31 = int.gt.u %29 %30
  br.cond %31 %BB:8 %BB:7

#pred = {%BB:6}
%BB:7:
  %32 = local.get (arg)%0
  %33 = local.get (arg)%1
  %34 = const i32 63
  %35 = int.and %33 %34
  %36 = const i32 128
  %37 = int.or %35 %36
  %38 = const i32 1
  %39 = int.add %32 %38
  memory.guard %memory:0 %39 8
  store.8 %memory:0 %39 %37
  %40 = local.get (arg)%0
  %41 = local.get (arg)%1
  %42 = const i32 6
  %43 = int.shr.u %41 %42
  %44 = const i32 192
  %45 = int.or %43 %44
  memory.guard %memory:0 %40 8
  store.8 %memory:0 %40 %45
  %46 = const i32 2
  br %exit

#pred = {%BB:6}
%BB:8:
  %47 = local.get (arg)%1
  %48 = const i32 55296
  %49 = int.lt.u %47 %48
  br.cond %49 %BB:11 %BB:9

#pred = {%BB:8}
%BB:9:
  %50 = local.get (arg)%1
  %51 = const i32 -8192
  %52 = int.and %50 %51
  %53 = const i32 57344
  %54 = int.ne %52 %53
  br.cond %54 %BB:12 %BB:10

#pred = {%BB:9}
%BB:10:
  br %BB:11

#pred = {%BB:10, %BB:8}
%BB:11:
  %55 = local.get (arg)%0
  %56 = local.get (arg)%1
  %57 = const i32 63
  %58 = int.and %56 %57
  %59 = const i32 128
  %60 = int.or %58 %59
  %61 = const i32 2
  %62 = int.add %55 %61
  memory.guard %memory:0 %62 8
  store.8 %memory:0 %62 %60
  %63 = local.get (arg)%0
  %64 = local.get (arg)%1
  %65 = const i32 12
  %66 = int.shr.u %64 %65
  %67 = const i32 224
  %68 = int.or %66 %67
  memory.guard %memory:0 %63 8
  store.8 %memory:0 %63 %68
  %69 = local.get (arg)%0
  %70 = local.get (arg)%1
  %71 = const i32 6
  %72 = int.shr.u %70 %71
  %73 = const i32 63
  %74 = int.and %72 %73
  %75 = const i32 128
  %76 = int.or %74 %75
  %77 = const i32 1
  %78 = int.add %69 %77
  memory.guard %memory:0 %78 8
  store.8 %memory:0 %78 %76
  %79 = const i32 3
  br %exit

#pred = {%BB:9}
%BB:12:
  %80 = local.get (arg)%1
  %81 = const i32 -65536
  %82 = int.add %80 %81
  %83 = const i32 1048575
  %84 = int.gt.u %82 %83
  br.cond %84 %BB:14 %BB:13

#pred = {%BB:12}
%BB:13:
  %85 = local.get (arg)%0
  %86 = local.get (arg)%1
  %87 = const i32 63
  %88 = int.and %86 %87
  %89 = const i32 128
  %90 = int.or %88 %89
  %91 = const i32 3
  %92 = int.add %85 %91
  memory.guard %memory:0 %92 8
  store.8 %memory:0 %92 %90
  %93 = local.get (arg)%0
  %94 = local.get (arg)%1
  %95 = const i32 18
  %96 = int.shr.u %94 %95
  %97 = const i32 240
  %98 = int.or %96 %97
  memory.guard %memory:0 %93 8
  store.8 %memory:0 %93 %98
  %99 = local.get (arg)%0
  %100 = local.get (arg)%1
  %101 = const i32 6
  %102 = int.shr.u %100 %101
  %103 = const i32 63
  %104 = int.and %102 %103
  %105 = const i32 128
  %106 = int.or %104 %105
  %107 = const i32 2
  %108 = int.add %99 %107
  memory.guard %memory:0 %108 8
  store.8 %memory:0 %108 %106
  %109 = local.get (arg)%0
  %110 = local.get (arg)%1
  %111 = const i32 12
  %112 = int.shr.u %110 %111
  %113 = const i32 63
  %114 = int.and %112 %113
  %115 = const i32 128
  %116 = int.or %114 %115
  %117 = const i32 1
  %118 = int.add %109 %117
  memory.guard %memory:0 %118 8
  store.8 %memory:0 %118 %116
  %119 = const i32 4
  br %exit

#pred = {%BB:12}
%BB:14:
  %120 = const i32 0
  %121 = const i32 25
  %122 = const i32 79096
  %123 = int.add %120 %122
  memory.guard %memory:0 %123 32
  store.32 %memory:0 %123 %121
  br %BB:15

#pred = {%BB:14, %BB:4}
%BB:15:
  %124 = const i32 -1
  local.set %3 %124
  br %BB:16

#pred = {%BB:15, %entry}
%BB:16:
  %125 = local.get %3
  br %exit

#pred = {%BB:16, %BB:13, %BB:5, %BB:7, %BB:11, %BB:1}
%exit:
  %126 = phi i32 [%12, %BB:1] [%28, %BB:5] [%46, %BB:7] [%79, %BB:11] [%119, %BB:13] [%125, %BB:16]
  ret %126

}

function %function:104 : [i32] -> [i32] {
{(arg)%0:i32, %1:i32, %2:i32}
#pred = {}
%entry:
  %3 = local.get (arg)%0
  %4 = const i32 248
  %5 = int.gt.u %3 %4
  br.cond %5 %BB:2 %BB:0

#pred = {%entry}
%BB:0:
  %6 = local.get (arg)%0
  %7 = const i32 1
  %8 = int.shl %6 %7
  %9 = const i32 68928
  %10 = int.add %8 %9
  memory.guard %memory:0 %10 16
  %11 = load.16 i32 %memory:0 %10
  %12 = extend.16 %11
  local.set (arg)%0 %12
  br.cond %12 %BB:3 %BB:1

#pred = {%BB:0}
%BB:1:
  br %BB:2

#pred = {%BB:1, %entry}
%BB:2:
  %13 = const i32 0
  %14 = const i32 28
  %15 = const i32 79096
  %16 = int.add %13 %15
  memory.guard %memory:0 %16 32
  store.32 %memory:0 %16 %14
  %17 = const i32 -1
  local.set (arg)%0 %17
  br %BB:7

#pred = {%BB:0}
%BB:3:
  %18 = local.get (arg)%0
  %19 = const i32 -2
  %20 = int.gt.s %18 %19
  br.cond %20 %BB:7 %BB:4

#pred = {%BB:3}
%BB:4:
  %21 = local.get (arg)%0
  %22 = const i32 -1
  %23 = int.add %21 %22
  local.set %1 %23
  %24 = const i32 255
  %25 = int.and %23 %24
  local.set %2 %25
  %26 = const i32 10
  %27 = int.gt.u %25 %26
  br.cond %27 %BB:7 %BB:5

#pred = {%BB:4}
%BB:5:
  %28 = const i32 1643
  %29 = local.get %2
  %30 = int.shr.u %28 %29
  %31 = const i32 1
  %32 = int.and %30 %31
  %33 = int.eqz %32
  br.cond %33 %BB:7 %BB:6

#pred = {%BB:5}
%BB:6:
  %34 = local.get %1
  %35 = const i32 24
  %36 = int.shl %34 %35
  %37 = const i32 24
  %38 = int.shr.s %36 %37
  %39 = const i32 2
  %40 = int.shl %38 %39
  %41 = const i32 69428
  %42 = int.add %40 %41
  memory.guard %memory:0 %42 32
  %43 = load.32 i32 %memory:0 %42
  br %exit

#pred = {%BB:5, %BB:4, %BB:3, %BB:2}
%BB:7:
  %44 = local.get (arg)%0
  br %exit

#pred = {%BB:7, %BB:6}
%exit:
  %45 = phi i32 [%43, %BB:6] [%44, %BB:7]
  ret %45

}

function %function:105 : [f64, i32] -> [f64] {
{(arg)%0:f64, (arg)%1:i32, %2:i64, %3:i32}
#pred = {}
%entry:
  %4 = local.get (arg)%0
  %5 = cast.bit i64 %4
  local.set %2 %5
  %6 = const i64 52
  %7 = int.shr.u %5 %6
  %8 = cast i32 %7
  %9 = const i32 2047
  %10 = int.and %8 %9
  local.set %3 %10
  %11 = const i32 2047
  %12 = int.eq %10 %11
  br.cond %12 %BB:5 %BB:0

#pred = {%entry}
%BB:0:
  %13 = local.get %3
  br.cond %13 %BB:4 %BB:1

#pred = {%BB:0}
%BB:1:
  %14 = local.get (arg)%0
  %15 = const f64 0
  %16 = fp.ne %14 %15
  br.cond %16 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %17 = local.get (arg)%1
  %18 = const i32 0
  memory.guard %memory:0 %17 32
  store.32 %memory:0 %17 %18
  %19 = local.get (arg)%0
  br %exit

#pred = {%BB:1}
%BB:3:
  %20 = local.get (arg)%0
  %21 = const f64 1.8446744073709552e+19
  %22 = fp.mul %20 %21
  %23 = local.get (arg)%1
  %24 = call %function:105(%22, %23)
  local.set (arg)%0 %24
  %25 = local.get (arg)%1
  %26 = local.get (arg)%1
  memory.guard %memory:0 %26 32
  %27 = load.32 i32 %memory:0 %26
  %28 = const i32 -64
  %29 = int.add %27 %28
  memory.guard %memory:0 %25 32
  store.32 %memory:0 %25 %29
  %30 = local.get (arg)%0
  br %exit

#pred = {%BB:0}
%BB:4:
  %31 = local.get (arg)%1
  %32 = local.get %3
  %33 = const i32 -1022
  %34 = int.add %32 %33
  memory.guard %memory:0 %31 32
  store.32 %memory:0 %31 %34
  %35 = local.get %2
  %36 = const i64 -9218868437227405313
  %37 = int.and %35 %36
  %38 = const i64 4602678819172646912
  %39 = int.or %37 %38
  %40 = cast.bit f64 %39
  local.set (arg)%0 %40
  br %BB:5

#pred = {%BB:4, %entry}
%BB:5:
  %41 = local.get (arg)%0
  br %exit

#pred = {%BB:5, %BB:3, %BB:2}
%exit:
  %42 = phi f64 [%19, %BB:2] [%30, %BB:3] [%41, %BB:5]
  ret %42

}

function %function:106 : [i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32, %2:i32, %3:i32, %4:i32}
#pred = {}
%entry:
  %5 = const i32 0
  %6 = const i32 80180
  %7 = int.add %5 %6
  memory.guard %memory:0 %7 32
  %8 = load.32 i32 %memory:0 %7
  br.cond %8 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %9 = const i32 80188
  %10 = const i32 32
  %11 = call %function:67(%9, %10)
  %12 = const i32 0
  %13 = const i64 2199023255553
  %14 = const i32 80180
  %15 = int.add %12 %14
  memory.guard %memory:0 %15 64
  store.64 %memory:0 %15 %13
  br %BB:1

#pred = {%BB:0, %entry}
%BB:1:
  %16 = local.get (arg)%1
  %17 = int.eqz %16
  br.cond %17 %BB:12 %BB:2

#pred = {%BB:1}
%BB:2:
  %18 = const i32 0
  %19 = const i32 80184
  %20 = int.add %18 %19
  memory.guard %memory:0 %20 32
  %21 = load.32 i32 %memory:0 %20
  local.set %2 %21
  %22 = const i32 0
  local.set %3 %22
  br %BB:3

#pred = {%BB:10, %BB:2}
%BB:3:
  %23 = local.get %2
  %24 = const i32 512
  %25 = int.ne %23 %24
  br.cond %25 %BB:10 %BB:4

#pred = {%BB:3}
%BB:4:
  %26 = local.get (arg)%1
  %27 = const i32 512
  %28 = int.lt.u %26 %27
  br.cond %28 %BB:9 %BB:5

#pred = {%BB:4}
%BB:5:
  br %BB:6

#pred = {%BB:6, %BB:5}
%BB:6:
  %29 = local.get (arg)%0
  %30 = local.get %3
  %31 = int.add %29 %30
  call %function:107(%31)
  %32 = local.get %3
  %33 = const i32 512
  %34 = int.add %32 %33
  local.set %3 %34
  %35 = local.get (arg)%1
  %36 = const i32 -512
  %37 = int.add %35 %36
  local.set (arg)%1 %37
  %38 = const i32 511
  %39 = int.gt.u %37 %38
  br.cond %39 %BB:6 %BB:7

#pred = {%BB:6}
%BB:7:
  %40 = local.get (arg)%1
  %41 = int.eqz %40
  br.cond %41 %BB:12 %BB:8

#pred = {%BB:7}
%BB:8:
  br %BB:9

#pred = {%BB:8, %BB:4}
%BB:9:
  %42 = const i32 80220
  call %function:107(%42)
  %43 = const i32 0
  local.set %2 %43
  %44 = const i32 0
  %45 = const i32 0
  %46 = const i32 80184
  %47 = int.add %44 %46
  memory.guard %memory:0 %47 32
  store.32 %memory:0 %47 %45
  br %BB:10

#pred = {%BB:9, %BB:3}
%BB:10:
  %48 = local.get (arg)%0
  %49 = local.get %3
  %50 = int.add %48 %49
  %51 = local.get %2
  %52 = const i32 80220
  %53 = int.add %51 %52
  %54 = local.get (arg)%1
  %55 = const i32 512
  %56 = local.get %2
  %57 = int.sub %55 %56
  local.set %4 %57
  %58 = local.get (arg)%1
  %59 = local.get %4
  %60 = int.lt.u %58 %59
  %61 = select %60 %54 %57
  local.set %4 %61
  %62 = call %function:95(%50, %53, %61)
  %63 = const i32 0
  %64 = const i32 80184
  %65 = int.add %63 %64
  memory.guard %memory:0 %65 32
  %66 = load.32 i32 %memory:0 %65
  %67 = const i32 80220
  %68 = int.add %66 %67
  %69 = const i32 0
  %70 = local.get %4
  %71 = call %function:97(%68, %69, %70)
  %72 = const i32 0
  %73 = const i32 0
  %74 = const i32 80184
  %75 = int.add %73 %74
  memory.guard %memory:0 %75 32
  %76 = load.32 i32 %memory:0 %75
  %77 = local.get %4
  %78 = int.add %76 %77
  local.set %2 %78
  %79 = const i32 80184
  %80 = int.add %72 %79
  memory.guard %memory:0 %80 32
  store.32 %memory:0 %80 %78
  %81 = local.get %4
  %82 = local.get %3
  %83 = int.add %81 %82
  local.set %3 %83
  %84 = local.get (arg)%1
  %85 = local.get %4
  %86 = int.sub %84 %85
  local.set (arg)%1 %86
  br.cond %86 %BB:3 %BB:11

#pred = {%BB:10}
%BB:11:
  br %BB:12

#pred = {%BB:11, %BB:7, %BB:1}
%BB:12:
  ret

}

function %function:107 : [i32] -> [] {
{(arg)%0:i32, %1:i32}
#pred = {}
%entry:
  %2 = global.get %global:0
  %3 = const i32 64
  %4 = int.sub %2 %3
  local.set %1 %4
  global.set %global:0%4
  %5 = local.get %1
  %6 = const i32 24
  %7 = int.add %5 %6
  %8 = const i32 0
  %9 = const i32 80196
  %10 = int.add %8 %9
  memory.guard %memory:0 %10 64
  %11 = load.64 i64 %memory:0 %10
  memory.guard %memory:0 %7 64
  store.64 %memory:0 %7 %11
  %12 = local.get %1
  %13 = const i32 32
  %14 = int.add %12 %13
  %15 = const i32 0
  %16 = const i32 80204
  %17 = int.add %15 %16
  memory.guard %memory:0 %17 64
  %18 = load.64 i64 %memory:0 %17
  memory.guard %memory:0 %14 64
  store.64 %memory:0 %14 %18
  %19 = local.get %1
  %20 = const i32 40
  %21 = int.add %19 %20
  %22 = const i32 0
  %23 = const i32 80212
  %24 = int.add %22 %23
  memory.guard %memory:0 %24 64
  %25 = load.64 i64 %memory:0 %24
  memory.guard %memory:0 %21 64
  store.64 %memory:0 %21 %25
  %26 = local.get %1
  %27 = const i32 56
  %28 = int.add %26 %27
  %29 = const i64 0
  memory.guard %memory:0 %28 64
  store.64 %memory:0 %28 %29
  %30 = local.get %1
  %31 = const i64 0
  %32 = const i32 48
  %33 = int.add %30 %32
  memory.guard %memory:0 %33 64
  store.64 %memory:0 %33 %31
  %34 = local.get %1
  %35 = const i32 0
  %36 = const i32 69480
  %37 = int.add %35 %36
  memory.guard %memory:0 %37 64
  %38 = load.64 i64 %memory:0 %37
  %39 = const i32 8
  %40 = int.add %34 %39
  memory.guard %memory:0 %40 64
  store.64 %memory:0 %40 %38
  %41 = local.get %1
  %42 = const i32 0
  %43 = const i32 69472
  %44 = int.add %42 %43
  memory.guard %memory:0 %44 64
  %45 = load.64 i64 %memory:0 %44
  memory.guard %memory:0 %41 64
  store.64 %memory:0 %41 %45
  %46 = local.get %1
  %47 = const i32 0
  %48 = const i32 80188
  %49 = int.add %47 %48
  memory.guard %memory:0 %49 64
  %50 = load.64 i64 %memory:0 %49
  %51 = const i32 16
  %52 = int.add %46 %51
  memory.guard %memory:0 %52 64
  store.64 %memory:0 %52 %50
  %53 = local.get (arg)%0
  %54 = local.get %1
  call %function:108(%53, %54)
  %55 = const i32 0
  %56 = local.get (arg)%0
  %57 = const i32 24
  %58 = int.add %56 %57
  memory.guard %memory:0 %58 64
  %59 = load.64 i64 %memory:0 %58
  %60 = const i32 80212
  %61 = int.add %55 %60
  memory.guard %memory:0 %61 64
  store.64 %memory:0 %61 %59
  %62 = const i32 0
  %63 = local.get (arg)%0
  %64 = const i32 16
  %65 = int.add %63 %64
  memory.guard %memory:0 %65 64
  %66 = load.64 i64 %memory:0 %65
  %67 = const i32 80204
  %68 = int.add %62 %67
  memory.guard %memory:0 %68 64
  store.64 %memory:0 %68 %66
  %69 = const i32 0
  %70 = local.get (arg)%0
  %71 = const i32 8
  %72 = int.add %70 %71
  memory.guard %memory:0 %72 64
  %73 = load.64 i64 %memory:0 %72
  %74 = const i32 80196
  %75 = int.add %69 %74
  memory.guard %memory:0 %75 64
  store.64 %memory:0 %75 %73
  %76 = const i32 0
  %77 = local.get (arg)%0
  memory.guard %memory:0 %77 64
  %78 = load.64 i64 %memory:0 %77
  %79 = const i32 80188
  %80 = int.add %76 %79
  memory.guard %memory:0 %80 64
  store.64 %memory:0 %80 %78
  %81 = local.get (arg)%0
  %82 = local.get %1
  call %function:108(%81, %82)
  %83 = local.get (arg)%0
  %84 = const i32 64
  %85 = int.add %83 %84
  %86 = local.get %1
  call %function:108(%85, %86)
  %87 = local.get (arg)%0
  %88 = const i32 128
  %89 = int.add %87 %88
  %90 = local.get %1
  call %function:108(%89, %90)
  %91 = local.get (arg)%0
  %92 = const i32 192
  %93 = int.add %91 %92
  %94 = local.get %1
  call %function:108(%93, %94)
  %95 = local.get (arg)%0
  %96 = const i32 256
  %97 = int.add %95 %96
  %98 = local.get %1
  call %function:108(%97, %98)
  %99 = local.get (arg)%0
  %100 = const i32 320
  %101 = int.add %99 %100
  %102 = local.get %1
  call %function:108(%101, %102)
  %103 = local.get (arg)%0
  %104 = const i32 384
  %105 = int.add %103 %104
  %106 = local.get %1
  call %function:108(%105, %106)
  %107 = local.get (arg)%0
  %108 = const i32 448
  %109 = int.add %107 %108
  %110 = local.get %1
  call %function:108(%109, %110)
  %111 = local.get %1
  %112 = const i32 64
  %113 = int.add %111 %112
  global.set %global:0%113
  ret

}

function %function:108 : [i32, i32] -> [] {
{(arg)%0:i32, (arg)%1:i32, %2:i32, %3:i32, %4:i32, %5:i32, %6:i32, %7:i32, %8:i32, %9:i32, %10:i32, %11:i32, %12:i32, %13:i32, %14:i32, %15:i32, %16:i32, %17:i32, %18:i32, %19:i32, %20:i32, %21:i32, %22:i32}
#pred = {}
%entry:
  %23 = global.get %global:0
  %24 = const i32 64
  %25 = int.sub %23 %24
  local.set %2 %25
  %26 = const i32 56
  %27 = int.add %25 %26
  %28 = local.get (arg)%1
  %29 = const i32 56
  %30 = int.add %28 %29
  local.set %3 %30
  memory.guard %memory:0 %30 64
  %31 = load.64 i64 %memory:0 %30
  memory.guard %memory:0 %27 64
  store.64 %memory:0 %27 %31
  %32 = local.get %2
  %33 = const i32 48
  %34 = int.add %32 %33
  %35 = local.get (arg)%1
  %36 = const i32 48
  %37 = int.add %35 %36
  local.set %4 %37
  memory.guard %memory:0 %37 64
  %38 = load.64 i64 %memory:0 %37
  memory.guard %memory:0 %34 64
  store.64 %memory:0 %34 %38
  %39 = local.get %2
  %40 = const i32 40
  %41 = int.add %39 %40
  %42 = local.get (arg)%1
  %43 = const i32 40
  %44 = int.add %42 %43
  local.set %5 %44
  memory.guard %memory:0 %44 64
  %45 = load.64 i64 %memory:0 %44
  memory.guard %memory:0 %41 64
  store.64 %memory:0 %41 %45
  %46 = local.get %2
  %47 = const i32 32
  %48 = int.add %46 %47
  %49 = local.get (arg)%1
  %50 = const i32 32
  %51 = int.add %49 %50
  local.set %6 %51
  memory.guard %memory:0 %51 64
  %52 = load.64 i64 %memory:0 %51
  memory.guard %memory:0 %48 64
  store.64 %memory:0 %48 %52
  %53 = local.get %2
  %54 = const i32 24
  %55 = int.add %53 %54
  %56 = local.get (arg)%1
  %57 = const i32 24
  %58 = int.add %56 %57
  local.set %7 %58
  memory.guard %memory:0 %58 64
  %59 = load.64 i64 %memory:0 %58
  memory.guard %memory:0 %55 64
  store.64 %memory:0 %55 %59
  %60 = local.get %2
  %61 = const i32 16
  %62 = int.add %60 %61
  %63 = local.get (arg)%1
  %64 = const i32 16
  %65 = int.add %63 %64
  local.set %8 %65
  memory.guard %memory:0 %65 64
  %66 = load.64 i64 %memory:0 %65
  memory.guard %memory:0 %62 64
  store.64 %memory:0 %62 %66
  %67 = local.get %2
  %68 = local.get (arg)%1
  memory.guard %memory:0 %68 64
  %69 = load.64 i64 %memory:0 %68
  memory.guard %memory:0 %67 64
  store.64 %memory:0 %67 %69
  %70 = local.get %2
  %71 = local.get (arg)%1
  %72 = const i32 8
  %73 = int.add %71 %72
  local.set %9 %73
  memory.guard %memory:0 %73 64
  %74 = load.64 i64 %memory:0 %73
  %75 = const i32 8
  %76 = int.add %70 %75
  memory.guard %memory:0 %76 64
  store.64 %memory:0 %76 %74
  %77 = local.get %5
  memory.guard %memory:0 %77 32
  %78 = load.32 i32 %memory:0 %77
  local.set %10 %78
  %79 = local.get %3
  memory.guard %memory:0 %79 32
  %80 = load.32 i32 %memory:0 %79
  local.set %11 %80
  %81 = local.get %9
  memory.guard %memory:0 %81 32
  %82 = load.32 i32 %memory:0 %81
  local.set %9 %82
  %83 = local.get %7
  memory.guard %memory:0 %83 32
  %84 = load.32 i32 %memory:0 %83
  local.set %3 %84
  %85 = local.get %6
  memory.guard %memory:0 %85 32
  %86 = load.32 i32 %memory:0 %85
  local.set %7 %86
  %87 = local.get %4
  memory.guard %memory:0 %87 32
  %88 = load.32 i32 %memory:0 %87
  local.set %12 %88
  %89 = local.get %8
  memory.guard %memory:0 %89 32
  %90 = load.32 i32 %memory:0 %89
  local.set %4 %90
  %91 = local.get (arg)%1
  %92 = const i32 44
  %93 = int.add %91 %92
  memory.guard %memory:0 %93 32
  %94 = load.32 i32 %memory:0 %93
  local.set %8 %94
  %95 = local.get (arg)%1
  %96 = const i32 60
  %97 = int.add %95 %96
  memory.guard %memory:0 %97 32
  %98 = load.32 i32 %memory:0 %97
  local.set %13 %98
  %99 = local.get (arg)%1
  %100 = const i32 12
  %101 = int.add %99 %100
  memory.guard %memory:0 %101 32
  %102 = load.32 i32 %memory:0 %101
  local.set %14 %102
  %103 = local.get (arg)%1
  %104 = const i32 28
  %105 = int.add %103 %104
  memory.guard %memory:0 %105 32
  %106 = load.32 i32 %memory:0 %105
  local.set %5 %106
  %107 = local.get (arg)%1
  %108 = const i32 36
  %109 = int.add %107 %108
  memory.guard %memory:0 %109 32
  %110 = load.32 i32 %memory:0 %109
  local.set %15 %110
  %111 = local.get (arg)%1
  %112 = const i32 52
  %113 = int.add %111 %112
  memory.guard %memory:0 %113 32
  %114 = load.32 i32 %memory:0 %113
  local.set %16 %114
  %115 = local.get (arg)%1
  %116 = const i32 4
  %117 = int.add %115 %116
  memory.guard %memory:0 %117 32
  %118 = load.32 i32 %memory:0 %117
  local.set %17 %118
  %119 = local.get (arg)%1
  %120 = const i32 20
  %121 = int.add %119 %120
  memory.guard %memory:0 %121 32
  %122 = load.32 i32 %memory:0 %121
  local.set %6 %122
  %123 = local.get (arg)%1
  memory.guard %memory:0 %123 32
  %124 = load.32 i32 %memory:0 %123
  local.set %18 %124
  %125 = const i32 -2
  local.set %19 %125
  br %BB:0

#pred = {%BB:0, %entry}
%BB:0:
  %126 = local.get %4
  %127 = local.get %18
  %128 = int.add %126 %127
  local.set %18 %128
  %129 = local.get %12
  %130 = int.xor %128 %129
  %131 = const i32 16
  %132 = int.rotl %130 %131
  local.set %12 %132
  %133 = local.get %7
  %134 = int.add %132 %133
  local.set %7 %134
  %135 = local.get %4
  %136 = int.xor %134 %135
  %137 = const i32 12
  %138 = int.rotl %136 %137
  local.set %4 %138
  %139 = local.get %18
  %140 = int.add %138 %139
  local.set %18 %140
  %141 = local.get %12
  %142 = int.xor %140 %141
  %143 = const i32 8
  %144 = int.rotl %142 %143
  local.set %12 %144
  %145 = local.get %7
  %146 = int.add %144 %145
  local.set %7 %146
  %147 = local.get %4
  %148 = int.xor %146 %147
  %149 = const i32 7
  %150 = int.rotl %148 %149
  local.set %4 %150
  %151 = local.get %5
  %152 = local.get %14
  %153 = int.add %151 %152
  local.set %14 %153
  %154 = local.get %13
  %155 = int.xor %153 %154
  %156 = const i32 16
  %157 = int.rotl %155 %156
  local.set %13 %157
  %158 = local.get %8
  %159 = int.add %157 %158
  local.set %8 %159
  %160 = local.get %5
  %161 = int.xor %159 %160
  %162 = const i32 12
  %163 = int.rotl %161 %162
  local.set %5 %163
  %164 = local.get %14
  %165 = int.add %163 %164
  local.set %20 %165
  %166 = int.add %150 %165
  local.set %14 %166
  %167 = local.get %3
  %168 = local.get %9
  %169 = int.add %167 %168
  local.set %9 %169
  %170 = local.get %11
  %171 = int.xor %169 %170
  %172 = const i32 16
  %173 = int.rotl %171 %172
  local.set %11 %173
  %174 = local.get %10
  %175 = int.add %173 %174
  local.set %10 %175
  %176 = local.get %3
  %177 = int.xor %175 %176
  %178 = const i32 12
  %179 = int.rotl %177 %178
  local.set %3 %179
  %180 = local.get %9
  %181 = int.add %179 %180
  local.set %9 %181
  %182 = local.get %11
  %183 = int.xor %181 %182
  %184 = const i32 8
  %185 = int.rotl %183 %184
  local.set %21 %185
  %186 = int.xor %166 %185
  %187 = const i32 16
  %188 = int.rotl %186 %187
  local.set %11 %188
  %189 = local.get %6
  %190 = local.get %17
  %191 = int.add %189 %190
  local.set %17 %191
  %192 = local.get %16
  %193 = int.xor %191 %192
  %194 = const i32 16
  %195 = int.rotl %193 %194
  local.set %16 %195
  %196 = local.get %15
  %197 = int.add %195 %196
  local.set %15 %197
  %198 = local.get %6
  %199 = int.xor %197 %198
  %200 = const i32 12
  %201 = int.rotl %199 %200
  local.set %6 %201
  %202 = local.get %17
  %203 = int.add %201 %202
  local.set %17 %203
  %204 = local.get %16
  %205 = int.xor %203 %204
  %206 = const i32 8
  %207 = int.rotl %205 %206
  local.set %16 %207
  %208 = local.get %15
  %209 = int.add %207 %208
  local.set %22 %209
  %210 = int.add %188 %209
  local.set %15 %210
  %211 = local.get %4
  %212 = int.xor %210 %211
  %213 = const i32 12
  %214 = int.rotl %212 %213
  local.set %4 %214
  %215 = local.get %14
  %216 = int.add %214 %215
  local.set %14 %216
  %217 = local.get %11
  %218 = int.xor %216 %217
  %219 = const i32 8
  %220 = int.rotl %218 %219
  local.set %11 %220
  %221 = local.get %15
  %222 = int.add %220 %221
  local.set %15 %222
  %223 = local.get %4
  %224 = int.xor %222 %223
  %225 = const i32 7
  %226 = int.rotl %224 %225
  local.set %4 %226
  %227 = local.get %7
  %228 = local.get %16
  %229 = local.get %20
  %230 = local.get %13
  %231 = int.xor %229 %230
  %232 = const i32 8
  %233 = int.rotl %231 %232
  local.set %13 %233
  %234 = local.get %8
  %235 = int.add %233 %234
  local.set %8 %235
  %236 = local.get %5
  %237 = int.xor %235 %236
  %238 = const i32 7
  %239 = int.rotl %237 %238
  local.set %5 %239
  %240 = local.get %9
  %241 = int.add %239 %240
  local.set %9 %241
  %242 = int.xor %228 %241
  %243 = const i32 16
  %244 = int.rotl %242 %243
  local.set %16 %244
  %245 = int.add %227 %244
  local.set %7 %245
  %246 = local.get %5
  %247 = int.xor %245 %246
  %248 = const i32 12
  %249 = int.rotl %247 %248
  local.set %5 %249
  %250 = local.get %9
  %251 = int.add %249 %250
  local.set %9 %251
  %252 = local.get %16
  %253 = int.xor %251 %252
  %254 = const i32 8
  %255 = int.rotl %253 %254
  local.set %16 %255
  %256 = local.get %7
  %257 = int.add %255 %256
  local.set %7 %257
  %258 = local.get %5
  %259 = int.xor %257 %258
  %260 = const i32 7
  %261 = int.rotl %259 %260
  local.set %5 %261
  %262 = local.get %12
  %263 = local.get %21
  %264 = local.get %10
  %265 = int.add %263 %264
  local.set %10 %265
  %266 = local.get %3
  %267 = int.xor %265 %266
  %268 = const i32 7
  %269 = int.rotl %267 %268
  local.set %3 %269
  %270 = local.get %17
  %271 = int.add %269 %270
  local.set %17 %271
  %272 = int.xor %262 %271
  %273 = const i32 16
  %274 = int.rotl %272 %273
  local.set %12 %274
  %275 = local.get %8
  %276 = int.add %274 %275
  local.set %8 %276
  %277 = local.get %3
  %278 = int.xor %276 %277
  %279 = const i32 12
  %280 = int.rotl %278 %279
  local.set %3 %280
  %281 = local.get %17
  %282 = int.add %280 %281
  local.set %17 %282
  %283 = local.get %12
  %284 = int.xor %282 %283
  %285 = const i32 8
  %286 = int.rotl %284 %285
  local.set %12 %286
  %287 = local.get %8
  %288 = int.add %286 %287
  local.set %8 %288
  %289 = local.get %3
  %290 = int.xor %288 %289
  %291 = const i32 7
  %292 = int.rotl %290 %291
  local.set %3 %292
  %293 = local.get %22
  %294 = local.get %6
  %295 = int.xor %293 %294
  %296 = const i32 7
  %297 = int.rotl %295 %296
  local.set %6 %297
  %298 = local.get %18
  %299 = int.add %297 %298
  local.set %18 %299
  %300 = local.get %13
  %301 = int.xor %299 %300
  %302 = const i32 16
  %303 = int.rotl %301 %302
  local.set %13 %303
  %304 = local.get %10
  %305 = int.add %303 %304
  local.set %10 %305
  %306 = local.get %6
  %307 = int.xor %305 %306
  %308 = const i32 12
  %309 = int.rotl %307 %308
  local.set %6 %309
  %310 = local.get %18
  %311 = int.add %309 %310
  local.set %18 %311
  %312 = local.get %13
  %313 = int.xor %311 %312
  %314 = const i32 8
  %315 = int.rotl %313 %314
  local.set %13 %315
  %316 = local.get %10
  %317 = int.add %315 %316
  local.set %10 %317
  %318 = local.get %6
  %319 = int.xor %317 %318
  %320 = const i32 7
  %321 = int.rotl %319 %320
  local.set %6 %321
  %322 = local.get %19
  %323 = const i32 2
  %324 = int.add %322 %323
  local.set %19 %324
  %325 = const i32 18
  %326 = int.lt.u %324 %325
  br.cond %326 %BB:0 %BB:1

#pred = {%BB:0}
%BB:1:
  %327 = local.get (arg)%1
  %328 = local.get %12
  %329 = const i32 48
  %330 = int.add %327 %329
  memory.guard %memory:0 %330 32
  store.32 %memory:0 %330 %328
  %331 = local.get (arg)%1
  %332 = local.get %18
  memory.guard %memory:0 %331 32
  store.32 %memory:0 %331 %332
  %333 = local.get (arg)%1
  %334 = local.get %4
  %335 = const i32 16
  %336 = int.add %333 %335
  memory.guard %memory:0 %336 32
  store.32 %memory:0 %336 %334
  %337 = local.get (arg)%1
  %338 = local.get %7
  %339 = const i32 32
  %340 = int.add %337 %339
  memory.guard %memory:0 %340 32
  store.32 %memory:0 %340 %338
  %341 = local.get (arg)%1
  %342 = local.get %6
  %343 = const i32 20
  %344 = int.add %341 %343
  memory.guard %memory:0 %344 32
  store.32 %memory:0 %344 %342
  %345 = local.get (arg)%1
  %346 = local.get %16
  %347 = const i32 52
  %348 = int.add %345 %347
  memory.guard %memory:0 %348 32
  store.32 %memory:0 %348 %346
  %349 = local.get (arg)%1
  %350 = local.get %17
  %351 = const i32 4
  %352 = int.add %349 %351
  memory.guard %memory:0 %352 32
  store.32 %memory:0 %352 %350
  %353 = local.get (arg)%1
  %354 = local.get %15
  %355 = const i32 36
  %356 = int.add %353 %355
  memory.guard %memory:0 %356 32
  store.32 %memory:0 %356 %354
  %357 = local.get (arg)%1
  %358 = local.get %3
  %359 = const i32 24
  %360 = int.add %357 %359
  memory.guard %memory:0 %360 32
  store.32 %memory:0 %360 %358
  %361 = local.get (arg)%1
  %362 = local.get %11
  %363 = const i32 56
  %364 = int.add %361 %363
  memory.guard %memory:0 %364 32
  store.32 %memory:0 %364 %362
  %365 = local.get (arg)%1
  %366 = local.get %9
  %367 = const i32 8
  %368 = int.add %365 %367
  memory.guard %memory:0 %368 32
  store.32 %memory:0 %368 %366
  %369 = local.get (arg)%1
  %370 = local.get %10
  %371 = const i32 40
  %372 = int.add %369 %371
  memory.guard %memory:0 %372 32
  store.32 %memory:0 %372 %370
  %373 = local.get (arg)%1
  %374 = local.get %5
  %375 = const i32 28
  %376 = int.add %373 %375
  memory.guard %memory:0 %376 32
  store.32 %memory:0 %376 %374
  %377 = local.get (arg)%1
  %378 = local.get %13
  %379 = const i32 60
  %380 = int.add %377 %379
  memory.guard %memory:0 %380 32
  store.32 %memory:0 %380 %378
  %381 = local.get (arg)%1
  %382 = local.get %14
  %383 = const i32 12
  %384 = int.add %381 %383
  memory.guard %memory:0 %384 32
  store.32 %memory:0 %384 %382
  %385 = local.get (arg)%1
  %386 = local.get %8
  %387 = const i32 44
  %388 = int.add %385 %387
  memory.guard %memory:0 %388 32
  store.32 %memory:0 %388 %386
  %389 = local.get %2
  %390 = local.get %2
  memory.guard %memory:0 %390 32
  %391 = load.32 i32 %memory:0 %390
  %392 = local.get %18
  %393 = int.add %391 %392
  memory.guard %memory:0 %389 32
  store.32 %memory:0 %389 %393
  %394 = local.get %2
  %395 = local.get %2
  %396 = const i32 4
  %397 = int.add %395 %396
  memory.guard %memory:0 %397 32
  %398 = load.32 i32 %memory:0 %397
  %399 = local.get %17
  %400 = int.add %398 %399
  %401 = const i32 4
  %402 = int.add %394 %401
  memory.guard %memory:0 %402 32
  store.32 %memory:0 %402 %400
  %403 = local.get %2
  %404 = local.get %2
  %405 = const i32 8
  %406 = int.add %404 %405
  memory.guard %memory:0 %406 32
  %407 = load.32 i32 %memory:0 %406
  %408 = local.get %9
  %409 = int.add %407 %408
  %410 = const i32 8
  %411 = int.add %403 %410
  memory.guard %memory:0 %411 32
  store.32 %memory:0 %411 %409
  %412 = local.get %2
  %413 = local.get %2
  %414 = const i32 12
  %415 = int.add %413 %414
  memory.guard %memory:0 %415 32
  %416 = load.32 i32 %memory:0 %415
  %417 = local.get %14
  %418 = int.add %416 %417
  %419 = const i32 12
  %420 = int.add %412 %419
  memory.guard %memory:0 %420 32
  store.32 %memory:0 %420 %418
  %421 = local.get %2
  %422 = local.get %2
  %423 = const i32 16
  %424 = int.add %422 %423
  memory.guard %memory:0 %424 32
  %425 = load.32 i32 %memory:0 %424
  %426 = local.get %4
  %427 = int.add %425 %426
  %428 = const i32 16
  %429 = int.add %421 %428
  memory.guard %memory:0 %429 32
  store.32 %memory:0 %429 %427
  %430 = local.get %2
  %431 = local.get %2
  %432 = const i32 20
  %433 = int.add %431 %432
  memory.guard %memory:0 %433 32
  %434 = load.32 i32 %memory:0 %433
  %435 = local.get %6
  %436 = int.add %434 %435
  %437 = const i32 20
  %438 = int.add %430 %437
  memory.guard %memory:0 %438 32
  store.32 %memory:0 %438 %436
  %439 = local.get %2
  %440 = local.get %2
  %441 = const i32 24
  %442 = int.add %440 %441
  memory.guard %memory:0 %442 32
  %443 = load.32 i32 %memory:0 %442
  %444 = local.get %3
  %445 = int.add %443 %444
  %446 = const i32 24
  %447 = int.add %439 %446
  memory.guard %memory:0 %447 32
  store.32 %memory:0 %447 %445
  %448 = local.get %2
  %449 = local.get %2
  %450 = const i32 28
  %451 = int.add %449 %450
  memory.guard %memory:0 %451 32
  %452 = load.32 i32 %memory:0 %451
  %453 = local.get %5
  %454 = int.add %452 %453
  %455 = const i32 28
  %456 = int.add %448 %455
  memory.guard %memory:0 %456 32
  store.32 %memory:0 %456 %454
  %457 = local.get %2
  %458 = local.get %2
  %459 = const i32 32
  %460 = int.add %458 %459
  memory.guard %memory:0 %460 32
  %461 = load.32 i32 %memory:0 %460
  %462 = local.get %7
  %463 = int.add %461 %462
  %464 = const i32 32
  %465 = int.add %457 %464
  memory.guard %memory:0 %465 32
  store.32 %memory:0 %465 %463
  %466 = local.get %2
  %467 = local.get %2
  %468 = const i32 36
  %469 = int.add %467 %468
  memory.guard %memory:0 %469 32
  %470 = load.32 i32 %memory:0 %469
  %471 = local.get %15
  %472 = int.add %470 %471
  %473 = const i32 36
  %474 = int.add %466 %473
  memory.guard %memory:0 %474 32
  store.32 %memory:0 %474 %472
  %475 = local.get %2
  %476 = local.get %2
  %477 = const i32 40
  %478 = int.add %476 %477
  memory.guard %memory:0 %478 32
  %479 = load.32 i32 %memory:0 %478
  %480 = local.get %10
  %481 = int.add %479 %480
  %482 = const i32 40
  %483 = int.add %475 %482
  memory.guard %memory:0 %483 32
  store.32 %memory:0 %483 %481
  %484 = local.get %2
  %485 = local.get %2
  %486 = const i32 44
  %487 = int.add %485 %486
  memory.guard %memory:0 %487 32
  %488 = load.32 i32 %memory:0 %487
  %489 = local.get %8
  %490 = int.add %488 %489
  %491 = const i32 44
  %492 = int.add %484 %491
  memory.guard %memory:0 %492 32
  store.32 %memory:0 %492 %490
  %493 = local.get %2
  %494 = local.get %2
  %495 = const i32 48
  %496 = int.add %494 %495
  memory.guard %memory:0 %496 32
  %497 = load.32 i32 %memory:0 %496
  %498 = local.get %12
  %499 = int.add %497 %498
  %500 = const i32 48
  %501 = int.add %493 %500
  memory.guard %memory:0 %501 32
  store.32 %memory:0 %501 %499
  %502 = local.get %2
  %503 = local.get %2
  %504 = const i32 52
  %505 = int.add %503 %504
  memory.guard %memory:0 %505 32
  %506 = load.32 i32 %memory:0 %505
  %507 = local.get %16
  %508 = int.add %506 %507
  %509 = const i32 52
  %510 = int.add %502 %509
  memory.guard %memory:0 %510 32
  store.32 %memory:0 %510 %508
  %511 = local.get %2
  %512 = local.get %2
  %513 = const i32 56
  %514 = int.add %512 %513
  memory.guard %memory:0 %514 32
  %515 = load.32 i32 %memory:0 %514
  %516 = local.get %11
  %517 = int.add %515 %516
  %518 = const i32 56
  %519 = int.add %511 %518
  memory.guard %memory:0 %519 32
  store.32 %memory:0 %519 %517
  %520 = local.get %2
  %521 = local.get %2
  %522 = const i32 60
  %523 = int.add %521 %522
  memory.guard %memory:0 %523 32
  %524 = load.32 i32 %memory:0 %523
  %525 = local.get %13
  %526 = int.add %524 %525
  %527 = const i32 60
  %528 = int.add %520 %527
  memory.guard %memory:0 %528 32
  store.32 %memory:0 %528 %526
  %529 = local.get (arg)%0
  %530 = const i32 48
  %531 = int.add %529 %530
  %532 = local.get %2
  %533 = const i32 48
  %534 = int.add %532 %533
  memory.guard %memory:0 %534 64
  %535 = load.64 i64 %memory:0 %534
  memory.guard %memory:0 %531 64
  store.64 %memory:0 %531 %535
  %536 = local.get (arg)%0
  %537 = const i32 40
  %538 = int.add %536 %537
  %539 = local.get %2
  %540 = const i32 40
  %541 = int.add %539 %540
  memory.guard %memory:0 %541 64
  %542 = load.64 i64 %memory:0 %541
  memory.guard %memory:0 %538 64
  store.64 %memory:0 %538 %542
  %543 = local.get (arg)%0
  %544 = const i32 32
  %545 = int.add %543 %544
  %546 = local.get %2
  %547 = const i32 32
  %548 = int.add %546 %547
  memory.guard %memory:0 %548 64
  %549 = load.64 i64 %memory:0 %548
  memory.guard %memory:0 %545 64
  store.64 %memory:0 %545 %549
  %550 = local.get (arg)%0
  %551 = const i32 24
  %552 = int.add %550 %551
  %553 = local.get %2
  %554 = const i32 24
  %555 = int.add %553 %554
  memory.guard %memory:0 %555 64
  %556 = load.64 i64 %memory:0 %555
  memory.guard %memory:0 %552 64
  store.64 %memory:0 %552 %556
  %557 = local.get (arg)%0
  %558 = const i32 56
  %559 = int.add %557 %558
  %560 = local.get %2
  %561 = const i32 56
  %562 = int.add %560 %561
  memory.guard %memory:0 %562 64
  %563 = load.64 i64 %memory:0 %562
  memory.guard %memory:0 %559 64
  store.64 %memory:0 %559 %563
  %564 = local.get (arg)%0
  %565 = const i32 16
  %566 = int.add %564 %565
  %567 = local.get %2
  %568 = const i32 16
  %569 = int.add %567 %568
  memory.guard %memory:0 %569 64
  %570 = load.64 i64 %memory:0 %569
  memory.guard %memory:0 %566 64
  store.64 %memory:0 %566 %570
  %571 = local.get (arg)%0
  %572 = const i32 8
  %573 = int.add %571 %572
  %574 = local.get %2
  %575 = const i32 8
  %576 = int.add %574 %575
  memory.guard %memory:0 %576 64
  %577 = load.64 i64 %memory:0 %576
  memory.guard %memory:0 %573 64
  store.64 %memory:0 %573 %577
  %578 = local.get (arg)%0
  %579 = local.get %2
  memory.guard %memory:0 %579 64
  %580 = load.64 i64 %memory:0 %579
  memory.guard %memory:0 %578 64
  store.64 %memory:0 %578 %580
  %581 = local.get (arg)%1
  %582 = local.get (arg)%1
  %583 = const i32 48
  %584 = int.add %582 %583
  memory.guard %memory:0 %584 32
  %585 = load.32 i32 %memory:0 %584
  %586 = const i32 1
  %587 = int.add %585 %586
  %588 = const i32 48
  %589 = int.add %581 %588
  memory.guard %memory:0 %589 32
  store.32 %memory:0 %589 %587
  ret

}

function %function:109 : [] -> [i32] {
{%0:i32, %1:i32}
#pred = {}
%entry:
  %2 = global.get %global:0
  %3 = const i32 16
  %4 = int.sub %2 %3
  local.set %0 %4
  global.set %global:0%4
  %5 = local.get %0
  %6 = const i32 12
  %7 = int.add %5 %6
  %8 = const i32 4
  call %function:106(%7, %8)
  %9 = local.get %0
  %10 = const i32 12
  %11 = int.add %9 %10
  memory.guard %memory:0 %11 32
  %12 = load.32 i32 %memory:0 %11
  local.set %1 %12
  %13 = local.get %0
  %14 = const i32 16
  %15 = int.add %13 %14
  global.set %global:0%15
  %16 = local.get %1
  ret %16

}

function %function:110 : [i32, i64, i64, i64, i64] -> [] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i64, (arg)%3:i64, (arg)%4:i64, %5:i32, %6:i64}
#pred = {}
%entry:
  %7 = global.get %global:0
  %8 = const i32 16
  %9 = int.sub %7 %8
  local.set %5 %9
  global.set %global:0%9
  %10 = local.get %5
  %11 = local.get (arg)%2
  %12 = const i64 63
  %13 = int.shr.s %11 %12
  local.set %6 %13
  %14 = local.get (arg)%1
  %15 = int.xor %13 %14
  local.set (arg)%1 %15
  %16 = local.get %6
  %17 = int.sub %15 %16
  %18 = local.get %6
  %19 = local.get (arg)%2
  %20 = int.xor %18 %19
  %21 = local.get %6
  %22 = int.sub %20 %21
  %23 = local.get (arg)%1
  %24 = local.get %6
  %25 = int.lt.u %23 %24
  %26 = cast.u i64 %25
  %27 = int.sub %22 %26
  %28 = local.get (arg)%4
  %29 = const i64 63
  %30 = int.shr.s %28 %29
  local.set (arg)%2 %30
  %31 = local.get (arg)%3
  %32 = int.xor %30 %31
  local.set (arg)%1 %32
  %33 = local.get (arg)%2
  %34 = int.sub %32 %33
  %35 = local.get (arg)%2
  %36 = local.get (arg)%4
  %37 = int.xor %35 %36
  %38 = local.get (arg)%2
  %39 = int.sub %37 %38
  %40 = local.get (arg)%1
  %41 = local.get (arg)%2
  %42 = int.lt.u %40 %41
  %43 = cast.u i64 %42
  %44 = int.sub %39 %43
  %45 = const i32 0
  call %function:114(%10, %17, %27, %34, %44, %45)
  %46 = local.get %5
  %47 = const i32 8
  %48 = int.add %46 %47
  memory.guard %memory:0 %48 64
  %49 = load.64 i64 %memory:0 %48
  local.set (arg)%4 %49
  %50 = local.get (arg)%0
  %51 = local.get %5
  memory.guard %memory:0 %51 64
  %52 = load.64 i64 %memory:0 %51
  %53 = local.get (arg)%2
  %54 = local.get %6
  %55 = int.xor %53 %54
  local.set %6 %55
  %56 = int.xor %52 %55
  local.set (arg)%2 %56
  %57 = local.get %6
  %58 = int.sub %56 %57
  memory.guard %memory:0 %50 64
  store.64 %memory:0 %50 %58
  %59 = local.get (arg)%0
  %60 = local.get (arg)%4
  %61 = local.get %6
  %62 = int.xor %60 %61
  %63 = local.get %6
  %64 = int.sub %62 %63
  %65 = local.get (arg)%2
  %66 = local.get %6
  %67 = int.lt.u %65 %66
  %68 = cast.u i64 %67
  %69 = int.sub %64 %68
  %70 = const i32 8
  %71 = int.add %59 %70
  memory.guard %memory:0 %71 64
  store.64 %memory:0 %71 %69
  %72 = local.get %5
  %73 = const i32 16
  %74 = int.add %72 %73
  global.set %global:0%74
  ret

}

function %function:111 : [i32, i64, i64, i64, i64, i32] -> [] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i64, (arg)%3:i64, (arg)%4:i64, (arg)%5:i32, %6:i32, %7:i64, %8:i64, %9:i64, %10:i64, %11:i64, %12:i64}
#pred = {}
%entry:
  %13 = global.get %global:0
  %14 = const i32 48
  %15 = int.sub %13 %14
  local.set %6 %15
  global.set %global:0%15
  %16 = local.get (arg)%5
  %17 = const i32 0
  memory.guard %memory:0 %16 32
  store.32 %memory:0 %16 %17
  %18 = local.get (arg)%1
  %19 = local.get (arg)%2
  %20 = const i64 -9223372036854775808
  %21 = int.xor %19 %20
  %22 = int.or %18 %21
  %23 = const i64 0
  %24 = int.ne %22 %23
  br.cond %24 %BB:2 %BB:0

#pred = {%entry}
%BB:0:
  %25 = local.get (arg)%3
  %26 = const i64 2
  %27 = int.lt.u %25 %26
  %28 = const i32 0
  %29 = local.get (arg)%4
  %30 = int.eqz %29
  %31 = select %30 %27 %28
  br.cond %31 %BB:12 %BB:1

#pred = {%BB:0}
%BB:1:
  %32 = local.get (arg)%5
  %33 = const i32 1
  memory.guard %memory:0 %32 32
  store.32 %memory:0 %32 %33
  br %BB:12

#pred = {%entry}
%BB:2:
  %34 = local.get (arg)%3
  %35 = local.get (arg)%4
  %36 = const i64 -9223372036854775808
  %37 = int.xor %35 %36
  %38 = int.or %34 %37
  %39 = const i64 0
  %40 = int.ne %38 %39
  br.cond %40 %BB:5 %BB:3

#pred = {%BB:2}
%BB:3:
  %41 = local.get (arg)%1
  %42 = const i64 2
  %43 = int.lt.u %41 %42
  %44 = const i32 0
  %45 = local.get (arg)%2
  %46 = int.eqz %45
  %47 = select %46 %43 %44
  br.cond %47 %BB:12 %BB:4

#pred = {%BB:3}
%BB:4:
  %48 = local.get (arg)%5
  %49 = const i32 1
  memory.guard %memory:0 %48 32
  store.32 %memory:0 %48 %49
  br %BB:12

#pred = {%BB:2}
%BB:5:
  %50 = local.get (arg)%2
  %51 = const i64 63
  %52 = int.shr.s %50 %51
  local.set %7 %52
  %53 = local.get (arg)%1
  %54 = int.xor %52 %53
  local.set %8 %54
  %55 = local.get %7
  %56 = int.sub %54 %55
  local.set %9 %56
  %57 = const i64 2
  %58 = int.lt.u %56 %57
  %59 = local.get %7
  %60 = local.get (arg)%2
  %61 = int.xor %59 %60
  %62 = local.get %7
  %63 = int.sub %61 %62
  %64 = local.get %8
  %65 = local.get %7
  %66 = int.lt.u %64 %65
  %67 = cast.u i64 %66
  %68 = int.sub %63 %67
  local.set %10 %68
  %69 = const i64 0
  %70 = int.lt.s %68 %69
  %71 = local.get %10
  %72 = int.eqz %71
  %73 = select %72 %58 %70
  br.cond %73 %BB:12 %BB:6

#pred = {%BB:5}
%BB:6:
  %74 = local.get (arg)%4
  %75 = const i64 63
  %76 = int.shr.s %74 %75
  local.set %8 %76
  %77 = local.get (arg)%3
  %78 = int.xor %76 %77
  local.set %11 %78
  %79 = local.get %8
  %80 = int.sub %78 %79
  local.set %12 %80
  %81 = const i64 2
  %82 = int.lt.u %80 %81
  %83 = local.get %8
  %84 = local.get (arg)%4
  %85 = int.xor %83 %84
  %86 = local.get %8
  %87 = int.sub %85 %86
  %88 = local.get %11
  %89 = local.get %8
  %90 = int.lt.u %88 %89
  %91 = cast.u i64 %90
  %92 = int.sub %87 %91
  local.set %11 %92
  %93 = const i64 0
  %94 = int.lt.s %92 %93
  %95 = local.get %11
  %96 = int.eqz %95
  %97 = select %96 %82 %94
  br.cond %97 %BB:12 %BB:7

#pred = {%BB:6}
%BB:7:
  %98 = local.get %7
  %99 = local.get %8
  %100 = int.xor %98 %99
  local.set %7 %100
  %101 = local.get %7
  %102 = int.or %100 %101
  %103 = const i64 0
  %104 = int.ne %102 %103
  br.cond %104 %BB:10 %BB:8

#pred = {%BB:7}
%BB:8:
  %105 = local.get %6
  %106 = const i32 16
  %107 = int.add %105 %106
  %108 = const i64 -1
  %109 = const i64 9223372036854775807
  %110 = local.get %12
  %111 = local.get %11
  call %function:115(%107, %108, %109, %110, %111)
  %112 = local.get %9
  %113 = local.get %6
  %114 = const i32 16
  %115 = int.add %113 %114
  memory.guard %memory:0 %115 64
  %116 = load.64 i64 %memory:0 %115
  %117 = int.le.u %112 %116
  %118 = local.get %10
  %119 = local.get %6
  %120 = const i32 24
  %121 = int.add %119 %120
  memory.guard %memory:0 %121 64
  %122 = load.64 i64 %memory:0 %121
  local.set %7 %122
  %123 = int.le.s %118 %122
  %124 = local.get %10
  %125 = local.get %7
  %126 = int.eq %124 %125
  %127 = select %126 %117 %123
  br.cond %127 %BB:12 %BB:9

#pred = {%BB:8}
%BB:9:
  %128 = local.get (arg)%5
  %129 = const i32 1
  memory.guard %memory:0 %128 32
  store.32 %memory:0 %128 %129
  br %BB:12

#pred = {%BB:7}
%BB:10:
  %130 = local.get %6
  %131 = const i32 32
  %132 = int.add %130 %131
  %133 = const i64 0
  %134 = const i64 -9223372036854775808
  %135 = const i64 0
  %136 = local.get %12
  %137 = int.sub %135 %136
  %138 = const i64 0
  %139 = local.get %11
  %140 = local.get %12
  %141 = const i64 0
  %142 = int.ne %140 %141
  %143 = cast.u i64 %142
  %144 = int.add %139 %143
  %145 = int.sub %138 %144
  call %function:110(%132, %133, %134, %137, %145)
  %146 = local.get %9
  %147 = local.get %6
  %148 = const i32 32
  %149 = int.add %147 %148
  memory.guard %memory:0 %149 64
  %150 = load.64 i64 %memory:0 %149
  %151 = int.le.u %146 %150
  %152 = local.get %10
  %153 = local.get %6
  %154 = const i32 40
  %155 = int.add %153 %154
  memory.guard %memory:0 %155 64
  %156 = load.64 i64 %memory:0 %155
  local.set %7 %156
  %157 = int.le.s %152 %156
  %158 = local.get %10
  %159 = local.get %7
  %160 = int.eq %158 %159
  %161 = select %160 %151 %157
  br.cond %161 %BB:12 %BB:11

#pred = {%BB:10}
%BB:11:
  %162 = local.get (arg)%5
  %163 = const i32 1
  memory.guard %memory:0 %162 32
  store.32 %memory:0 %162 %163
  br %BB:12

#pred = {%BB:6, %BB:5, %BB:11, %BB:8, %BB:0, %BB:10, %BB:1, %BB:3, %BB:9, %BB:4}
%BB:12:
  %164 = local.get %6
  %165 = local.get (arg)%3
  %166 = local.get (arg)%4
  %167 = local.get (arg)%1
  %168 = local.get (arg)%2
  call %function:112(%164, %165, %166, %167, %168)
  %169 = local.get (arg)%0
  %170 = local.get %6
  %171 = const i32 8
  %172 = int.add %170 %171
  memory.guard %memory:0 %172 64
  %173 = load.64 i64 %memory:0 %172
  %174 = const i32 8
  %175 = int.add %169 %174
  memory.guard %memory:0 %175 64
  store.64 %memory:0 %175 %173
  %176 = local.get (arg)%0
  %177 = local.get %6
  memory.guard %memory:0 %177 64
  %178 = load.64 i64 %memory:0 %177
  memory.guard %memory:0 %176 64
  store.64 %memory:0 %176 %178
  %179 = local.get %6
  %180 = const i32 48
  %181 = int.add %179 %180
  global.set %global:0%181
  ret

}

function %function:112 : [i32, i64, i64, i64, i64] -> [] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i64, (arg)%3:i64, (arg)%4:i64, %5:i64}
#pred = {}
%entry:
  %6 = local.get (arg)%0
  %7 = local.get (arg)%4
  %8 = local.get (arg)%1
  %9 = int.mul %7 %8
  %10 = local.get (arg)%2
  %11 = local.get (arg)%3
  %12 = int.mul %10 %11
  %13 = int.add %9 %12
  %14 = local.get (arg)%3
  %15 = const i64 32
  %16 = int.shr.u %14 %15
  local.set (arg)%4 %16
  %17 = local.get (arg)%1
  %18 = const i64 32
  %19 = int.shr.u %17 %18
  local.set (arg)%2 %19
  %20 = int.mul %16 %19
  %21 = int.add %13 %20
  %22 = local.get (arg)%3
  %23 = const i64 4294967295
  %24 = int.and %22 %23
  local.set (arg)%3 %24
  %25 = local.get (arg)%1
  %26 = const i64 4294967295
  %27 = int.and %25 %26
  local.set (arg)%1 %27
  %28 = int.mul %24 %27
  local.set %5 %28
  %29 = const i64 32
  %30 = int.shr.u %28 %29
  %31 = local.get (arg)%3
  %32 = local.get (arg)%2
  %33 = int.mul %31 %32
  %34 = int.add %30 %33
  local.set (arg)%3 %34
  %35 = const i64 32
  %36 = int.shr.u %34 %35
  %37 = int.add %21 %36
  %38 = local.get (arg)%3
  %39 = const i64 4294967295
  %40 = int.and %38 %39
  %41 = local.get (arg)%4
  %42 = local.get (arg)%1
  %43 = int.mul %41 %42
  %44 = int.add %40 %43
  local.set (arg)%3 %44
  %45 = const i64 32
  %46 = int.shr.u %44 %45
  %47 = int.add %37 %46
  %48 = const i32 8
  %49 = int.add %6 %48
  memory.guard %memory:0 %49 64
  store.64 %memory:0 %49 %47
  %50 = local.get (arg)%0
  %51 = local.get (arg)%3
  %52 = const i64 32
  %53 = int.shl %51 %52
  %54 = local.get %5
  %55 = const i64 4294967295
  %56 = int.and %54 %55
  %57 = int.or %53 %56
  memory.guard %memory:0 %50 64
  store.64 %memory:0 %50 %57
  ret

}

function %function:113 : [i32, i64, i64, i32] -> [] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i64, (arg)%3:i32, %4:i64}
#pred = {}
%entry:
  %5 = local.get (arg)%3
  %6 = const i32 64
  %7 = int.and %5 %6
  %8 = int.eqz %7
  br.cond %8 %BB:1 %BB:0

#pred = {%entry}
%BB:0:
  %9 = local.get (arg)%1
  %10 = local.get (arg)%3
  %11 = const i32 -64
  %12 = int.add %10 %11
  %13 = cast.u i64 %12
  %14 = int.shl %9 %13
  local.set (arg)%2 %14
  %15 = const i64 0
  local.set (arg)%1 %15
  br %BB:3

#pred = {%entry}
%BB:1:
  %16 = local.get (arg)%3
  %17 = int.eqz %16
  br.cond %17 %BB:3 %BB:2

#pred = {%BB:1}
%BB:2:
  %18 = local.get (arg)%1
  %19 = const i32 64
  %20 = local.get (arg)%3
  %21 = int.sub %19 %20
  %22 = cast.u i64 %21
  %23 = int.shr.u %18 %22
  %24 = local.get (arg)%2
  %25 = local.get (arg)%3
  %26 = cast.u i64 %25
  local.set %4 %26
  %27 = int.shl %24 %26
  %28 = int.or %23 %27
  local.set (arg)%2 %28
  %29 = local.get (arg)%1
  %30 = local.get %4
  %31 = int.shl %29 %30
  local.set (arg)%1 %31
  br %BB:3

#pred = {%BB:2, %BB:1, %BB:0}
%BB:3:
  %32 = local.get (arg)%0
  %33 = local.get (arg)%1
  memory.guard %memory:0 %32 64
  store.64 %memory:0 %32 %33
  %34 = local.get (arg)%0
  %35 = local.get (arg)%2
  %36 = const i32 8
  %37 = int.add %34 %36
  memory.guard %memory:0 %37 64
  store.64 %memory:0 %37 %35
  ret

}

function %function:114 : [i32, i64, i64, i64, i64, i32] -> [] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i64, (arg)%3:i64, (arg)%4:i64, (arg)%5:i32, %6:i32, %7:i64, %8:i64, %9:i64, %10:i64, %11:i64, %12:i64, %13:i32}
#pred = {}
%entry:
  %14 = global.get %global:0
  %15 = const i32 16
  %16 = int.sub %14 %15
  local.set %6 %16
  global.set %global:0%16
  %17 = local.get (arg)%3
  %18 = local.get (arg)%1
  %19 = int.le.u %17 %18
  %20 = local.get (arg)%4
  %21 = local.get (arg)%2
  %22 = int.le.u %20 %21
  %23 = local.get (arg)%4
  %24 = local.get (arg)%2
  %25 = int.eq %23 %24
  %26 = select %25 %19 %22
  br.cond %26 %BB:3 %BB:0

#pred = {%entry}
%BB:0:
  %27 = local.get (arg)%5
  br.cond %27 %BB:2 %BB:1

#pred = {%BB:0}
%BB:1:
  %28 = const i64 0
  local.set %7 %28
  br %BB:43

#pred = {%BB:0}
%BB:2:
  %29 = local.get (arg)%5
  %30 = local.get (arg)%1
  memory.guard %memory:0 %29 64
  store.64 %memory:0 %29 %30
  %31 = local.get (arg)%5
  %32 = local.get (arg)%2
  %33 = const i32 8
  %34 = int.add %31 %33
  memory.guard %memory:0 %34 64
  store.64 %memory:0 %34 %32
  %35 = const i64 0
  local.set %7 %35
  br %BB:43

#pred = {%entry}
%BB:3:
  %36 = const i64 0
  local.set %7 %36
  %37 = local.get (arg)%4
  %38 = const i64 0
  %39 = int.ne %37 %38
  br.cond %39 %BB:37 %BB:4

#pred = {%BB:3}
%BB:4:
  %40 = local.get (arg)%2
  %41 = local.get (arg)%3
  %42 = int.ge.u %40 %41
  br.cond %42 %BB:20 %BB:5

#pred = {%BB:4}
%BB:5:
  %43 = local.get (arg)%3
  %44 = int.clz %43
  local.set %8 %44
  %45 = int.eqz %44
  br.cond %45 %BB:7 %BB:6

#pred = {%BB:5}
%BB:6:
  %46 = local.get (arg)%1
  %47 = const i64 64
  %48 = local.get %8
  %49 = int.sub %47 %48
  %50 = int.shr.u %46 %49
  %51 = local.get (arg)%2
  %52 = local.get %8
  %53 = int.shl %51 %52
  %54 = int.or %50 %53
  local.set (arg)%2 %54
  %55 = local.get (arg)%1
  %56 = local.get %8
  %57 = int.shl %55 %56
  local.set (arg)%1 %57
  %58 = local.get (arg)%3
  %59 = local.get %8
  %60 = int.shl %58 %59
  local.set (arg)%3 %60
  br %BB:7

#pred = {%BB:6, %BB:5}
%BB:7:
  %61 = local.get (arg)%2
  %62 = local.get (arg)%2
  %63 = local.get (arg)%3
  %64 = const i64 32
  %65 = int.shr.u %63 %64
  local.set %9 %65
  %66 = int.div.u %62 %65
  local.set (arg)%4 %66
  %67 = local.get %9
  %68 = int.mul %66 %67
  %69 = int.sub %61 %68
  local.set %10 %69
  %70 = local.get (arg)%1
  %71 = const i64 4294967295
  %72 = int.and %70 %71
  local.set %11 %72
  %73 = local.get (arg)%1
  %74 = const i64 32
  %75 = int.shr.u %73 %74
  local.set (arg)%1 %75
  %76 = local.get (arg)%3
  %77 = const i64 4294967295
  %78 = int.and %76 %77
  local.set %7 %78
  br %BB:8

#pred = {%BB:11, %BB:7}
%BB:8:
  %79 = local.get (arg)%4
  %80 = const i64 4294967295
  %81 = int.gt.u %79 %80
  br.cond %81 %BB:11 %BB:9

#pred = {%BB:8}
%BB:9:
  %82 = local.get (arg)%4
  %83 = local.get %7
  %84 = int.mul %82 %83
  %85 = local.get %10
  %86 = const i64 32
  %87 = int.shl %85 %86
  %88 = local.get (arg)%1
  %89 = int.or %87 %88
  %90 = int.le.u %84 %89
  br.cond %90 %BB:13 %BB:10

#pred = {%BB:9}
%BB:10:
  br %BB:11

#pred = {%BB:10, %BB:8}
%BB:11:
  %91 = local.get (arg)%4
  %92 = const i64 -1
  %93 = int.add %91 %92
  local.set (arg)%4 %93
  %94 = local.get %10
  %95 = local.get %9
  %96 = int.add %94 %95
  local.set %10 %96
  %97 = const i64 4294967296
  %98 = int.lt.u %96 %97
  br.cond %98 %BB:8 %BB:12

#pred = {%BB:11}
%BB:12:
  br %BB:13

#pred = {%BB:12, %BB:9}
%BB:13:
  %99 = local.get (arg)%1
  %100 = local.get (arg)%2
  %101 = const i64 32
  %102 = int.shl %100 %101
  %103 = int.or %99 %102
  %104 = local.get (arg)%4
  %105 = local.get (arg)%3
  %106 = int.mul %104 %105
  %107 = int.sub %103 %106
  local.set (arg)%2 %107
  %108 = local.get (arg)%2
  %109 = local.get %9
  %110 = int.div.u %108 %109
  local.set %10 %110
  %111 = local.get %9
  %112 = int.mul %110 %111
  %113 = int.sub %107 %112
  local.set (arg)%1 %113
  br %BB:14

#pred = {%BB:17, %BB:13}
%BB:14:
  %114 = local.get %10
  %115 = const i64 4294967295
  %116 = int.gt.u %114 %115
  br.cond %116 %BB:17 %BB:15

#pred = {%BB:14}
%BB:15:
  %117 = local.get %10
  %118 = local.get %7
  %119 = int.mul %117 %118
  %120 = local.get (arg)%1
  %121 = const i64 32
  %122 = int.shl %120 %121
  %123 = local.get %11
  %124 = int.or %122 %123
  %125 = int.le.u %119 %124
  br.cond %125 %BB:19 %BB:16

#pred = {%BB:15}
%BB:16:
  br %BB:17

#pred = {%BB:16, %BB:14}
%BB:17:
  %126 = local.get %10
  %127 = const i64 -1
  %128 = int.add %126 %127
  local.set %10 %128
  %129 = local.get (arg)%1
  %130 = local.get %9
  %131 = int.add %129 %130
  local.set (arg)%1 %131
  %132 = const i64 4294967296
  %133 = int.lt.u %131 %132
  br.cond %133 %BB:14 %BB:18

#pred = {%BB:17}
%BB:18:
  br %BB:19

#pred = {%BB:18, %BB:15}
%BB:19:
  %134 = local.get %10
  %135 = local.get (arg)%3
  %136 = int.mul %134 %135
  local.set (arg)%1 %136
  %137 = local.get (arg)%2
  %138 = const i64 32
  %139 = int.shl %137 %138
  %140 = local.get %11
  %141 = int.or %139 %140
  local.set (arg)%2 %141
  %142 = const i64 0
  local.set %11 %142
  br %BB:35

#pred = {%BB:4}
%BB:20:
  %143 = local.get (arg)%2
  %144 = local.get (arg)%2
  %145 = local.get (arg)%3
  %146 = int.div.u %144 %145
  local.set %11 %146
  %147 = local.get (arg)%3
  %148 = int.mul %146 %147
  %149 = int.sub %143 %148
  local.set %12 %149
  %150 = local.get (arg)%3
  %151 = int.clz %150
  local.set %8 %151
  %152 = int.eqz %151
  br.cond %152 %BB:22 %BB:21

#pred = {%BB:20}
%BB:21:
  %153 = local.get %12
  %154 = local.get %8
  %155 = int.shl %153 %154
  %156 = local.get (arg)%1
  %157 = const i64 64
  %158 = local.get %8
  %159 = int.sub %157 %158
  %160 = int.shr.u %156 %159
  %161 = int.or %155 %160
  local.set %12 %161
  %162 = local.get (arg)%1
  %163 = local.get %8
  %164 = int.shl %162 %163
  local.set (arg)%1 %164
  %165 = local.get (arg)%3
  %166 = local.get %8
  %167 = int.shl %165 %166
  local.set (arg)%3 %167
  br %BB:22

#pred = {%BB:21, %BB:20}
%BB:22:
  %168 = local.get %12
  %169 = local.get %12
  %170 = local.get (arg)%3
  %171 = const i64 32
  %172 = int.shr.u %170 %171
  local.set (arg)%2 %172
  %173 = int.div.u %169 %172
  local.set (arg)%4 %173
  %174 = local.get (arg)%2
  %175 = int.mul %173 %174
  %176 = int.sub %168 %175
  local.set %10 %176
  %177 = local.get (arg)%1
  %178 = const i64 4294967295
  %179 = int.and %177 %178
  local.set %7 %179
  %180 = local.get (arg)%1
  %181 = const i64 32
  %182 = int.shr.u %180 %181
  local.set (arg)%1 %182
  %183 = local.get (arg)%3
  %184 = const i64 4294967295
  %185 = int.and %183 %184
  local.set %9 %185
  br %BB:23

#pred = {%BB:26, %BB:22}
%BB:23:
  %186 = local.get (arg)%4
  %187 = const i64 4294967295
  %188 = int.gt.u %186 %187
  br.cond %188 %BB:26 %BB:24

#pred = {%BB:23}
%BB:24:
  %189 = local.get (arg)%4
  %190 = local.get %9
  %191 = int.mul %189 %190
  %192 = local.get %10
  %193 = const i64 32
  %194 = int.shl %192 %193
  %195 = local.get (arg)%1
  %196 = int.or %194 %195
  %197 = int.le.u %191 %196
  br.cond %197 %BB:28 %BB:25

#pred = {%BB:24}
%BB:25:
  br %BB:26

#pred = {%BB:25, %BB:23}
%BB:26:
  %198 = local.get (arg)%4
  %199 = const i64 -1
  %200 = int.add %198 %199
  local.set (arg)%4 %200
  %201 = local.get %10
  %202 = local.get (arg)%2
  %203 = int.add %201 %202
  local.set %10 %203
  %204 = const i64 4294967296
  %205 = int.lt.u %203 %204
  br.cond %205 %BB:23 %BB:27

#pred = {%BB:26}
%BB:27:
  br %BB:28

#pred = {%BB:27, %BB:24}
%BB:28:
  %206 = local.get (arg)%1
  %207 = local.get %12
  %208 = const i64 32
  %209 = int.shl %207 %208
  %210 = int.or %206 %209
  %211 = local.get (arg)%4
  %212 = local.get (arg)%3
  %213 = int.mul %211 %212
  %214 = int.sub %210 %213
  local.set %12 %214
  %215 = local.get %12
  %216 = local.get (arg)%2
  %217 = int.div.u %215 %216
  local.set %10 %217
  %218 = local.get (arg)%2
  %219 = int.mul %217 %218
  %220 = int.sub %214 %219
  local.set (arg)%1 %220
  br %BB:29

#pred = {%BB:32, %BB:28}
%BB:29:
  %221 = local.get %10
  %222 = const i64 4294967295
  %223 = int.gt.u %221 %222
  br.cond %223 %BB:32 %BB:30

#pred = {%BB:29}
%BB:30:
  %224 = local.get %10
  %225 = local.get %9
  %226 = int.mul %224 %225
  %227 = local.get (arg)%1
  %228 = const i64 32
  %229 = int.shl %227 %228
  %230 = local.get %7
  %231 = int.or %229 %230
  %232 = int.le.u %226 %231
  br.cond %232 %BB:34 %BB:31

#pred = {%BB:30}
%BB:31:
  br %BB:32

#pred = {%BB:31, %BB:29}
%BB:32:
  %233 = local.get %10
  %234 = const i64 -1
  %235 = int.add %233 %234
  local.set %10 %235
  %236 = local.get (arg)%1
  %237 = local.get (arg)%2
  %238 = int.add %236 %237
  local.set (arg)%1 %238
  %239 = const i64 4294967296
  %240 = int.lt.u %238 %239
  br.cond %240 %BB:29 %BB:33

#pred = {%BB:32}
%BB:33:
  br %BB:34

#pred = {%BB:33, %BB:30}
%BB:34:
  %241 = local.get %10
  %242 = local.get (arg)%3
  %243 = int.mul %241 %242
  local.set (arg)%1 %243
  %244 = local.get %12
  %245 = const i64 32
  %246 = int.shl %244 %245
  %247 = local.get %7
  %248 = int.or %246 %247
  local.set (arg)%2 %248
  br %BB:35

#pred = {%BB:34, %BB:19}
%BB:35:
  %249 = local.get %10
  %250 = local.get (arg)%4
  %251 = const i64 32
  %252 = int.shl %250 %251
  %253 = int.add %249 %252
  local.set %7 %253
  %254 = local.get (arg)%5
  %255 = int.eqz %254
  br.cond %255 %BB:44 %BB:36

#pred = {%BB:35}
%BB:36:
  %256 = local.get (arg)%5
  %257 = const i64 0
  %258 = const i32 8
  %259 = int.add %256 %258
  memory.guard %memory:0 %259 64
  store.64 %memory:0 %259 %257
  %260 = local.get (arg)%5
  %261 = local.get (arg)%2
  %262 = local.get (arg)%1
  %263 = int.sub %261 %262
  %264 = local.get %8
  %265 = int.shr.u %263 %264
  memory.guard %memory:0 %260 64
  store.64 %memory:0 %260 %265
  br %BB:44

#pred = {%BB:3}
%BB:37:
  %266 = local.get %6
  %267 = local.get (arg)%3
  %268 = local.get (arg)%4
  %269 = local.get (arg)%4
  %270 = int.clz %269
  %271 = cast i32 %270
  %272 = local.get (arg)%2
  %273 = int.clz %272
  %274 = cast i32 %273
  %275 = int.sub %271 %274
  local.set %13 %275
  call %function:113(%266, %267, %268, %275)
  %276 = local.get %13
  %277 = const i32 0
  %278 = int.lt.s %276 %277
  br.cond %278 %BB:41 %BB:38

#pred = {%BB:37}
%BB:38:
  %279 = local.get %6
  %280 = const i32 8
  %281 = int.add %279 %280
  memory.guard %memory:0 %281 64
  %282 = load.64 i64 %memory:0 %281
  local.set (arg)%4 %282
  %283 = local.get %6
  memory.guard %memory:0 %283 64
  %284 = load.64 i64 %memory:0 %283
  local.set %10 %284
  %285 = local.get %13
  %286 = const i32 1
  %287 = int.add %285 %286
  local.set %13 %287
  %288 = const i64 0
  local.set %7 %288
  br %BB:39

#pred = {%BB:39, %BB:38}
%BB:39:
  %289 = local.get (arg)%2
  %290 = local.get (arg)%4
  %291 = local.get (arg)%2
  %292 = const i64 -1
  %293 = int.xor %291 %292
  %294 = int.add %290 %293
  %295 = local.get %10
  %296 = local.get (arg)%1
  %297 = const i64 -1
  %298 = int.xor %296 %297
  %299 = int.add %295 %298
  %300 = local.get %10
  %301 = int.lt.u %299 %300
  %302 = cast.u i64 %301
  %303 = int.add %294 %302
  %304 = const i64 63
  %305 = int.shr.s %303 %304
  local.set %9 %305
  %306 = local.get (arg)%4
  %307 = int.and %305 %306
  %308 = int.sub %289 %307
  %309 = local.get (arg)%1
  %310 = local.get %9
  %311 = local.get %10
  %312 = int.and %310 %311
  local.set (arg)%3 %312
  %313 = int.lt.u %309 %312
  %314 = cast.u i64 %313
  %315 = int.sub %308 %314
  local.set (arg)%2 %315
  %316 = local.get %10
  %317 = const i64 1
  %318 = int.shr.u %316 %317
  %319 = local.get (arg)%4
  %320 = const i64 63
  %321 = int.shl %319 %320
  %322 = int.or %318 %321
  local.set %10 %322
  %323 = local.get %7
  %324 = const i64 1
  %325 = int.shl %323 %324
  %326 = local.get %9
  %327 = int.sub %325 %326
  local.set %7 %327
  %328 = local.get (arg)%1
  %329 = local.get (arg)%3
  %330 = int.sub %328 %329
  local.set (arg)%1 %330
  %331 = local.get (arg)%4
  %332 = const i64 1
  %333 = int.shr.u %331 %332
  local.set (arg)%4 %333
  %334 = local.get %13
  %335 = const i32 -1
  %336 = int.add %334 %335
  local.set %13 %336
  %337 = const i32 0
  %338 = int.gt.s %336 %337
  br.cond %338 %BB:39 %BB:40

#pred = {%BB:39}
%BB:40:
  br %BB:41

#pred = {%BB:40, %BB:37}
%BB:41:
  %339 = local.get (arg)%5
  %340 = int.eqz %339
  br.cond %340 %BB:43 %BB:42

#pred = {%BB:41}
%BB:42:
  %341 = local.get (arg)%5
  %342 = local.get (arg)%2
  %343 = const i32 8
  %344 = int.add %341 %343
  memory.guard %memory:0 %344 64
  store.64 %memory:0 %344 %342
  %345 = local.get (arg)%5
  %346 = local.get (arg)%1
  memory.guard %memory:0 %345 64
  store.64 %memory:0 %345 %346
  br %BB:43

#pred = {%BB:42, %BB:41, %BB:2, %BB:1}
%BB:43:
  %347 = const i64 0
  local.set %11 %347
  br %BB:44

#pred = {%BB:43, %BB:36, %BB:35}
%BB:44:
  %348 = local.get (arg)%0
  %349 = local.get %7
  memory.guard %memory:0 %348 64
  store.64 %memory:0 %348 %349
  %350 = local.get (arg)%0
  %351 = local.get %11
  %352 = const i32 8
  %353 = int.add %350 %352
  memory.guard %memory:0 %353 64
  store.64 %memory:0 %353 %351
  %354 = local.get %6
  %355 = const i32 16
  %356 = int.add %354 %355
  global.set %global:0%356
  ret

}

function %function:115 : [i32, i64, i64, i64, i64] -> [] {
{(arg)%0:i32, (arg)%1:i64, (arg)%2:i64, (arg)%3:i64, (arg)%4:i64, %5:i32}
#pred = {}
%entry:
  %6 = global.get %global:0
  %7 = const i32 16
  %8 = int.sub %6 %7
  local.set %5 %8
  global.set %global:0%8
  %9 = local.get %5
  %10 = local.get (arg)%1
  %11 = local.get (arg)%2
  %12 = local.get (arg)%3
  %13 = local.get (arg)%4
  %14 = const i32 0
  call %function:114(%9, %10, %11, %12, %13, %14)
  %15 = local.get %5
  memory.guard %memory:0 %15 64
  %16 = load.64 i64 %memory:0 %15
  local.set (arg)%1 %16
  %17 = local.get (arg)%0
  %18 = local.get %5
  %19 = const i32 8
  %20 = int.add %18 %19
  memory.guard %memory:0 %20 64
  %21 = load.64 i64 %memory:0 %20
  %22 = const i32 8
  %23 = int.add %17 %22
  memory.guard %memory:0 %23 64
  store.64 %memory:0 %23 %21
  %24 = local.get (arg)%0
  %25 = local.get (arg)%1
  memory.guard %memory:0 %24 64
  store.64 %memory:0 %24 %25
  %26 = local.get %5
  %27 = const i32 16
  %28 = int.add %26 %27
  global.set %global:0%28
  ret

}

